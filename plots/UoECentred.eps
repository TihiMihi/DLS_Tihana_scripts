%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Centred Logo_CMYK.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 192 154
%%HiResBoundingBox: 0 0 191.9624 153.4460
%%CropBox: 0 0 191.9624 153.4460
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:12:43Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:12:43Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:12:43Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUs8y+Y9L8uaJd61qjSJY2ac5mijeVqdBRUDHc7VOw7kYYxs0EE0lvmLUdd1DyLLqv&#xA;lGeODUZ7Rb3T2uIfW5K0YlVOAYAO67A/EAexyUQAd1PLZgC+fb251XylD5oin03VWvYDbvZzzJpe&#xA;r212hiikiCsFZkmlilaGUclA7gmlnBsaY33sh/MS000+fvy8uruMMRqVzCDQbk2crw1PU8ZkRhvk&#xA;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&#xA;irsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:b439b4f0-99e6-47ff-8518-44dcc0320f42</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:b439b4f0-99e6-47ff-8518-44dcc0320f42</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:b2b2dacb-666d-4934-b628-dd682a1b6f78</stRef:instanceID>
            <stRef:documentID>xmp.did:b2b2dacb-666d-4934-b628-dd682a1b6f78</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0f67131-f09a-4a71-ba1b-8cda4a15bda1</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:15:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:71cf30f7-a45d-42cc-bd8c-ee25c623e2df</stEvt:instanceID>
                  <stEvt:when>2014-10-17T11:45:17+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b2b2dacb-666d-4934-b628-dd682a1b6f78</stEvt:instanceID>
                  <stEvt:when>2014-10-17T11:45:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b439b4f0-99e6-47ff-8518-44dcc0320f42</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:12:43Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999935</stDim:w>
            <stDim:h>102.775926</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 199 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>6.832989</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>85.232317</xmpG:yellow>
                           <xmpG:black>0.955215</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -153.446 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 153.446 li
191.962 153.446 li
191.962 0 li
cp
clp
60.1752 33.6107 mo
60.9077 33.7732 61.1402 33.6811 61.2568 33.1608 cv
61.4376 33.2008 li
60.9559 35.3572 li
60.7746 35.3162 li
60.8726 34.8803 60.8021 34.5983 59.9621 34.4106 cv
55.3219 33.3715 li
55.1242 34.2535 li
54.9409 35.0718 55.0918 35.4952 55.7168 35.6909 cv
55.6767 35.8717 li
54.2855 35.5598 li
54.3256 35.3789 li
54.4192 35.311 54.4934 35.2275 54.5692 35.0887 cv
54.6313 34.957 54.6955 34.7699 54.7534 34.5163 cv
55.4656 31.3298 li
55.5842 30.7984 55.5755 30.541 55.4588 30.3134 cv
55.5012 30.1225 li
56.8929 30.4329 li
56.8668 30.5502 li
56.3311 30.5535 55.9246 30.674 55.7081 31.6418 cv
55.5012 32.5648 li
60.1752 33.6107 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .871122 .421698 .518273 cmyk
f
60.5031 26.6886 mo
62.1268 27.4808 li
62.8018 27.8098 63.0989 27.7485 63.3328 27.2692 cv
63.4986 27.3497 li
62.5106 29.376 li
62.3442 29.294 li
62.555 28.8634 62.5077 28.5871 61.7641 28.224 cv
58.272 26.5203 li
57.6075 26.1958 57.3158 26.2233 57.0722 26.7229 cv
56.9059 26.6409 li
57.894 24.6161 li
58.0598 24.6981 li
57.8452 25.1374 57.9204 25.4291 58.6347 25.7773 cv
60.2293 26.5555 li
61.7178 23.5032 li
60.1237 22.7259 li
59.4394 22.3912 59.1621 22.438 58.9282 22.9173 cv
58.7619 22.8363 li
59.7403 20.8312 li
59.9066 20.9118 li
59.6728 21.3911 59.8213 21.6573 60.4867 21.9818 cv
63.9789 23.6855 li
64.6438 24.01 64.9452 23.9632 65.1791 23.4839 cv
65.3455 23.5649 li
64.3665 25.5699 li
64.2002 25.4893 li
64.4153 25.0501 64.3598 24.7916 63.6153 24.4295 cv
61.9926 23.6363 li
60.5031 26.6886 li
cp
f
67.8756 16.436 mo
67.7574 16.5782 li
67.2641 16.3372 67.1508 16.3699 66.74 16.8637 cv
65.751 18.0509 li
67.4648 19.4792 li
67.7 19.675 67.8611 19.6682 68.0839 19.3996 cv
68.7812 18.564 li
69.3656 17.8609 69.4779 17.6584 69.0883 16.8512 cv
69.2069 16.7089 li
69.9202 17.6718 li
67.0438 21.1249 li
66.9015 21.0063 li
67.2144 20.6307 67.2367 20.3655 66.6011 19.8365 cv
63.6081 17.343 li
63.0135 16.8478 62.7353 16.842 62.3944 17.2518 cv
62.2516 17.1337 li
65.1284 13.6797 li
65.9313 14.3485 li
65.8542 14.441 li
65.2379 14.1108 65.0561 14.2429 64.6174 14.77 cv
63.4673 16.149 li
65.5171 17.8561 li
66.6315 16.518 li
66.9025 16.1925 66.9488 16.0184 66.5944 15.6095 cv
66.7135 15.4672 li
67.8756 16.436 li
cp
f
79.558 9.40974 mo
79.3781 10.3096 78.9697 10.9152 78.2488 11.3213 cv
76.9309 12.0633 75.8768 11.433 75.3484 10.4943 cv
73.841 7.82086 li
73.4355 7.10044 73.1654 7.0638 72.7391 7.30546 cv
72.649 7.1434 li
74.6111 6.03723 li
74.7017 6.19919 li
74.2561 6.45043 74.1665 6.71233 74.5565 7.4052 cv
76.1059 10.1548 li
76.5765 10.9889 77.3775 11.3251 78.297 10.8072 cv
78.9229 10.4542 79.2961 9.83172 79.3448 9.03072 cv
77.5018 5.75855 li
77.1494 5.13263 76.8837 4.99516 76.4376 5.22132 cv
76.3465 5.06074 li
78.2614 3.98104 li
78.352 4.14261 li
77.8968 4.39868 77.8539 4.69811 78.2223 5.35246 cv
80.1289 8.73801 li
80.5301 9.44934 80.8136 9.48786 81.2317 9.25351 cv
81.3219 9.41507 li
79.9857 10.1673 li
79.558 9.40974 li
cp
f
89.4461 6.94332 mo
89.2662 6.99003 li
83.6625 2.83054 li
83.6413 2.83488 li
84.7272 7.07298 li
84.8834 7.68537 85.1824 7.84456 85.7307 7.70374 cv
85.7765 7.88357 li
83.9432 8.35325 li
83.8964 8.17342 li
84.4027 8.04365 84.6047 7.82432 84.3806 6.94905 cv
83.4759 3.41646 li
83.3028 2.74186 83.027 2.40816 82.2935 2.52864 cv
82.2477 2.35029 li
83.798 1.9529 li
88.7763 5.68813 li
88.797 5.68231 li
87.8924 2.1511 li
87.6904 1.35987 87.4276 1.2142 86.9015 1.34871 cv
86.8547 1.16986 li
88.6789 .703539 li
88.7247 .88199 li
88.134 1.03338 88.0062 1.32461 88.1875 2.03012 cv
89.4461 6.94332 li
cp
f
94.5305 5.28067 mo
94.5681 6.04207 94.7643 6.26052 95.286 6.23445 cv
95.2947 6.41962 li
93.0558 6.53151 li
93.0463 6.34585 li
93.5573 6.32076 93.743 6.11486 93.704 5.32165 cv
93.5111 1.44085 li
93.4725 .6587 93.2878 .460995 92.7554 .487066 cv
92.7458 .302788 li
94.9856 .190997 li
94.9943 .37567 li
94.4721 .401643 94.2995 .650013 94.3371 1.39987 cv
94.5305 5.28067 li
cp
f
100.83 6.84446 mo
100.658 6.82175 li
99.4157 1.55126 li
99.2242 .756571 99.1123 .446083 98.5322 .345747 cv
98.5568 .162947 li
100.801 .460995 li
100.776 .645174 li
100.334 .585921 100.087 .794196 100.206 1.30536 cv
101.186 5.49665 li
103.132 1.83676 li
103.396 1.3338 103.344 .986569 102.783 .911419 cv
102.808 .728129 li
104.609 .968303 li
104.583 1.16216 li
104.119 1.10044 103.727 1.41142 103.301 2.20996 cv
100.83 6.84446 li
cp
f
110.666 6.96495 mo
110.492 6.90135 li
110.553 6.35592 110.483 6.26052 109.881 6.0396 cv
108.43 5.50919 li
107.663 7.60439 li
107.558 7.89029 107.618 8.0403 107.946 8.15989 cv
108.969 8.53457 li
109.827 8.84851 110.057 8.88604 110.685 8.2462 cv
110.858 8.31029 li
110.193 9.30605 li
105.971 7.76161 li
106.035 7.58849 li
106.495 7.75578 106.751 7.68784 107.035 6.91142 cv
108.375 3.25252 li
108.64 2.52627 108.552 2.26249 108.05 2.0793 cv
108.113 1.9052 li
112.335 3.44974 li
111.976 4.43048 li
111.863 4.3895 li
111.966 3.69752 111.78 3.57121 111.137 3.33587 cv
109.45 2.71865 li
108.534 5.2228 li
110.17 5.82116 li
110.568 5.96682 110.747 5.95092 111.012 5.48075 cv
111.186 5.54444 li
110.666 6.96495 li
cp
f
116.038 9.14458 mo
116.456 9.41991 li
117.41 10.0482 116.875 11.4548 117.068 13.2765 cv
118.132 13.9777 li
118.233 13.8229 li
117.413 13.1902 118.216 11.2576 117.658 9.98983 cv
118.571 10.2652 119.196 9.98746 119.572 9.41507 cv
120.028 8.72457 119.908 7.67964 118.736 6.90806 cv
116.6 5.5 li
116.5 5.65485 li
116.917 5.93068 117.007 6.17174 116.556 6.85355 cv
114.408 10.1153 li
113.946 10.8163 113.672 10.8173 113.272 10.553 cv
113.171 10.7079 li
115.043 11.9418 li
115.145 11.787 li
114.718 11.5059 114.68 11.2065 115.099 10.5704 cv
116.038 9.14458 li
cp
117.75 6.54494 mo
118.295 6.90322 li
119.094 7.43176 119.288 8.26358 118.834 8.95408 cv
118.44 9.55294 117.7 9.92623 116.819 9.34466 cv
116.181 8.92564 li
117.75 6.54494 li
cp
f
125.971 14.796 mo
125.84 14.6638 li
126.431 13.9459 126.229 13.2278 125.786 12.778 cv
125.328 12.3127 124.743 12.2321 124.332 12.6357 cv
123.511 13.4449 124.408 14.7926 124.399 16.0536 cv
124.394 16.6694 124.191 17.0218 123.896 17.3122 cv
123.198 17.9998 122.075 17.9906 121.387 17.2928 cv
120.922 16.8193 120.765 16.1948 120.62 16.0478 cv
120.544 15.9707 120.435 15.9692 120.281 16.0454 cv
120.151 15.9123 li
121.354 14.7299 li
121.482 14.862 li
120.669 15.679 121.061 16.6202 121.443 17.0084 cv
121.971 17.5432 122.631 17.5947 123.113 17.1222 cv
123.88 16.3656 123.062 14.8201 123.069 13.8345 cv
123.073 13.2959 123.276 12.8816 123.625 12.5378 cv
124.308 11.8666 125.254 11.8975 125.964 12.6179 cv
126.43 13.091 126.481 13.4839 126.649 13.6547 cv
126.718 13.7241 126.749 13.725 126.888 13.6488 cv
127.009 13.7728 li
125.971 14.796 li
cp
f
126.499 21.4673 mo
125.873 21.9009 125.791 22.1834 126.088 22.6135 cv
125.937 22.7182 li
124.659 20.8757 li
124.812 20.771 li
125.102 21.191 125.375 21.2397 126.028 20.7879 cv
129.222 18.5746 li
129.866 18.128 129.936 17.8677 129.633 17.4283 cv
129.784 17.3237 li
131.062 19.1662 li
130.91 19.2718 li
130.613 18.8432 130.31 18.8273 129.692 19.255 cv
126.499 21.4673 li
cp
f
129.604 27.126 mo
128.921 27.439 128.793 27.6526 129.014 28.1377 cv
128.847 28.2148 li
127.927 26.2074 li
128.095 26.1298 li
128.281 26.5362 128.508 26.7185 129.29 26.3598 cv
133.613 24.3798 li
133.237 23.5582 li
132.887 22.7953 132.511 22.5494 131.895 22.7717 cv
131.817 22.6044 li
133.114 22.0103 li
133.191 22.1776 li
133.158 22.289 133.149 22.4004 133.173 22.5566 cv
133.203 22.6998 133.265 22.8864 133.373 23.1241 cv
134.734 26.0926 li
134.96 26.5874 135.124 26.7865 135.354 26.8969 cv
135.436 27.0744 li
134.139 27.67 li
134.089 27.5604 li
134.514 27.234 134.764 26.8912 134.352 25.9913 cv
133.957 25.1307 li
129.604 27.126 li
cp
f
132.062 34.7063 mo
131.329 34.8644 131.125 35.0636 131.237 35.5838 cv
131.057 35.6239 li
130.581 33.4 li
130.761 33.36 li
130.862 33.8292 131.016 34.0851 131.889 33.8986 cv
133.805 33.4878 li
135.549 31.7566 li
136.129 31.1876 136.228 30.9769 136.147 30.4932 cv
136.328 30.4547 li
136.838 32.8386 li
136.657 32.8777 li
136.513 32.206 136.262 32.1824 135.943 32.5064 cv
134.349 34.1055 li
136.089 34.7463 li
136.631 34.942 137.083 34.8669 136.974 34.3557 cv
137.155 34.3171 li
137.512 35.988 li
137.331 36.0275 li
137.199 35.5656 137.038 35.4334 136.432 35.2058 cv
133.978 34.2969 li
132.062 34.7063 li
cp
f
57.8414 49.6006 mo
56.0626 50.1127 55.0754 51.9143 55.5904 53.7032 cv
56.104 55.4912 57.9012 56.5029 59.68 55.9908 cv
61.4266 55.4884 62.3929 53.6936 61.8822 51.9152 cv
61.3547 50.0847 59.6192 49.0885 57.8414 49.6006 cv
cp
58.0959 50.5245 mo
59.832 50.0259 61.2511 50.5901 61.6581 52.003 cv
62.0125 53.2354 61.2453 54.5442 59.3623 55.0871 cv
57.9094 55.5047 56.2496 55.1334 55.8175 53.6261 cv
55.4289 52.2768 56.3489 51.026 58.0959 50.5245 cv
cp
f
60.3257 61.7069 mo
59.6636 62.084 59.5575 62.3579 59.8165 62.8121 cv
59.6559 62.9056 li
58.5435 60.9566 li
58.705 60.8649 li
58.9639 61.3192 59.2446 61.3722 59.9163 60.9875 cv
63.2898 59.0634 li
63.9712 58.6748 64.0594 58.4124 63.8005 57.9582 cv
63.96 57.8646 li
66.0803 61.5815 li
65.1159 62.1303 li
65.0465 62.0087 li
65.6319 61.4985 65.5793 61.3163 65.2432 60.7289 cv
64.4558 59.3489 li
62.1875 60.6441 li
62.9914 62.0531 li
63.2232 62.4591 63.5179 62.4909 63.9794 62.2913 cv
64.0662 62.4408 li
62.5438 63.3107 li
62.458 63.1603 li
62.8346 62.9191 62.9537 62.6018 62.7372 62.2228 cv
61.9227 60.7955 li
60.3257 61.7069 li
cp
f
72.2849 73.7312 mo
72.1412 73.6145 li
72.3789 73.1187 72.3442 73.0059 71.8475 72.6008 cv
70.6531 71.6181 li
69.2379 73.3435 li
69.0445 73.5797 69.0532 73.7418 69.3227 73.9626 cv
70.1637 74.6522 li
70.8706 75.2318 71.0755 75.3446 71.8784 74.9463 cv
72.0221 75.063 li
71.0654 75.7853 li
67.5896 72.9335 li
67.7063 72.7918 li
68.0854 73.1023 68.3496 73.1217 68.8742 72.4822 cv
71.3451 69.4694 li
71.8349 68.8724 71.8393 68.5947 71.4266 68.2562 cv
71.5432 68.1135 li
75.0195 70.9633 li
74.3569 71.7705 li
74.2643 71.6962 li
74.5898 71.0752 74.4553 70.8958 73.9258 70.4608 cv
72.5371 69.3209 li
70.8465 71.3828 li
72.1923 72.4881 li
72.5212 72.7562 72.6948 72.8005 73.1008 72.4436 cv
73.244 72.5623 li
72.2849 73.7312 li
cp
f
76.6208 77.964 mo
76.2978 78.668 76.0186 78.7779 75.5633 78.5696 cv
75.4867 78.7374 li
78.1755 79.9767 li
80.3994 81.0009 81.9048 80.1002 82.5602 78.6776 cv
83.2391 77.2049 82.8804 75.2781 80.7167 74.2789 cv
78.0974 73.0744 li
78.0188 73.2413 li
78.4947 73.4601 78.5618 73.7553 78.2468 74.4361 cv
76.6208 77.964 li
cp
79.3901 73.9336 mo
80.4675 74.4304 li
82.2564 75.253 82.3099 76.9321 81.6855 78.287 cv
80.9757 79.8292 79.6882 80.4088 78.2855 79.7636 cv
77.702 79.4955 li
77.1783 79.2534 77.0582 78.994 77.4633 78.1135 cv
79.3901 73.9336 li
cp
f
87.593 81.8988 mo
87.429 82.6433 87.5602 82.9085 88.0704 83.0194 cv
88.0309 83.1997 li
85.8411 82.7176 li
85.8811 82.5371 li
86.3803 82.6462 86.6141 82.4986 86.7853 81.7213 cv
87.6214 77.9283 li
87.7892 77.1635 87.6634 76.9234 87.1426 76.8095 cv
87.1827 76.6273 li
89.3714 77.1104 li
89.3323 77.2907 li
88.8216 77.178 88.5902 77.3718 88.4286 78.1057 cv
87.593 81.8988 li
cp
f
98.8703 83.9105 mo
98.6861 83.9134 li
94.23 78.5397 li
94.2078 78.5426 li
94.2561 82.9172 li
94.2628 83.5479 94.5156 83.7726 95.0816 83.7668 cv
95.084 83.9529 li
93.1905 83.9723 li
93.188 83.789 li
93.7097 83.7832 93.9591 83.6173 93.9489 82.7127 cv
93.9089 79.0683 li
93.9017 78.3709 93.7122 77.9822 92.9705 77.9244 cv
92.969 77.7392 li
94.5691 77.7209 li
98.5183 82.5324 li
98.5404 82.5314 li
98.4995 78.8859 li
98.4908 78.069 98.2704 77.8666 97.7265 77.8723 cv
97.7251 77.6862 li
99.6081 77.665 li
99.6096 77.8502 li
99.0001 77.8588 98.8067 78.1095 98.8149 78.8386 cv
98.8703 83.9105 li
cp
f
105.459 79.671 mo
106.027 79.5147 li
107.086 79.2245 107.922 79.6362 108.164 80.5197 cv
108.407 81.4002 107.942 81.9682 107.334 82.134 cv
106.841 82.272 li
106.369 82.4013 106.167 82.2411 105.944 81.433 cv
105.459 79.671 li
cp
105.175 81.757 mo
105.378 82.4928 105.26 82.7619 104.756 82.8998 cv
104.805 83.0802 li
107.575 82.3163 li
108.708 82.0058 109.35 81.2188 109.102 80.3171 cv
108.879 79.5089 108.06 78.9882 107.084 79.0547 cv
107.079 79.0325 li
107.832 78.532 108.092 77.9996 107.911 77.3361 cv
107.7 76.5713 106.866 76.0429 105.418 76.444 cv
103.151 77.0661 li
103.2 77.2435 li
103.704 77.1066 103.935 77.2464 104.145 78.0131 cv
105.175 81.757 li
cp
105.395 79.4414 mo
104.694 76.8896 li
105.292 76.7257 li
106.268 76.4575 106.878 76.8645 107.086 77.6206 cv
107.293 78.3768 106.896 79.0277 106.015 79.2688 cv
105.395 79.4414 li
cp
f
118.077 76.6543 mo
117.911 77.557 117.511 78.1694 116.798 78.5841 cv
115.491 79.3479 114.427 78.7336 113.884 77.8039 cv
112.335 75.1537 li
111.919 74.44 111.649 74.4092 111.226 74.6551 cv
111.132 74.496 li
113.078 73.3599 li
113.171 73.52 li
112.73 73.7774 112.644 74.0417 113.045 74.7273 cv
114.636 77.4518 li
115.119 78.2793 115.925 78.6024 116.836 78.071 cv
117.457 77.7094 117.822 77.0796 117.857 76.2772 cv
115.963 73.0349 li
115.602 72.4147 115.335 72.2807 114.892 72.515 cv
114.798 72.3549 li
116.695 71.2478 li
116.79 71.406 li
116.338 71.6712 116.299 71.9702 116.678 72.6172 cv
118.637 75.9734 li
119.047 76.6794 119.332 76.715 119.745 76.472 cv
119.839 76.6312 li
118.516 77.4065 li
118.077 76.6543 li
cp
f
122.808 70.3895 mo
123.16 70.0317 li
123.963 69.2187 125.239 70.0182 127.064 70.1821 cv
127.957 69.2765 li
127.826 69.1454 li
127.046 69.8292 125.306 68.6622 123.953 68.966 cv
124.402 68.1222 124.251 67.4538 123.763 66.9726 cv
123.174 66.391 122.126 66.3062 121.14 67.3053 cv
119.345 69.127 li
119.476 69.2573 li
119.828 68.9014 120.082 68.8609 120.663 69.4337 cv
123.444 72.1775 li
124.041 72.7667 123.989 73.0349 123.653 73.3763 cv
123.784 73.5064 li
125.359 71.9093 li
125.227 71.7811 li
124.868 72.1437 124.568 72.1225 124.026 71.5873 cv
122.808 70.3895 li
cp
120.593 68.2022 mo
121.051 67.7373 li
121.723 67.0555 122.577 67.0276 123.167 67.609 cv
123.678 68.1135 123.899 68.911 123.159 69.6633 cv
122.623 70.2062 li
120.593 68.2022 li
cp
f
133.053 61.7069 mo
132.956 62.056 132.424 63.0329 132.277 63.2741 cv
130.85 65.6166 128.962 65.5365 127.735 64.7892 cv
125.848 63.6415 125.66 61.5632 126.459 60.2535 cv
126.917 59.5003 127.344 59.3653 127.593 58.9554 cv
127.695 58.7886 127.694 58.6864 127.597 58.5514 cv
127.699 58.3826 li
129.27 59.3402 li
129.18 59.4888 li
128.081 59.0114 127.104 59.6527 126.663 60.3779 cv
125.995 61.4744 126.448 62.8835 127.908 63.7727 cv
129.47 64.7255 131.189 64.4978 131.958 63.2336 cv
132.19 62.8507 132.409 62.2855 131.934 61.9953 cv
131.358 61.6452 li
130.708 61.2498 130.384 61.2555 130.119 61.6914 cv
129.994 61.8959 li
129.836 61.7994 li
131.15 59.644 li
131.307 59.7395 li
130.99 60.2612 131.157 60.5534 131.621 60.8351 cv
133.053 61.7069 li
cp
f
132.878 54.5114 mo
134.614 55.012 li
135.335 55.2202 135.617 55.1075 135.764 54.5953 cv
135.942 54.6465 li
135.318 56.8096 li
135.14 56.7594 li
135.273 56.3004 135.179 56.0352 134.384 55.8047 cv
130.652 54.7293 li
129.94 54.5249 129.658 54.6001 129.503 55.1334 cv
129.325 55.0824 li
129.95 52.9191 li
130.128 52.9693 li
129.992 53.44 130.117 53.7128 130.88 53.9328 cv
132.586 54.4255 li
133.527 51.1639 li
131.822 50.6712 li
131.089 50.4609 130.825 50.5525 130.677 51.0646 cv
130.5 51.0144 li
131.118 48.8696 li
131.296 48.9217 li
131.148 49.4337 131.34 49.672 132.051 49.8765 cv
135.785 50.9537 li
136.496 51.1581 136.785 51.0617 136.932 50.5496 cv
137.111 50.5998 li
136.491 52.7426 li
136.313 52.6925 li
136.449 52.2209 136.35 51.9779 135.555 51.7494 cv
133.82 51.2469 li
132.878 54.5114 li
cp
f
57.5395 42.6327 mo
57.5381 42.9365 57.2907 43.1815 56.9864 43.1787 cv
56.6841 43.1787 56.4391 42.9298 56.4415 42.6289 cv
56.4435 42.3231 56.6908 42.0802 56.9931 42.0811 cv
57.2965 42.0844 57.5409 42.3299 57.5395 42.6327 cv
cp
f
135.506 42.6443 mo
135.504 42.9472 135.256 43.1921 134.953 43.1892 cv
134.649 43.1882 134.406 42.9413 134.407 42.6376 cv
134.409 42.3348 134.656 42.0903 134.959 42.0913 cv
135.262 42.0946 135.507 42.3405 135.506 42.6443 cv
cp
f
111.961 70.942 mo
112.4 70.7135 112.801 70.4088 113.224 70.1455 cv
113.583 69.9294 113.942 69.7086 114.301 69.4888 cv
114.623 69.2486 114.918 68.9746 115.25 68.7471 cv
115.596 68.4954 115.94 68.2436 116.286 67.9939 cv
116.359 67.9253 116.431 67.854 116.502 67.7846 cv
116.583 67.7422 116.665 67.6958 116.744 67.6486 cv
117.039 67.4249 117.339 67.1587 117.613 66.9031 cv
117.835 66.6987 117.999 66.4652 118.232 66.258 cv
118.462 66.0487 118.716 65.8597 118.952 65.6513 cv
119.051 65.5606 119.104 65.4613 119.192 65.3726 cv
119.382 65.1874 119.581 65.01 119.753 64.8104 cv
119.872 64.6619 119.994 64.5142 120.116 64.3677 cv
120.546 63.9549 120.937 63.5007 121.297 63.0387 cv
121.589 62.6906 121.882 62.3385 122.173 61.9914 cv
122.366 61.7203 122.559 61.4465 122.749 61.1755 cv
122.85 61.0675 122.951 60.9594 123.054 60.8515 cv
123.366 60.4146 123.681 59.9767 123.994 59.5369 cv
124.086 59.3865 124.142 59.2322 124.229 59.0788 cv
124.299 58.9776 124.369 58.8754 124.438 58.7799 cv
124.499 58.6526 124.556 58.5243 124.617 58.396 cv
124.83 58.0334 125.029 57.6699 125.226 57.3024 cv
125.391 57.0208 125.558 56.7392 125.722 56.4547 cv
125.86 56.1693 125.946 55.8674 126.073 55.58 cv
126.218 55.2781 126.359 54.9762 126.502 54.6754 cv
126.984 53.3763 127.46 52.0744 127.846 50.7329 cv
127.875 50.5747 127.903 50.4117 127.931 50.2535 cv
128.036 49.7626 128.171 49.2564 128.268 48.7548 cv
128.298 48.4973 128.326 48.2379 128.357 47.9795 cv
128.427 47.56 128.512 47.1077 128.57 46.6813 cv
128.597 46.339 128.624 45.9918 128.65 45.6475 cv
128.676 45.5134 128.702 45.3794 128.729 45.2434 cv
128.744 44.9561 128.76 44.6677 128.777 44.3803 cv
128.793 44.2346 128.837 44.0997 128.844 43.9483 cv
128.844 43.7476 128.838 43.545 128.836 43.3445 cv
128.926 42.0426 128.949 40.6277 128.878 39.3393 cv
128.838 38.6671 128.682 38.0045 128.614 37.3492 cv
128.537 36.6539 128.485 35.9662 128.346 35.3052 cv
127.962 33.4853 127.456 31.6987 126.815 29.9994 cv
126.723 29.7545 126.582 29.5302 126.481 29.2906 cv
126.272 28.7852 126.037 28.3161 125.793 27.8348 cv
125.713 27.6959 125.634 27.5595 125.554 27.4206 cv
125.354 26.9996 125.216 26.543 124.994 26.1336 cv
124.856 25.8809 124.694 25.6659 124.533 25.4234 cv
124.411 25.1605 124.285 24.8987 124.163 24.6344 cv
123.703 23.9188 123.225 23.2168 122.746 22.5156 cv
122.564 22.304 122.382 22.0942 122.202 21.884 cv
122 21.6245 121.799 21.3636 121.598 21.1032 cv
121.405 20.9085 121.192 20.7459 121.021 20.5294 cv
120.923 20.4055 120.866 20.2748 120.763 20.1494 cv
120.612 19.9845 120.461 19.8182 120.31 19.6556 cv
120.22 19.5722 120.129 19.4902 120.039 19.4064 cv
119.809 19.1455 119.594 18.8769 119.356 18.6209 cv
119.147 18.4265 118.941 18.2307 118.734 18.035 cv
118.533 17.8334 118.334 17.6309 118.132 17.4274 cv
117.857 17.2133 117.578 16.9992 117.3 16.7865 cv
117.016 16.5349 116.728 16.287 116.442 16.0353 cv
116.253 15.8921 116.048 15.7927 115.855 15.6654 cv
115.612 15.487 115.364 15.3081 115.117 15.1307 cv
114.932 14.9995 114.774 14.8563 114.597 14.7106 cv
114.463 14.6311 114.331 14.5477 114.198 14.4661 cv
114.02 14.3398 113.842 14.2145 113.662 14.0871 cv
113.074 13.7274 112.444 13.454 111.833 13.1392 cv
111.611 13.0003 111.388 12.859 111.168 12.7191 cv
110.782 12.5258 110.399 12.3319 110.016 12.1386 cv
109.702 11.9885 109.375 11.8791 109.053 11.7528 cv
108.896 11.665 108.737 11.5787 108.581 11.4909 cv
108.459 11.4476 108.336 11.4056 108.214 11.3622 cv
108.022 11.2768 107.829 11.1896 107.636 11.1042 cv
107.032 10.8844 106.398 10.7276 105.772 10.5353 cv
105.478 10.4465 105.17 10.3255 104.872 10.2392 cv
104.219 10.0482 103.57 9.94786 102.894 9.79647 cv
102.462 9.69761 102.009 9.57318 101.567 9.49852 cv
101.281 9.45843 100.993 9.4209 100.709 9.3808 cv
100.233 9.28195 99.7021 9.19663 99.205 9.13639 cv
99.0164 9.13204 98.8231 9.1272 98.6307 9.12049 cv
98.4995 9.10212 98.3645 9.08523 98.229 9.06696 cv
97.97 9.0635 97.7111 9.05916 97.4502 9.05442 cv
96.8672 9.01343 96.25 8.96662 95.6366 8.96228 cv
95.3989 9.0317 95.0647 8.98973 94.8005 8.98835 cv
94.4837 8.98835 94.1673 8.98973 93.8505 8.98973 cv
93.7632 9.00425 93.6774 9.01818 93.5901 9.0317 cv
93.3703 9.03753 93.1499 9.04326 92.929 9.04859 cv
92.8123 9.07605 92.6957 9.10449 92.5785 9.13293 cv
92.4647 9.14794 92.3504 9.16048 92.2357 9.1749 cv
92.1257 9.1749 92.0134 9.16483 91.9184 9.20245 cv
91.8533 9.21253 91.7853 9.22072 91.7187 9.22991 cv
91.5765 9.22991 91.4256 9.22507 91.3137 9.28442 cv
91.0046 9.28343 90.5451 9.32294 90.3054 9.4527 cv
90.2388 9.4609 90.1708 9.47008 90.1043 9.48015 cv
89.908 9.47778 89.6491 9.50287 89.4972 9.59155 cv
88.989 9.58819 88.5685 9.80417 88.1075 9.91369 cv
87.8625 9.97156 87.5708 9.99901 87.361 10.1263 cv
87.1604 10.1253 86.943 10.1755 86.7843 10.2666 cv
86.4631 10.2652 86.1849 10.4518 85.9106 10.5579 cv
85.7485 10.6206 85.5456 10.6239 85.4009 10.7204 cv
85.0797 10.7194 84.7962 10.9051 84.5315 11.0242 cv
84.3487 11.1028 84.165 11.178 83.9822 11.2557 cv
82.9927 11.6709 82.0264 12.1444 81.0755 12.6395 cv
80.9159 12.7427 80.7543 12.8455 80.5938 12.9468 cv
79.4543 13.5234 78.3288 14.1566 77.321 14.9768 cv
77.0236 15.1899 76.726 15.4026 76.4294 15.6152 cv
76.2742 15.7541 76.117 15.8954 75.9626 16.0343 cv
75.6729 16.2479 75.3705 16.4292 75.0898 16.6645 cv
74.5175 17.1496 73.9779 17.6921 73.4465 18.2183 cv
73.121 18.5138 72.7927 18.8109 72.4652 19.107 cv
72.3529 19.2356 72.241 19.3644 72.1311 19.4941 cv
71.9821 19.6325 71.8321 19.7704 71.6845 19.9084 cv
71.4492 20.1484 71.2853 20.4363 71.0581 20.6698 cv
70.8609 20.8698 70.6642 21.0565 70.4862 21.2783 cv
70.4062 21.3887 70.3218 21.5001 70.2418 21.6095 cv
69.8969 21.9963 69.5619 22.3768 69.2648 22.7943 cv
69.0609 23.1107 68.8578 23.4284 68.6543 23.7467 cv
68.3607 24.1237 68.0299 24.6108 67.8042 25.025 cv
67.7363 25.1605 67.6697 25.2946 67.6031 25.4301 cv
67.4059 25.7599 67.2077 26.0878 67.0095 26.4143 cv
66.8379 26.7571 66.7217 27.1235 66.55 27.4674 cv
66.4694 27.6004 66.3904 27.7326 66.3113 27.8657 cv
66.144 28.1753 66.0032 28.4848 65.8248 28.7905 cv
65.7443 28.9887 65.6623 29.1879 65.5807 29.388 cv
65.4815 29.5919 65.3845 29.797 65.2861 30.0019 cv
65.207 30.2372 65.1256 30.4716 65.0465 30.7073 cv
64.9496 30.96 64.8526 31.2127 64.7547 31.4663 cv
64.2668 33.0437 63.8573 34.6277 63.5223 36.2985 cv
63.4938 36.6139 63.4658 36.9278 63.4378 37.2441 cv
63.394 37.6086 63.2691 38.0055 63.2387 38.3677 cv
63.2141 38.6487 63.2252 38.9685 63.1461 39.2313 cv
63.1254 39.4531 63.1056 39.6739 63.0849 39.8924 cv
63.0352 41.2459 63.0713 42.5315 63.1061 43.8402 cv
63.1239 44.469 63.2473 45.0978 63.3023 45.715 cv
63.3169 45.9831 63.3294 46.2503 63.3428 46.5203 cv
63.4286 47.3632 63.5724 48.2177 63.7036 49.0548 cv
63.7653 49.2679 63.8232 49.481 63.8824 49.6951 cv
64.0233 50.3557 64.1713 50.9952 64.3627 51.6298 cv
64.4182 51.7725 64.4746 51.9171 64.5301 52.0618 cv
64.5652 52.2132 64.6033 52.3636 64.6381 52.5151 cv
64.8874 53.2162 65.1366 53.9183 65.3845 54.6165 cv
65.5084 54.8798 65.6319 55.146 65.7538 55.4093 cv
65.8248 55.5829 65.8619 55.7786 65.9366 55.9503 cv
66.1266 56.3988 66.4048 56.8009 66.6315 57.233 cv
66.8104 57.5849 67.0236 57.9216 67.201 58.2745 cv
67.2521 58.4009 67.3046 58.5282 67.3558 58.6554 cv
67.4175 58.7336 67.4792 58.806 67.5409 58.8831 cv
67.609 59.0306 67.6764 59.1773 67.7449 59.3257 cv
67.9123 59.6199 68.1157 59.9044 68.3289 60.1754 cv
68.4552 60.3365 68.5598 60.5187 68.6886 60.6807 cv
68.8612 60.8987 69.056 61.0984 69.2185 61.322 cv
69.3434 61.5082 69.4679 61.6914 69.5942 61.8757 cv
69.8295 62.1572 70.0648 62.4399 70.3025 62.7176 cv
70.4978 62.9645 70.6931 63.2123 70.887 63.4592 cv
71.1319 63.7148 71.3754 63.9694 71.6194 64.224 cv
71.8195 64.4565 71.9926 64.7313 72.2236 64.9434 cv
72.553 65.2453 72.8765 65.5529 73.1808 65.8597 cv
73.3438 66.0236 73.5058 66.1885 73.6668 66.3505 cv
73.9335 66.583 74.2451 66.7488 74.5011 66.9918 cv
74.748 67.232 74.9968 67.4712 75.2475 67.7113 cv
75.4284 67.8502 75.6087 67.989 75.7886 68.127 cv
76.0114 68.3179 76.2008 68.5378 76.442 68.7085 cv
76.7317 68.9052 77.0023 69.1348 77.3046 69.3093 cv
77.5048 69.4251 77.7184 69.4849 77.9108 69.6131 cv
78.1349 69.7713 78.3592 69.9294 78.5834 70.0876 cv
78.8033 70.2313 79.0546 70.3451 79.2797 70.483 cv
80.1289 71.0038 80.9867 71.4522 81.8798 71.8795 cv
82.2723 72.0694 82.6431 72.3106 83.0632 72.4533 cv
83.4489 72.6038 83.8328 72.7532 84.218 72.9008 cv
84.3583 72.9394 84.5001 72.9827 84.6395 73.0213 cv
85.018 73.166 85.3941 73.3107 85.7717 73.4572 cv
85.8729 73.4872 85.9742 73.518 86.0769 73.5479 cv
86.4024 73.6752 86.726 73.8247 87.0664 73.9182 cv
87.4772 73.9992 87.8876 74.0764 88.2984 74.1574 cv
88.9099 74.2847 89.5497 74.4747 90.1738 74.5702 cv
90.4023 74.5895 90.6299 74.6097 90.8619 74.6251 cv
91.1642 74.6637 91.4684 74.736 91.7838 74.7641 cv
92.023 74.7775 92.2608 74.7949 92.4999 74.8103 cv
92.6561 74.8335 92.8109 74.8576 92.9643 74.8827 cv
93.1272 74.8884 93.2902 74.8942 93.4532 74.8991 cv
93.8288 74.954 94.2011 75.0119 94.5758 75.0679 cv
94.7672 75.0774 94.9605 75.0851 95.1515 75.0929 cv
95.2673 75.0794 95.3835 75.0659 95.4993 75.0543 cv
95.8416 75.0563 96.2495 75.0929 96.5924 75.1093 cv
96.8118 75.1141 97.0167 75.0987 97.226 75.1093 cv
97.6571 75.1315 98.0674 75.0466 98.4677 74.9878 cv
98.6485 74.9801 98.8313 74.9742 99.0116 74.9685 cv
99.2575 74.9386 99.5208 74.8961 99.7628 74.8769 cv
100.655 74.7949 101.519 74.6946 102.383 74.5249 cv
102.672 74.4477 102.963 74.3725 103.253 74.2953 cv
103.617 74.223 103.98 74.1459 104.342 74.0726 cv
104.532 74.0186 104.699 73.9241 104.878 73.8527 cv
105.174 73.7649 105.469 73.6781 105.765 73.5894 cv
105.892 73.5431 106.018 73.5007 106.144 73.4544 cv
106.359 73.3965 106.553 73.3734 106.766 73.3077 cv
107.202 73.1573 107.637 73.0021 108.076 72.8497 cv
108.334 72.7233 108.594 72.6038 108.853 72.4804 cv
109.107 72.3829 109.359 72.2681 109.601 72.1553 cv
109.671 72.1139 109.738 72.0694 109.808 72.028 cv
110.07 71.9045 110.342 71.7811 110.598 71.649 cv
110.894 71.4793 111.191 71.3134 111.488 71.1427 cv
111.64 71.0655 111.809 71.0211 111.961 70.942 cv
cp
f
95.6294 72.2826 mo
95.6192 72.2826 95.6097 72.2826 95.6 72.2826 cv
95.6 72.272 95.6 72.2633 95.6 72.2527 cv
95.5556 72.2527 95.5339 72.1977 95.5093 72.1669 cv
95.3979 71.9894 95.286 71.812 95.1747 71.6345 cv
94.9418 71.3635 94.7074 71.0897 94.4741 70.8147 cv
93.7749 70.1503 92.9565 69.5813 92.0982 69.21 cv
91.9212 69.1464 91.7424 69.0798 91.5654 69.0161 cv
91.3677 68.9303 91.1864 68.8165 90.981 68.7413 cv
90.789 68.67 90.5836 68.6468 90.3787 68.6091 cv
90.1718 68.5696 89.9592 68.5118 89.746 68.4645 cv
89.3063 68.3758 88.8636 68.2436 88.418 68.1637 cv
87.9859 68.1096 87.5563 68.0575 87.1243 68.0006 cv
86.78 67.9832 86.4502 67.989 86.1179 67.9582 cv
84.558 67.8 83.0145 67.6486 81.5071 67.4056 cv
80.9935 67.3188 80.4911 67.3168 79.9871 67.2281 cv
79.4876 67.1395 78.9851 66.9948 78.5096 66.8433 cv
78.2458 66.7604 77.9759 66.6987 77.7213 66.6022 cv
77.47 66.4903 77.2198 66.3775 76.9695 66.2637 cv
76.7964 66.1847 76.6233 66.1066 76.4507 66.0313 cv
76.3316 65.9542 76.2105 65.8761 76.088 65.798 cv
76.0307 65.7661 75.9723 65.7362 75.9144 65.7025 cv
75.5026 65.3726 75.1781 64.9165 74.8613 64.5142 cv
74.6178 64.2037 74.49 63.8421 74.3742 63.4679 cv
74.3188 63.2818 74.2615 63.0966 74.2041 62.9114 cv
74.0213 62.0493 74.0401 61.1484 74.0305 60.2062 cv
74.0169 60.024 73.9992 59.8417 73.9837 59.6565 cv
74.0087 58.9573 74.0527 58.2466 74.0666 57.5541 cv
74.0613 57.4017 74.0565 57.2494 74.0497 57.0941 cv
74.0536 56.3949 74.0569 55.6938 74.0613 54.9926 cv
74.0642 54.5316 74.0999 54.0774 74.096 53.6395 cv
74.0768 51.7512 74.1105 49.8407 74.1529 47.9351 cv
74.1375 47.667 74.123 47.3979 74.1066 47.1269 cv
74.1037 46.8298 74.137 46.5483 74.1375 46.2657 cv
74.1327 46.1307 74.1288 45.9947 74.126 45.8597 cv
74.1616 45.4305 74.1983 44.9965 74.233 44.5655 cv
74.2412 44.2298 74.2118 43.901 74.2118 43.5875 cv
74.2137 43.3513 74.2494 43.1111 74.2392 42.8661 cv
74.231 42.6675 74.1847 42.4804 74.1896 42.261 cv
74.2007 42.0787 74.2118 41.8954 74.22 41.7137 cv
74.2161 41.3472 74.1915 40.9475 74.1992 40.5617 cv
74.2041 40.3389 74.2354 40.1041 74.2297 39.8697 cv
74.2233 39.6137 74.1732 39.3601 74.18 39.0915 cv
74.2103 38.776 74.2392 38.4588 74.2687 38.1424 cv
74.2769 37.8329 74.2508 37.5359 74.2518 37.2475 cv
74.2551 36.6023 74.2836 35.9036 74.287 35.2324 cv
74.2923 35.0969 74.2991 34.9638 74.3029 34.8293 cv
74.2894 34.5414 74.273 34.2525 74.2581 33.9646 cv
74.2812 33.7163 74.3029 33.466 74.328 33.2158 cv
74.3506 32.017 74.3473 30.7835 74.3742 29.6137 cv
74.3762 29.2106 74.3762 28.8079 74.3781 28.4048 cv
74.3665 28.1203 74.3242 27.8426 74.3309 27.5412 cv
74.341 27.3488 74.3506 27.1554 74.3627 26.9654 cv
74.3685 25.9547 74.3449 24.9407 74.3506 23.9121 cv
74.3531 23.5384 74.3859 23.2028 74.3839 22.8445 cv
74.3781 22.4404 74.3617 22.0036 74.3637 21.5777 cv
74.3655 21.3009 74.396 21.0314 74.3974 20.7425 cv
74.3984 20.5125 74.3531 20.1904 74.4292 19.9937 cv
74.4307 19.9368 74.4982 19.946 74.546 19.9402 cv
74.9606 19.8818 75.4824 19.8283 75.927 19.8968 cv
76.4748 19.9811 77.0274 19.8925 77.5993 19.8958 cv
78.1075 19.8992 78.6158 19.9002 79.126 19.9012 cv
79.4336 19.8843 79.7393 19.8684 80.0488 19.8515 cv
80.6227 19.8548 81.155 19.89 81.7173 19.8852 cv
82.3919 19.8799 83.1215 19.8693 83.8231 19.8726 cv
84.0228 19.8818 84.2243 19.8925 84.4268 19.9002 cv
84.7128 19.8843 85.0025 19.8717 85.2914 19.8558 cv
85.5311 19.8615 85.7562 19.9117 86.0113 19.9127 cv
86.3339 19.9151 86.6267 19.8843 86.9309 19.8925 cv
87.4045 19.9012 87.9127 19.9035 88.4026 19.931 cv
88.6317 19.9493 88.8617 19.9662 89.0917 19.9845 cv
89.7697 19.9778 90.4756 19.9493 91.1391 19.9421 cv
91.5914 19.9547 92.0428 19.9662 92.4926 19.9797 cv
92.875 19.9744 93.2541 19.9012 93.6441 19.9035 cv
93.9176 19.905 94.2204 19.931 94.5092 19.932 cv
94.7687 19.9286 95.0271 19.9228 95.2865 19.9209 cv
95.5836 19.9435 95.8825 19.9671 96.1801 19.9922 cv
96.4106 19.9811 96.6416 19.9706 96.8716 19.9594 cv
97.3239 19.9763 97.7728 19.9922 98.2251 20.0096 cv
98.4377 19.9922 98.6485 19.9763 98.8592 19.9594 cv
100.089 19.9276 101.247 19.9585 102.488 19.9469 cv
102.76 19.931 103.028 19.9127 103.296 19.8968 cv
103.85 19.8818 104.435 19.9209 104.966 19.8818 cv
105.084 19.8717 105.197 19.8592 105.313 19.85 cv
105.775 19.8958 106.315 19.8466 106.811 19.8582 cv
107.017 19.8615 107.187 19.9117 107.386 19.9161 cv
107.607 19.9084 107.829 19.9035 108.048 19.8958 cv
108.403 19.9084 108.814 19.9512 109.172 19.9469 cv
109.421 19.946 109.661 19.8977 109.923 19.905 cv
110.106 19.9209 110.287 19.9378 110.47 19.9547 cv
110.724 19.9594 111.013 19.9228 111.276 19.9435 cv
111.458 19.972 111.64 19.998 111.824 20.0241 cv
111.976 20.0188 112.131 20.0116 112.285 20.0047 cv
112.447 20.0154 112.61 20.0231 112.775 20.0323 cv
112.938 20.0265 113.101 20.0164 113.263 20.0082 cv
113.572 20.0039 113.868 20.04 114.156 20.0198 cv
114.626 19.9845 115.087 20.0539 115.569 20.0492 cv
115.799 20.0347 116.029 20.0188 116.258 20.0029 cv
116.413 20.0116 116.566 20.0198 116.721 20.0275 cv
116.865 20.0288 117.047 20.0106 117.169 20.0598 cv
117.178 20.0675 117.19 20.0776 117.202 20.0858 cv
117.304 20.2372 117.266 20.5184 117.263 20.7233 cv
117.259 21.381 117.23 22.018 117.258 22.6521 cv
117.273 23.0537 117.267 23.5138 117.271 23.9198 cv
117.263 24.0543 117.258 24.1893 117.25 24.3215 cv
117.259 24.6108 117.273 24.8972 117.282 25.1856 cv
117.267 25.4744 117.252 25.7623 117.234 26.0526 cv
117.258 26.4258 117.282 26.8024 117.306 27.1757 cv
117.288 27.3169 117.273 27.4641 117.256 27.6073 cv
117.246 27.8585 117.296 28.0851 117.294 28.3286 cv
117.279 28.5779 117.263 28.8272 117.248 29.0765 cv
117.246 29.3837 117.24 29.6908 117.237 29.997 cv
117.221 30.228 117.202 30.459 117.186 30.688 cv
117.213 31.0637 117.24 31.4379 117.263 31.8111 cv
117.253 31.9466 117.242 32.0821 117.228 32.2162 cv
117.217 32.5272 117.194 32.8401 117.198 33.1382 cv
117.203 33.671 117.248 34.2661 117.253 34.7791 cv
117.24 34.8953 117.227 35.0101 117.215 35.1262 cv
117.225 35.3654 117.234 35.6032 117.244 35.8433 cv
117.23 36.1211 117.203 36.434 117.202 36.7392 cv
117.202 36.962 117.25 37.1553 117.244 37.3728 cv
117.23 37.4877 117.215 37.6038 117.198 37.719 cv
117.205 37.8714 117.211 38.0263 117.215 38.1777 cv
117.202 38.7558 117.149 39.3156 117.157 39.9083 cv
117.167 40.1952 117.174 40.4831 117.186 40.7724 cv
117.199 40.8886 117.213 41.0024 117.23 41.1181 cv
117.223 41.3106 117.211 41.502 117.203 41.6944 cv
117.209 41.8183 117.217 41.9432 117.223 42.0677 cv
117.205 42.2788 117.19 42.49 117.173 42.7013 cv
117.174 42.9877 117.244 43.2896 117.233 43.5943 cv
117.202 44.4372 117.155 45.2328 117.149 46.0718 cv
117.147 46.4123 117.202 46.7141 117.199 47.0517 cv
117.183 47.2349 117.163 47.4171 117.145 47.5985 cv
117.142 47.993 117.138 48.3874 117.132 48.7799 cv
117.113 48.9911 117.093 49.2024 117.076 49.4135 cv
117.086 50.211 117.097 51.0067 117.109 51.8034 cv
117.105 52.3579 117.049 52.9472 117.054 53.5036 cv
117.068 53.8016 117.083 54.0987 117.095 54.3986 cv
117.09 54.5143 117.082 54.6281 117.076 54.7448 cv
117.074 54.9551 117.072 55.1653 117.07 55.3784 cv
117.066 55.8925 117.091 56.4103 117.09 56.9031 cv
117.086 57.5011 117.091 58.1463 117.078 58.775 cv
117.07 58.9496 117.062 59.1194 117.057 59.2929 cv
117.068 59.4 117.082 59.5042 117.095 59.6102 cv
117.078 59.9767 117.059 60.3413 117.043 60.7048 cv
117.036 61.0125 117.08 61.3384 117.059 61.6548 cv
117.024 61.8477 116.987 62.0415 116.954 62.2353 cv
116.927 62.4437 116.9 62.652 116.875 62.8622 cv
116.802 63.219 116.541 63.7341 116.351 64.0388 cv
116.187 64.3021 115.912 64.4448 115.702 64.656 cv
115.574 64.7795 115.432 64.8624 115.299 64.9733 cv
115.053 65.1836 114.809 65.4054 114.53 65.5529 cv
114.352 65.6195 114.175 65.6861 113.997 65.7516 cv
113.637 65.8982 113.278 66.0602 112.91 66.2001 cv
112.572 66.3274 112.213 66.4219 111.876 66.5482 cv
111.794 66.5791 111.706 66.6099 111.621 66.6379 cv
111.435 66.637 111.186 66.7218 111.042 66.8086 cv
110.882 66.8066 110.712 66.826 110.583 66.8926 cv
110.338 66.8896 110.164 66.961 109.965 67.0343 cv
109.903 67.0535 109.839 67.0719 109.776 67.0893 cv
109.676 67.0893 109.563 67.0999 109.485 67.1442 cv
109.294 67.1433 108.85 67.232 108.707 67.313 cv
108.538 67.313 108.331 67.2822 108.189 67.34 cv
108.089 67.34 107.976 67.3516 107.899 67.3959 cv
107.744 67.394 107.561 67.3767 107.438 67.4509 cv
107.362 67.4596 107.283 67.4692 107.207 67.4789 cv
107.086 67.4789 106.957 67.4827 106.862 67.5339 cv
106.755 67.5339 106.631 67.5464 106.545 67.5898 cv
106.344 67.5879 106.044 67.557 105.882 67.6457 cv
105.805 67.6535 105.728 67.6612 105.652 67.6708 cv
105.455 67.6679 105.213 67.5985 105.045 67.6978 cv
104.931 67.6958 104.793 67.6804 104.699 67.7229 cv
104.641 67.7345 104.584 67.7422 104.528 67.7499 cv
104.342 67.7499 104.107 67.7152 103.951 67.7759 cv
103.874 67.7865 103.797 67.7952 103.72 67.8039 cv
103.662 67.8136 103.604 67.8231 103.548 67.8308 cv
103.489 67.8425 103.431 67.8521 103.376 67.8598 cv
103.288 67.8695 103.202 67.8772 103.114 67.8887 cv
102.994 67.8868 102.862 67.8926 102.768 67.9427 cv
102.691 67.9504 102.615 67.9621 102.537 67.9698 cv
102.408 67.9698 102.26 67.9659 102.162 68.0267 cv
102.04 68.0267 101.91 68.0277 101.818 68.0826 cv
101.719 68.0826 101.603 68.0941 101.53 68.1356 cv
101.438 68.1356 101.34 68.152 101.269 68.1935 cv
101.212 68.2022 101.155 68.2109 101.097 68.2234 cv
100.949 68.2215 100.753 68.2659 100.634 68.3324 cv
100.54 68.3324 100.447 68.3488 100.374 68.3912 cv
100.073 68.3893 99.8125 68.5262 99.5579 68.6255 cv
99.3602 68.6979 99.1606 68.7702 98.9624 68.8435 cv
98.5757 68.8416 98.1663 69.1984 97.8813 69.4347 cv
97.632 69.6392 97.3098 69.7404 97.0649 69.9719 cv
96.3807 70.6055 95.9688 71.458 95.6294 72.2826 cv
cp
0 0 0 0 cmyk
f
98.8413 68.1906 mo
99.0183 68.1163 99.1953 68.0411 99.3742 67.9659 cv
99.7243 67.8617 100.093 67.7952 100.463 67.7152 cv
101.155 67.5657 101.825 67.3844 102.518 67.2387 cv
102.689 67.2281 102.858 67.2166 103.028 67.205 cv
103.297 67.1558 103.559 67.0893 103.84 67.0642 cv
104.204 67.0507 104.569 67.0391 104.935 67.0276 cv
105.373 66.9948 105.819 66.9003 106.262 66.8684 cv
106.658 66.8394 107.051 66.826 107.44 66.7758 cv
107.789 66.7218 108.135 66.663 108.481 66.6061 cv
108.596 66.5984 108.711 66.5878 108.823 66.58 cv
109.36 66.4933 109.877 66.3659 110.389 66.2464 cv
110.565 66.2039 110.732 66.1847 110.9 66.1364 cv
111.393 65.9908 111.871 65.798 112.35 65.6446 cv
112.753 65.5134 113.142 65.3919 113.519 65.2202 cv
113.847 65.0707 114.121 64.8605 114.427 64.6696 cv
114.971 64.3272 115.565 63.9636 115.903 63.3898 cv
116.054 63.1352 116.193 62.7562 116.239 62.4543 cv
116.251 62.3116 116.261 62.1669 116.27 62.0222 cv
116.374 61.4002 116.359 60.7184 116.351 60.0683 cv
116.363 59.8379 116.37 59.6064 116.383 59.3749 cv
116.374 59.2514 116.369 59.1261 116.359 59.0017 cv
116.359 58.7529 116.359 58.5031 116.357 58.2543 cv
116.344 58.1578 116.332 58.0604 116.318 57.964 cv
116.328 57.8781 116.338 57.7923 116.348 57.7055 cv
116.338 57.6207 116.328 57.5329 116.316 57.4461 cv
116.32 57.2763 116.367 57.1365 116.367 56.9571 cv
116.369 56.7643 116.318 56.6235 116.316 56.4373 cv
116.315 56.2175 116.37 56.0544 116.377 55.8346 cv
116.39 55.0765 116.383 54.331 116.411 53.5846 cv
116.403 53.4033 116.398 53.222 116.392 53.0407 cv
116.396 52.3762 116.399 51.7146 116.402 51.054 cv
116.44 49.2486 116.417 47.3246 116.457 45.5202 cv
116.446 45.3302 116.438 45.1364 116.425 44.9454 cv
116.417 44.8865 116.409 44.8316 116.402 44.7738 cv
116.411 44.6301 116.442 44.469 116.437 44.3118 cv
116.425 44.2057 116.413 44.0997 116.402 43.9955 cv
116.408 43.8459 116.446 43.6955 116.444 43.5335 cv
116.44 43.1998 116.361 42.9172 116.363 42.5826 cv
116.365 42.3531 116.398 42.1563 116.413 41.9489 cv
116.411 41.8434 116.408 41.7363 116.403 41.6316 cv
116.419 41.5281 116.434 41.4185 116.45 41.3153 cv
116.437 41.19 116.423 41.0661 116.405 40.9398 cv
116.423 40.7975 116.437 40.6528 116.452 40.5096 cv
116.448 40.3784 116.408 40.2714 116.408 40.1325 cv
116.411 39.3465 116.417 38.5586 116.421 37.7726 cv
116.423 37.5927 116.469 37.4524 116.475 37.2798 cv
116.481 37.11 116.427 36.9827 116.432 36.8221 cv
116.446 36.7353 116.462 36.6467 116.475 36.5613 cv
116.488 36.3019 116.5 36.0435 116.516 35.784 cv
116.51 35.3891 116.506 34.957 116.491 34.5447 cv
116.475 34.4116 116.457 34.2776 116.44 34.1421 cv
116.438 33.8176 116.496 33.5321 116.492 33.2201 cv
116.479 32.98 116.463 32.7408 116.45 32.4997 cv
116.46 30.6447 116.388 28.8634 116.457 27.0233 cv
116.463 26.0184 116.469 25.0101 116.475 24.0018 cv
116.494 23.4555 116.453 22.8604 116.448 22.3299 cv
116.442 21.7895 116.453 21.299 116.457 20.7459 cv
116.448 20.7459 116.438 20.7459 116.427 20.7459 cv
116.427 20.6857 116.156 20.7233 116.11 20.7445 cv
115.574 20.7377 115.035 20.73 114.5 20.7233 cv
114.151 20.6924 113.804 20.6683 113.432 20.6731 cv
113.329 20.6731 113.201 20.6616 113.116 20.7001 cv
112.984 20.7126 112.847 20.7267 112.713 20.7402 cv
112.521 20.7175 112.328 20.6924 112.134 20.6673 cv
111.463 20.6626 110.791 20.6582 110.119 20.6539 cv
109.931 20.6524 109.442 20.5921 109.313 20.649 cv
108.967 20.6457 108.622 20.6413 108.277 20.6375 cv
108.015 20.6181 107.64 20.5077 107.382 20.608 cv
107.307 20.6181 107.228 20.6273 107.154 20.6375 cv
106.903 20.634 106.654 20.6307 106.403 20.6273 cv
106.032 20.6012 105.668 20.541 105.281 20.5386 cv
104.992 20.623 104.579 20.4831 104.3 20.5921 cv
104.224 20.6012 104.147 20.6104 104.072 20.6196 cv
103.774 20.6181 103.477 20.6162 103.178 20.6148 cv
103.033 20.6148 102.835 20.5878 102.716 20.6422 cv
102.626 20.6413 102.5 20.6321 102.426 20.6683 cv
102.179 20.6673 101.971 20.6162 101.736 20.608 cv
101.142 20.6056 100.547 20.6003 99.9515 20.5969 cv
99.7354 20.5955 99.4157 20.5487 99.2329 20.623 cv
99.1645 20.6307 99.0969 20.6398 99.029 20.65 cv
98.9422 20.6582 98.8549 20.6673 98.7701 20.6765 cv
98.4339 20.675 97.8775 20.499 97.5881 20.6138 cv
97.5303 20.6215 97.4744 20.6307 97.4165 20.6398 cv
97.2892 20.6398 97.1402 20.6422 97.0403 20.6957 cv
96.1816 20.6924 95.3251 20.6857 94.5054 20.6683 cv
94.2879 20.6626 94.0579 20.6741 93.8433 20.6731 cv
93.7411 20.6731 93.5882 20.6307 93.4976 20.6765 cv
93.285 20.6731 93.0761 20.6698 92.8635 20.6673 cv
92.5703 20.6466 91.9207 20.5294 91.6541 20.6375 cv
91.4612 20.634 91.2702 20.6307 91.0779 20.6297 cv
90.9506 20.6181 90.7953 20.583 90.6724 20.6307 cv
90.5021 20.6307 90.274 20.5989 90.1274 20.6572 cv
89.7837 20.6548 89.4808 20.5955 89.1187 20.593 cv
89.0044 20.593 88.8699 20.5805 88.7734 20.6215 cv
88.5603 20.6196 88.2614 20.5738 88.0819 20.6457 cv
87.7545 20.6447 87.429 20.6432 87.1011 20.6413 cv
86.9487 20.6398 86.7381 20.6104 86.6136 20.6664 cv
86.2008 20.6698 85.7871 20.6708 85.3748 20.6731 cv
85.113 20.6539 84.6067 20.5569 84.3651 20.6539 cv
84.1056 20.6524 83.6577 20.5637 83.4431 20.6466 cv
82.8982 20.6457 82.3968 20.6138 81.8586 20.5771 cv
81.6691 20.5627 81.3773 20.499 81.1956 20.5796 cv
81.0894 20.5771 80.9698 20.5646 80.8788 20.6071 cv
80.6729 20.6047 80.3917 20.5612 80.2181 20.6307 cv
80.0358 20.6297 79.7561 20.5843 79.6111 20.6548 cv
78.9296 20.6524 78.2073 20.6181 77.4816 20.6148 cv
77.2695 20.6148 76.9676 20.5679 76.7892 20.6398 cv
76.5268 20.6389 75.953 20.5843 75.751 20.6626 cv
75.5991 20.6626 75.332 20.6196 75.2321 20.7161 cv
75.0701 20.8698 75.1588 21.6254 75.1646 21.8699 cv
75.1579 22.0614 75.1502 22.2538 75.141 22.4462 cv
75.1473 22.6212 75.1728 22.8035 75.153 22.9925 cv
75.153 23.2621 75.1535 23.5297 75.155 23.7992 cv
75.1279 24.5346 75.1202 25.2377 75.1159 25.9913 cv
75.1145 26.1939 75.0648 26.3462 75.058 26.5362 cv
75.0493 26.7363 75.0933 26.9302 75.0913 27.111 cv
75.0672 27.2943 75.0455 27.4775 75.0229 27.6593 cv
75.0329 28.0432 75.0397 28.4265 75.0518 28.8089 cv
75.0247 29.4633 74.9944 30.1643 75.0021 30.8573 cv
75.0122 31.1259 75.0219 31.3944 75.0315 31.6612 cv
75.0421 31.7499 75.0537 31.8352 75.0643 31.9215 cv
75.0421 32.0854 75.0234 32.2495 75.0011 32.4109 cv
75.0137 33.5856 74.9814 34.7063 74.9746 35.8978 cv
74.9717 36.4147 74.9996 36.8916 74.9886 37.3955 cv
74.9703 37.6439 74.9524 37.8941 74.9336 38.1459 cv
74.9404 38.5201 74.9481 38.8947 74.9558 39.2689 cv
74.951 40.012 74.9192 40.7859 74.9264 41.5449 cv
74.9399 41.8135 74.95 42.0811 74.9621 42.3512 cv
74.9452 42.6964 74.9264 43.0417 74.9066 43.3879 cv
74.8999 44.7506 74.923 46.1654 74.9346 47.5367 cv
74.9399 47.8773 74.8777 48.1627 74.8767 48.5147 cv
74.8738 48.8802 74.8719 49.2447 74.8719 49.6083 cv
74.8797 49.7743 74.8864 49.9372 74.8931 50.0993 cv
74.8671 51.3394 74.8251 52.5295 74.8183 53.7862 cv
74.8145 54.3561 74.7533 54.8528 74.7509 55.3997 cv
74.7509 55.6388 74.7519 55.8789 74.7533 56.1181 cv
74.7644 56.2136 74.7793 56.31 74.7919 56.4055 cv
74.7765 56.5029 74.7606 56.5994 74.7475 56.6939 cv
74.7325 56.9707 74.7161 57.2639 74.7142 57.529 cv
74.7128 57.8676 74.72 58.2408 74.735 58.5957 cv
74.7412 58.7558 74.786 58.8889 74.7852 59.0577 cv
74.7837 59.2283 74.7325 59.3556 74.7316 59.5177 cv
74.7297 59.7144 74.7827 59.8601 74.7822 60.0655 cv
74.7726 61.5545 74.7894 62.9886 75.465 64.1218 cv
75.9308 64.8962 76.7862 65.3842 77.5645 65.7188 cv
78.1041 65.9522 78.6573 66.2193 79.2441 66.3582 cv
79.6785 66.4585 80.1067 66.5135 80.562 66.5925 cv
80.9077 66.6524 81.2674 66.7411 81.6305 66.7797 cv
81.9753 66.8066 82.32 66.8337 82.6653 66.8588 cv
83.4064 66.9503 84.1312 67.0806 84.8849 67.1722 cv
85.2379 67.1895 85.5933 67.2089 85.9477 67.2243 cv
86.1015 67.2571 86.2548 67.2908 86.4092 67.3246 cv
86.6874 67.3303 86.9681 67.3323 87.2439 67.34 cv
87.5413 67.367 87.8389 67.394 88.1369 67.4249 cv
88.2902 67.4316 88.4422 67.4374 88.5969 67.4403 cv
88.7314 67.476 88.866 67.5068 89.0015 67.5377 cv
89.3834 67.5956 89.7392 67.6371 90.1216 67.7113 cv
90.2393 67.7499 90.3569 67.7885 90.4756 67.8308 cv
90.736 67.9061 90.9737 67.9688 91.223 68.0662 cv
91.5847 68.1983 91.9487 68.3295 92.3113 68.4587 cv
92.5756 68.5927 92.8365 68.723 93.1031 68.857 cv
93.2425 68.9515 93.3857 69.046 93.5241 69.1405 cv
93.8144 69.3074 94.0999 69.4501 94.3641 69.6671 cv
94.6896 69.9314 94.9124 70.2535 95.1979 70.5602 cv
95.2904 70.6634 95.3391 70.7993 95.4635 70.8688 cv
95.4635 70.917 95.4799 70.8997 95.5229 70.8997 cv
95.5229 70.8495 95.668 70.7579 95.7066 70.7107 cv
95.7678 70.617 95.8261 70.5245 95.886 70.431 cv
96.5157 69.5109 97.4522 68.8522 98.4021 68.345 cv
98.5486 68.2957 98.6928 68.2408 98.8413 68.1906 cv
cp
1 .871122 .421698 .518273 cmyk
f
99.0087 24.3089 mo
99.0087 24.3171 99.0087 24.3273 99.0087 24.3365 cv
98.9798 24.3365 98.9499 24.3365 98.9214 24.3365 cv
98.9209 24.242 98.9186 24.1465 98.9161 24.0519 cv
98.9576 23.7641 99.1944 23.6329 99.3573 23.4178 cv
99.6635 23.6845 99.1914 24.1122 99.0087 24.3089 cv
cp
0 0 0 0 cmyk
f
100.504 21.9076 mo
100.625 21.7778 100.692 21.6197 100.798 21.4774 cv
100.888 21.3877 100.98 21.299 101.073 21.2069 cv
101.279 21.2296 101.473 21.2599 101.704 21.2706 cv
101.704 21.299 101.704 21.3275 101.704 21.3569 cv
101.398 21.3535 100.579 22.3709 100.389 22.628 cv
100.3 22.749 100.194 22.9877 100.055 23.0619 cv
99.9702 23.1039 99.8714 23.0687 99.8029 23.0263 cv
99.6066 22.9048 99.7528 22.6897 99.8096 22.5484 cv
99.8458 22.4597 99.8545 22.354 99.9307 22.288 cv
100.011 22.249 100.086 22.2104 100.166 22.1694 cv
100.279 22.084 100.39 21.9963 100.504 21.9076 cv
cp
f
98.5478 22.6019 mo
98.5959 22.4539 98.595 22.2923 98.6682 22.1568 cv
98.7584 21.9804 98.9817 21.936 99.1177 21.8097 cv
99.2406 21.6973 99.2672 21.5426 99.3641 21.4186 cv
99.4659 21.2865 99.6066 21.2624 99.7459 21.2012 cv
99.8598 21.2012 99.9761 21.2021 100.091 21.2021 cv
100.091 21.3454 99.9027 21.4924 99.8328 21.6072 cv
99.7383 21.7634 99.6437 21.9283 99.5469 22.0807 cv
99.4365 22.2311 99.3226 22.3835 99.2093 22.5349 cv
99.1331 22.6531 99.1066 22.7876 99.0116 22.8946 cv
98.9422 22.9491 98.8728 23.005 98.8009 23.0581 cv
98.7382 23.13 98.6746 23.1994 98.6114 23.2678 cv
98.5473 23.3291 98.4831 23.3894 98.4185 23.4496 cv
98.3009 23.5919 98.3009 23.8002 98.1436 23.9247 cv
98.0062 24.0312 97.7569 24.104 97.5689 24.0404 cv
97.551 24.0404 97.5298 24.0404 97.511 24.0404 cv
97.5119 23.9541 97.89 23.3677 97.9759 23.2929 cv
98.0549 23.2245 98.1711 23.2201 98.2338 23.129 cv
98.2912 23.0437 98.282 22.9433 98.3317 22.8556 cv
98.39 22.7524 98.5063 22.7191 98.5478 22.6019 cv
cp
f
96.3643 22.1959 mo
96.399 22.0532 96.535 21.9591 96.5765 21.8169 cv
96.6262 21.6496 96.5653 21.5083 96.684 21.3728 cv
96.806 21.233 97.5467 21.3454 97.7877 21.2181 cv
97.9421 21.2189 98.0925 21.2189 98.2463 21.2214 cv
98.2463 21.2407 98.2463 21.2599 98.2463 21.2798 cv
98.202 21.2798 98.202 21.3024 98.1822 21.3308 cv
97.9575 21.6481 97.8417 22.0161 97.6841 22.3652 cv
97.6117 22.4915 97.537 22.6178 97.4666 22.7466 cv
97.4087 22.8841 97.3499 23.0244 97.2931 23.1618 cv
97.144 23.4396 96.7712 23.9155 96.4462 23.9767 cv
96.4462 23.9675 96.4462 23.9574 96.4462 23.9483 cv
96.3962 23.9473 96.4126 23.6845 96.4057 23.6329 cv
96.3826 23.5056 96.333 23.3986 96.3498 23.2553 cv
96.3634 23.1005 96.4462 22.9968 96.4434 22.8252 cv
96.4366 22.6135 96.3132 22.4086 96.3643 22.1959 cv
cp
f
94.0753 21.2305 mo
94.1814 21.1167 94.598 21.192 94.7628 21.1442 cv
94.9446 21.2055 95.4066 21.1987 95.6266 21.2069 cv
95.6309 21.3333 95.6366 21.4571 95.642 21.5844 cv
95.6641 21.679 95.6863 21.7744 95.7066 21.8699 cv
95.6887 21.9751 95.6709 22.0807 95.654 22.1853 cv
95.6433 22.6439 95.5851 23.0957 95.5614 23.5398 cv
95.5769 23.8186 95.5923 24.0973 95.6077 24.375 cv
95.6 24.375 95.5884 24.375 95.5797 24.375 cv
95.5797 24.3659 95.5797 24.3567 95.5797 24.3465 cv
95.2133 24.3442 94.7923 23.2245 94.6452 22.9684 cv
94.5623 22.8252 94.4364 22.7341 94.3381 22.5986 cv
94.1317 22.3097 93.7585 21.5662 94.0753 21.2305 cv
cp
f
91.7438 21.4504 mo
91.7448 21.4432 91.7466 21.4379 91.7491 21.4312 cv
91.8089 21.2556 92.2631 21.2522 92.4266 21.1587 cv
92.5968 21.1602 92.8172 21.1303 92.9565 21.1977 cv
93.3659 21.3989 93.5034 21.9963 93.6678 22.3734 cv
93.7734 22.6169 93.9171 22.8536 94.0338 23.0972 cv
94.1124 23.2268 94.1871 23.3551 94.2633 23.4839 cv
94.3159 23.6136 94.3342 23.7559 94.339 23.9073 cv
94.341 24.0143 94.3593 24.2169 94.259 24.2694 cv
94.1775 24.3138 94.0541 24.293 93.975 24.2602 cv
93.825 24.2033 91.7535 21.6313 91.7424 21.4967 cv
91.7424 21.489 91.7424 21.4822 91.7424 21.4731 cv
91.7424 21.4663 91.7438 21.4571 91.7438 21.4504 cv
cp
f
90.6145 21.1785 mo
90.829 21.2137 90.9564 21.2758 91.1126 21.4312 cv
91.3411 21.6515 91.536 21.9148 91.7197 22.1727 cv
91.8132 22.304 91.8667 22.4505 91.9786 22.5793 cv
92.1218 22.7326 92.267 22.8864 92.4097 23.0378 cv
92.538 23.2004 92.6643 23.36 92.7917 23.5224 cv
92.8384 23.5919 92.8818 23.6604 92.929 23.7298 cv
93.0202 23.8108 93.1142 23.8914 93.2059 23.9709 cv
93.3992 24.1565 93.5752 24.3875 93.675 24.6234 cv
93.6292 24.6234 93.6307 24.673 93.6195 24.7087 cv
93.4619 24.7087 93.2695 24.6518 93.1572 24.5631 cv
92.972 24.375 92.7873 24.185 92.6007 23.996 cv
92.4821 23.8778 92.3432 23.8301 92.2409 23.6947 cv
92.0428 23.4294 91.8933 23.1131 91.6498 22.8749 cv
91.5099 22.7374 91.3089 22.7114 91.167 22.5768 cv
91.1632 22.5725 91.1584 22.5668 91.1545 22.5634 cv
91.0046 22.4072 90.9506 22.1969 90.8233 22.0286 cv
90.6781 21.8372 90.466 21.7065 90.3285 21.5175 cv
90.3237 21.5049 90.3155 21.4914 90.3093 21.4799 cv
90.3068 21.4717 90.3054 21.4649 90.3029 21.4581 cv
90.2778 21.2942 90.5079 21.2296 90.6145 21.1785 cv
cp
f
97.0621 27.1771 mo
97.145 27.1882 97.227 27.1973 97.3085 27.2075 cv
97.5563 27.2977 97.7723 27.6631 97.6793 27.9259 cv
97.6281 28.0668 97.4704 28.1912 97.3504 28.2832 cv
97.2675 28.3479 97.1454 28.4458 97.0263 28.4366 cv
96.859 28.4197 96.9294 28.0649 96.9709 27.9689 cv
97.0302 27.8373 97.1787 27.8016 97.1884 27.6381 cv
97.2033 27.4457 97.0611 27.3589 97.0621 27.1771 cv
cp
f
97.4666 25.9948 mo
97.3697 26.0535 97.2559 26.2107 97.1286 26.1958 cv
96.9517 26.1741 96.8793 25.9446 96.763 25.8376 cv
96.6357 25.7146 96.3691 25.6543 96.4057 25.4209 cv
96.4183 25.3264 96.5027 25.2762 96.5832 25.2459 cv
96.5832 25.2377 96.5832 25.2261 96.5832 25.2184 cv
96.7771 25.255 96.9102 25.3525 97.0842 25.4267 cv
97.2839 25.5097 97.4868 25.5564 97.6947 25.635 cv
97.7381 25.6509 97.7574 25.7011 97.741 25.7488 cv
97.6995 25.8718 97.5659 25.9331 97.4666 25.9948 cv
cp
f
97.0915 29.5611 mo
97.0529 29.7719 96.5735 29.8596 96.4087 29.7569 cv
96.1642 29.6055 96.6319 29.3017 96.7332 29.2221 cv
96.8562 29.2549 97.1228 29.3938 97.0915 29.5611 cv
cp
f
95.8367 29.3778 mo
95.7557 29.3952 95.7124 29.3201 95.6584 29.2848 cv
95.5923 29.2423 95.5147 29.2298 95.4568 29.1652 cv
95.3088 29.0023 95.3526 28.8297 95.3439 28.6087 cv
95.3372 28.495 95.317 28.3536 95.3594 28.2491 cv
95.3956 28.1555 95.4857 28.1136 95.559 28.0624 cv
95.653 28.0668 95.7293 28.0726 95.8011 28.1169 cv
95.884 28.1695 96.4656 28.7317 96.4771 28.793 cv
96.5153 29.0105 96.0118 29.3417 95.8367 29.3778 cv
cp
f
99.2214 27.5344 mo
99.2204 27.7427 99.1133 27.9689 98.9296 28.0523 cv
98.9287 28.0967 98.8283 28.034 98.7845 28.0214 cv
98.7855 27.8122 99.0569 27.6608 99.1944 27.5344 cv
99.2021 27.5344 99.2117 27.5344 99.2214 27.5344 cv
cp
f
98.6794 27.1631 mo
98.608 27.2147 98.5409 27.2759 98.4445 27.275 cv
98.3442 27.2726 98.3022 27.209 98.2719 27.126 cv
98.2482 27.0527 98.2569 26.1221 98.282 26.041 cv
98.3134 25.9412 98.4677 25.8558 98.5381 25.7748 cv
98.7565 25.8419 98.744 25.974 98.8187 26.1698 cv
98.9547 26.5304 99.0502 26.8878 98.6794 27.1631 cv
cp
f
98.3221 28.8272 mo
98.3486 28.8272 98.3389 28.8349 98.3206 28.8556 cv
98.3206 28.9878 97.9469 29.2221 97.8307 29.1083 cv
97.6667 28.9501 97.8693 28.7838 97.9749 28.6801 cv
98.1282 28.6917 98.2405 28.6999 98.3221 28.8272 cv
cp
f
95.6863 25.7874 mo
95.7895 25.7976 95.8888 25.8101 95.9906 25.8202 cv
96.1704 25.8795 96.7438 26.3429 96.6821 26.5705 cv
96.629 26.7731 96.4375 26.8912 96.291 27.0382 cv
96.1391 27.1863 95.9559 27.3614 95.7375 27.3873 cv
95.5214 27.4139 95.2133 26.4519 95.2533 26.2812 cv
95.2735 26.205 95.6115 25.8593 95.6848 25.8168 cv
95.6848 25.8066 95.6848 25.7976 95.6863 25.7874 cv
cp
f
95.0165 28.1236 mo
94.9042 28.2196 94.7576 28.3879 94.6028 28.3981 cv
94.4832 28.4072 94.4253 28.3218 94.3477 28.2558 cv
94.1582 28.0909 94.0213 27.7528 94.0859 27.4843 cv
94.1302 27.4023 94.1707 27.3217 94.2151 27.2398 cv
94.2936 27.0074 94.2609 26.9664 94.4422 26.788 cv
94.6896 26.9037 95.4018 27.4298 95.3295 27.7654 cv
95.2986 27.9052 95.1178 28.034 95.0165 28.1236 cv
cp
f
95.1462 29.7025 mo
95.1366 29.7025 95.1284 29.7025 95.1178 29.7025 cv
95.1178 29.7525 95.0122 29.7217 94.9761 29.7125 cv
94.541 29.6205 94.0714 29.5091 94.4306 28.9772 cv
94.5 28.9878 94.5604 28.9887 94.6119 29.0321 cv
94.7133 29.1083 94.7436 29.2212 94.8174 29.3142 cv
94.9278 29.4556 95.0947 29.5259 95.1462 29.7025 cv
cp
f
93.1518 26.0333 mo
93.1528 26.0333 93.3606 25.7816 93.4397 25.7454 cv
93.4397 25.7362 93.4397 25.7262 93.4397 25.717 cv
93.8018 25.9523 94.0969 26.3738 93.7218 26.7562 cv
93.6471 26.8308 93.5265 26.9335 93.4248 26.9495 cv
93.0877 26.9996 93.2295 26.5864 93.2251 26.409 cv
93.2223 26.2744 93.1823 26.1515 93.1518 26.0333 cv
cp
f
93.8164 25.4893 mo
93.8164 25.4609 93.8164 25.4311 93.8164 25.404 cv
93.8741 25.3881 93.9325 25.3707 93.9909 25.3573 cv
94.3515 25.3047 94.5825 25.2503 94.8829 25.0911 cv
94.9765 25.1171 95.1246 25.1171 95.1824 25.2102 cv
95.3449 25.4629 94.5855 25.9798 94.3632 25.9571 cv
94.1167 25.9287 93.988 25.635 93.8164 25.4893 cv
cp
f
93.3703 27.8782 mo
93.4243 27.8927 93.4783 27.911 93.5323 27.9246 cv
93.6707 28.0079 94.1737 28.4883 94.1886 28.6372 cv
94.205 28.7987 93.7796 29.0968 93.6441 29.1267 cv
93.5284 29.1493 93.4976 29.0331 93.4628 28.9501 cv
93.3293 28.6199 93.2328 28.2582 93.3703 27.8782 cv
cp
f
92.7825 27.574 mo
92.5023 27.6434 92.5621 27.1009 92.5703 26.922 cv
92.7757 26.9924 93.1962 27.4693 92.7825 27.574 cv
cp
f
96.346 57.5349 mo
96.346 57.4538 96.9709 56.5435 97.0635 56.4334 cv
97.1108 56.3756 97.1812 56.3294 97.2453 56.3023 cv
97.2453 56.2946 97.2453 56.283 97.2453 56.2715 cv
97.3889 56.2724 97.5341 56.2753 97.6793 56.2753 cv
97.6763 56.4528 96.994 57.4576 96.8176 57.5329 cv
96.6917 57.5898 96.521 57.5618 96.3729 57.5657 cv
96.3729 57.556 96.3729 57.5464 96.3729 57.5349 cv
96.3643 57.5349 96.3537 57.5349 96.346 57.5349 cv
cp
f
91.953 57.4499 mo
91.7934 57.5175 91.5499 57.474 91.3619 57.4789 cv
91.3643 57.2194 92.4194 56.4605 92.635 56.2474 cv
92.7791 56.2474 92.9233 56.2474 93.0684 56.2474 cv
93.0674 56.4605 92.1614 57.3603 91.953 57.4499 cv
cp
f
99.8125 63.1352 mo
99.6283 63.2162 99.3766 63.0561 99.2744 62.922 cv
99.1635 62.7726 99.1249 62.598 99.0666 62.4244 cv
98.975 62.1495 98.8853 61.8641 98.7777 61.593 cv
98.7068 61.4108 98.5685 61.1668 98.5945 60.9517 cv
98.6114 60.8157 98.7391 60.7627 98.8327 60.6933 cv
98.9161 60.7135 98.975 60.7386 99.0241 60.8129 cv
99.0792 60.8977 99.0984 60.9922 99.1322 61.0907 cv
99.2232 61.3587 99.3115 61.6201 99.3882 61.8978 cv
99.4774 62.2112 99.6124 62.5324 99.7459 62.8256 cv
99.7672 62.8758 99.9095 63.0918 99.8125 63.1352 cv
cp
f
98.8447 56.2367 mo
98.9827 56.4296 99.8058 57.341 99.7585 57.5136 cv
99.7451 57.556 99.6939 57.5618 99.6549 57.5705 cv
99.406 57.5734 99.1577 57.5772 98.9084 57.5792 cv
98.4677 57.5772 98.0255 57.5734 97.5843 57.5715 cv
97.5843 57.5618 97.5843 57.5541 97.5857 57.5426 cv
97.5746 57.5426 97.5636 57.5426 97.5554 57.5426 cv
97.5554 57.4461 97.633 57.3593 97.6725 57.2831 cv
97.8109 57.0247 98.3524 56.2907 98.3168 56.0236 cv
98.3066 55.9348 98.2405 55.8674 98.16 55.8403 cv
97.8123 55.7208 97.3953 55.823 97.0176 55.8095 cv
96.8176 55.7989 96.3594 55.6996 96.1829 55.7786 cv
95.8049 55.7767 94.487 55.5906 94.3323 55.9233 cv
94.2936 56.0034 94.3468 56.095 94.3796 56.1634 cv
94.5333 56.4662 94.7701 56.7459 94.9746 57.0227 cv
95.086 57.1935 95.1974 57.3631 95.3083 57.529 cv
95.3073 57.5406 95.3073 57.5483 95.3073 57.558 cv
95.2793 57.5705 95.2489 57.5772 95.221 57.5898 cv
94.4104 57.584 93.6056 57.5513 92.8018 57.5464 cv
92.8018 57.5272 92.8018 57.5078 92.8018 57.4886 cv
92.8288 57.4886 93.9808 56.0979 94.1071 55.9397 cv
94.1071 55.902 94.0984 55.902 94.0777 55.8809 cv
93.935 55.8654 93.7883 55.8433 93.6461 55.8269 cv
93.4059 55.8153 93.1667 55.8037 92.9257 55.7902 cv
92.2376 55.7739 91.5109 55.8153 90.8527 55.7497 cv
90.8537 55.6687 91.8354 54.7216 91.9671 54.5856 cv
92.8018 53.709 93.6712 52.8661 94.543 52.0088 cv
94.8434 51.6992 95.1419 51.3934 95.4414 51.0887 cv
95.5383 50.9952 95.6266 50.893 95.7485 50.8515 cv
95.7485 50.8341 95.7485 50.8119 95.75 50.7926 cv
95.9438 50.892 96.113 51.0887 96.2717 51.2507 cv
96.5321 51.5179 96.7925 51.7879 97.05 52.055 cv
97.2158 52.2074 97.3789 52.3579 97.5438 52.5122 cv
98.2845 53.2847 99.0733 54.0137 99.8294 54.7795 cv
100.14 55.0929 100.547 55.4131 100.79 55.7767 cv
100.734 55.7844 100.675 55.7941 100.617 55.8037 cv
100.38 55.8037 100.138 55.7989 99.8974 55.798 cv
99.8077 55.796 99.6939 55.769 99.6119 55.798 cv
99.2826 55.796 98.894 55.7536 98.6302 55.8771 cv
98.6277 56.0034 98.7773 56.1394 98.8447 56.2367 cv
cp
f
90.6888 59.5042 mo
90.8054 59.3036 93.026 59.4752 93.3954 59.4772 cv
93.9686 59.481 94.4779 59.4 95.0387 59.401 cv
95.7875 59.4058 96.5817 59.4617 97.3431 59.4647 cv
97.7295 59.4675 98.1547 59.454 98.5535 59.4424 cv
99.4615 59.4174 100.404 59.4598 101.289 59.4647 cv
101.29 59.456 101.29 59.4453 101.29 59.4366 cv
101.337 59.4366 101.341 59.182 101.341 59.1194 cv
101.344 58.5436 101.355 57.9418 101.359 57.3342 cv
101.361 56.9176 101.348 56.4962 101.421 56.1248 cv
101.892 56.3717 101.835 56.962 101.85 57.4818 cv
101.857 57.801 101.879 58.1723 101.869 58.5166 cv
101.85 58.7028 101.833 58.8831 101.816 59.0654 cv
101.8 59.3402 101.881 59.6498 101.777 59.8996 cv
101.777 59.9188 101.777 59.9382 101.777 59.9574 cv
101.768 59.9574 101.758 59.9574 101.748 59.9574 cv
101.748 59.9044 101.57 59.9275 101.518 59.9275 cv
101.062 59.9247 100.633 59.9507 100.163 59.9468 cv
99.9597 59.9468 99.6747 59.9044 99.5005 59.9738 cv
99.3284 59.9738 99.1013 59.9382 98.9527 59.9989 cv
98.4243 59.9969 97.9218 59.9931 97.3971 59.9574 cv
97.1653 59.9411 96.8465 59.835 96.6203 59.9275 cv
96.2341 59.9275 95.8541 59.8967 95.4688 59.9073 cv
95.3835 59.9121 95.2778 59.8851 95.2084 59.9188 cv
94.9915 59.9188 94.5069 59.835 94.3438 59.916 cv
94.216 59.916 94.0733 59.8996 93.9686 59.9429 cv
93.6046 59.9382 93.2386 59.9352 92.875 59.9314 cv
92.6576 59.9188 92.414 59.9121 92.1835 59.8996 cv
92.1064 59.8996 92.0288 59.9024 91.9517 59.9024 cv
91.8667 59.9121 91.7809 59.9188 91.6927 59.9314 cv
91.2664 59.9275 90.9255 60.0297 90.7196 59.6642 cv
90.7013 59.6305 90.6627 59.5485 90.6888 59.5042 cv
cp
f
101.673 66.6987 mo
101.588 66.8183 101.329 66.8511 101.189 66.8684 cv
101.193 66.1499 101.153 65.3803 101.181 64.6464 cv
101.189 64.4371 101.151 64.1922 101.195 63.9935 cv
101.209 63.9241 101.246 63.8923 101.293 63.844 cv
101.441 63.8469 101.579 63.844 101.696 63.9048 cv
101.738 63.9048 101.747 64.2134 101.737 64.277 cv
101.715 64.4342 101.75 64.5923 101.75 64.7689 cv
101.748 65.0264 101.707 65.2569 101.72 65.5163 cv
101.737 65.7824 101.816 66.4962 101.673 66.6987 cv
cp
f
110.328 65.7661 mo
110.232 65.7661 110.114 65.7806 110.04 65.8249 cv
109.897 65.8229 109.606 65.8982 109.492 65.9648 cv
109.23 65.9648 109.005 66.0728 108.768 66.1181 cv
108.606 66.1499 108.432 66.1807 108.28 66.2078 cv
108.166 66.2232 108.032 66.2193 107.933 66.2734 cv
107.868 66.2811 107.8 66.2907 107.732 66.3003 cv
107.666 66.3081 107.598 66.3197 107.53 66.3274 cv
107.358 66.3254 107.144 66.3003 107.012 66.3823 cv
106.944 66.391 106.878 66.4016 106.809 66.4084 cv
106.53 66.4084 106.191 66.3659 105.974 66.4933 cv
105.87 66.4933 105.746 66.4826 105.657 66.5183 cv
105.525 66.5183 105.425 66.4885 105.313 66.4585 cv
105.311 66.5183 104.966 66.5675 104.909 66.6022 cv
104.715 66.5994 104.47 66.5656 104.303 66.6244 cv
104.237 66.637 104.169 66.6437 104.103 66.6543 cv
103.909 66.6524 103.679 66.6321 103.524 66.7093 cv
103.396 66.7064 103.253 66.7141 103.15 66.7643 cv
102.962 66.7643 102.484 66.8125 102.372 66.7218 cv
102.186 66.5743 102.289 64.7419 102.296 64.3986 cv
102.291 64.223 102.281 64.0514 102.276 63.8777 cv
102.268 63.6954 102.33 63.0831 102.017 63.1853 cv
101.839 63.1853 101.46 63.1429 101.328 63.2104 cv
101.138 63.2085 100.633 63.247 100.522 63.1448 cv
100.325 62.9577 100.216 62.273 100.114 61.9981 cv
99.9577 61.5969 99.7046 61.1929 99.6506 60.7502 cv
99.6437 60.7048 99.6317 60.6267 99.6631 60.592 cv
99.7451 60.4937 100.127 60.511 100.274 60.511 cv
100.614 60.5139 102.157 60.5187 102.283 60.3027 cv
102.361 60.159 102.331 59.7086 102.317 59.5292 cv
102.328 59.2514 102.34 58.9718 102.351 58.6921 cv
102.366 58.263 102.268 57.7624 102.397 57.369 cv
103.379 58.4279 104.492 59.3981 105.503 60.4531 cv
105.598 60.5727 105.69 60.6884 105.785 60.807 cv
106.037 61.0598 106.319 61.2864 106.579 61.541 cv
107.277 62.2267 107.924 62.9693 108.606 63.6569 cv
109.129 64.1854 109.676 64.7042 110.199 65.2338 cv
110.297 65.3301 110.465 65.442 110.511 65.5742 cv
110.549 65.6745 110.38 65.7266 110.328 65.7661 cv
cp
f
108.426 38.4072 mo
108.584 38.2205 108.742 38.033 108.903 37.8455 cv
109.089 37.6506 109.305 37.4992 109.495 37.3184 cv
109.747 37.0599 109.997 36.8014 110.25 36.5444 cv
110.534 36.2735 110.819 36.0005 111.103 35.7262 cv
111.66 35.1489 112.214 34.5732 112.771 33.995 cv
113.625 33.1782 114.496 32.3724 115.283 31.4948 cv
115.484 31.2671 115.783 31.0796 115.94 30.8269 cv
116.081 31.0212 115.98 31.5348 115.996 31.8054 cv
116.032 32.4418 116.002 33.1323 116.009 33.7939 cv
116.024 34.1296 116.038 34.4651 116.054 34.7998 cv
116.034 35.147 116.019 35.4927 115.999 35.8376 cv
116.015 36.0391 116.029 36.243 116.046 36.4431 cv
116.04 36.5411 116.034 36.6341 116.031 36.731 cv
116.042 36.8472 116.054 36.962 116.063 37.0792 cv
116.052 37.1747 116.038 37.2682 116.023 37.3651 cv
115.979 37.8965 115.974 38.4304 115.982 38.9801 cv
116.007 39.2564 116.032 39.5365 116.058 39.8152 cv
116.042 39.9691 116.024 40.12 116.005 40.2747 cv
116.004 40.62 115.999 40.9667 115.996 41.313 cv
115.988 41.4292 115.982 41.5415 115.977 41.6577 cv
115.982 41.8795 116.036 42.1072 116.032 42.3203 cv
116.024 42.625 115.951 42.9472 115.955 43.2712 cv
115.982 43.6656 116.007 44.0592 116.034 44.4526 cv
116.017 44.6937 115.998 44.9319 115.979 45.172 cv
115.992 45.2608 115.999 45.3466 116.011 45.4353 cv
116.017 45.6929 115.992 45.9562 115.982 46.2078 cv
115.994 46.3911 116.009 46.5753 116.021 46.7585 cv
116.021 46.8993 115.984 47.0304 115.974 47.1607 cv
115.955 47.4365 115.973 47.7142 116.005 47.9698 cv
116.056 48.3681 116.04 48.8889 115.999 49.292 cv
115.986 49.3875 115.97 49.4839 115.955 49.5814 cv
115.941 49.8234 116.004 50.0375 115.999 50.2728 cv
115.982 50.4079 115.965 50.539 115.948 50.675 cv
115.953 50.8177 115.961 50.9614 115.967 51.1061 cv
115.959 51.2989 115.948 51.4908 115.938 51.6838 cv
115.936 51.8651 116.05 52.9009 115.878 52.9009 cv
115.765 52.8999 114.847 51.8959 114.692 51.7425 cv
113.545 50.5805 112.381 49.4001 111.241 48.2456 cv
111.059 48.0624 110.905 47.8463 110.727 47.6727 cv
110.565 47.5175 110.402 47.3594 110.238 47.205 cv
110.157 47.1077 110.07 47.0073 109.988 46.9109 cv
108.884 45.8249 107.766 44.7236 106.661 43.6405 cv
106.463 43.4467 105.027 42.0083 105.022 41.9128 cv
105.029 41.8863 105.032 41.8603 105.035 41.8342 cv
105.146 41.5622 105.598 41.2594 105.822 41.0453 cv
106.067 40.811 106.247 40.5506 106.477 40.3182 cv
106.683 40.1055 106.909 39.9006 107.117 39.6913 cv
107.195 39.6262 107.273 39.5601 107.352 39.4931 cv
107.532 39.3089 107.71 39.1223 107.89 38.9376 cv
108.069 38.7601 108.246 38.5851 108.426 38.4072 cv
cp
f
101.802 22.3584 mo
101.896 22.289 101.997 22.2673 102.081 22.1762 cv
102.14 22.0874 102.198 22.0001 102.256 21.9124 cv
102.411 21.6858 102.572 21.4948 102.761 21.2966 cv
102.828 21.2353 102.897 21.1727 102.965 21.111 cv
103.09 21.044 103.307 21.0758 103.462 21.0772 cv
103.791 21.0791 104.116 21.0632 104.413 21.0324 cv
104.559 21.0164 104.693 21.0256 104.817 20.9702 cv
105.038 20.9745 105.257 20.9779 105.478 20.9827 cv
105.727 21.0112 105.991 21.0714 106.256 21.0724 cv
106.491 21.0748 106.693 20.9871 106.919 20.9928 cv
106.996 21.0078 107.074 21.0179 107.151 21.0314 cv
107.427 21.0632 107.775 21.0632 108.015 20.9894 cv
108.015 20.9971 108.015 21.0078 108.015 21.0164 cv
108.025 21.0164 108.032 21.0164 108.045 21.0164 cv
108.045 21.0555 108.052 21.0463 108.015 21.0463 cv
108.011 21.0622 108.004 21.0758 108 21.0931 cv
107.72 21.464 107.311 21.7475 106.986 22.0614 cv
106.369 22.6646 105.754 23.2713 105.139 23.8755 cv
105 24.0177 104.838 24.1272 104.701 24.2694 cv
104.146 24.835 103.647 25.4484 103.079 25.9913 cv
102.875 26.1905 102.668 26.3897 102.465 26.5864 cv
102.349 26.6843 102.237 26.7808 102.124 26.88 cv
101.996 27.0315 101.869 27.1829 101.742 27.3328 cv
101.399 27.6959 101.035 28.0475 100.668 28.3913 cv
100.495 28.5928 100.324 28.7954 100.153 28.9989 cv
99.771 29.3678 99.3906 29.7352 99.0116 30.1051 cv
98.3621 30.7416 97.7226 31.3979 97.0708 32.0262 cv
96.8542 32.2311 96.6647 32.4862 96.427 32.6468 cv
96.427 32.6578 96.427 32.666 96.427 32.6772 cv
96.4169 32.6772 96.4072 32.6772 96.3975 32.6772 cv
96.3975 32.668 96.3975 32.6578 96.3975 32.6468 cv
96.3884 32.6468 96.3788 32.6468 96.3672 32.6468 cv
96.3768 32.5614 96.3855 32.4746 96.3942 32.3883 cv
96.398 32.1891 96.3604 31.9876 96.3807 31.7826 cv
96.4047 31.6771 96.4308 31.5724 96.453 31.4653 cv
96.467 31.2671 96.3962 31.1032 96.4892 30.9326 cv
96.5471 30.8255 96.6802 30.7825 96.765 30.7006 cv
96.9318 30.5352 97.0278 30.3249 97.2299 30.1919 cv
97.4396 30.0516 97.7034 30.0106 97.9305 29.9015 cv
98.0742 29.8273 98.1895 29.7048 98.3259 29.6205 cv
98.6331 29.4203 98.988 29.2482 99.2185 28.9309 cv
99.2802 28.8046 99.3438 28.6801 99.407 28.5543 cv
99.4832 28.4448 99.5613 28.3344 99.637 28.225 cv
99.6968 28.075 99.6891 27.9052 99.7325 27.7461 cv
99.7918 27.5296 99.9003 27.3328 99.9065 27.0777 cv
99.8791 26.8574 99.8521 26.6375 99.8251 26.4157 cv
99.7951 26.1312 99.6355 25.8752 99.4659 25.6601 cv
99.3935 25.5699 99.3053 25.4811 99.2609 25.3741 cv
99.205 25.3741 99.2609 25.3003 99.2764 25.2685 cv
99.3241 25.2034 99.3689 25.1389 99.4142 25.0752 cv
99.6124 24.7767 99.8155 24.4546 100.112 24.2361 cv
100.261 24.1247 100.281 23.9651 100.396 23.8287 cv
100.532 23.6696 100.735 23.5841 100.876 23.4169 cv
100.949 23.32 101.023 23.2211 101.096 23.1266 cv
101.155 23.0152 101.183 22.899 101.275 22.8035 cv
101.367 22.7056 101.471 22.6598 101.57 22.5778 cv
101.647 22.505 101.725 22.4313 101.802 22.3584 cv
cp
f
85.1115 21.0907 mo
85.3951 21.0931 85.7485 21.1341 86.0046 21.0647 cv
86.2105 21.1067 86.4434 21.0941 86.6662 21.0985 cv
86.8412 21.11 87.0124 21.1201 87.1865 21.1293 cv
87.4261 21.1293 87.6644 21.1293 87.904 21.1283 cv
88.0115 21.1485 88.1167 21.1659 88.2208 21.1852 cv
88.4407 21.1862 88.6996 21.0381 88.9142 21.111 cv
89.1688 21.1987 89.3883 21.4842 89.5825 21.6814 cv
89.8931 21.9876 90.2007 22.2923 90.5079 22.5986 cv
90.7124 22.8194 90.9062 23.0721 91.114 23.2896 cv
91.3716 23.5557 91.6541 23.7467 91.913 24.0177 cv
92.0678 24.1783 92.1604 24.3567 92.3113 24.5139 cv
92.3958 24.5809 92.484 24.6494 92.5708 24.7155 cv
92.7367 24.8543 92.89 25.0395 92.9826 25.2252 cv
92.8905 25.2252 92.7554 25.4234 92.6937 25.486 cv
92.4555 25.7362 92.2685 25.9889 92.1894 26.3188 cv
92.1691 26.4519 92.1494 26.5839 92.1291 26.7171 cv
92.0857 26.9302 92.0307 27.1386 92.0557 27.3786 cv
92.0939 27.533 92.13 27.6859 92.1691 27.8391 cv
92.2357 27.9973 92.3003 28.1555 92.3668 28.3141 cv
92.4483 28.4891 92.4869 28.6734 92.606 28.8374 cv
92.6957 28.956 92.8486 29.0003 92.9604 29.0842 cv
93.0727 29.1652 93.1181 29.3017 93.2309 29.386 cv
93.3385 29.4382 93.445 29.4874 93.5516 29.536 cv
93.7015 29.6364 93.8482 29.7352 93.9962 29.8331 cv
94.1929 29.9584 94.4336 30.0439 94.6066 30.2088 cv
94.7205 30.3645 94.8324 30.5193 94.9456 30.6755 cv
95.0483 30.8018 95.2156 30.8906 95.2899 31.0396 cv
95.3391 31.1418 95.3777 31.2821 95.3835 31.4036 cv
95.3893 31.5165 95.3598 31.6428 95.3864 31.7508 cv
95.4466 32.0059 95.5493 32.3691 95.5045 32.6419 cv
95.2726 32.6409 94.7904 32.058 94.6163 31.8873 cv
94.259 31.5526 93.8992 31.2194 93.5439 30.8848 cv
93.283 30.6084 93.024 30.3307 92.7631 30.0529 cv
92.2491 29.5168 91.6936 29.0172 91.1864 28.4891 cv
90.9158 28.2056 90.6376 27.9269 90.3638 27.6414 cv
90.2514 27.5084 90.1328 27.3738 90.018 27.2408 cv
89.0762 26.3188 88.1431 25.404 87.2077 24.4879 cv
86.9599 24.2178 86.7105 23.9483 86.4603 23.6796 cv
85.9231 23.1357 85.426 22.5976 84.8642 22.0797 cv
84.5883 21.8222 84 21.4717 83.9007 21.111 cv
84.299 21.1134 84.7031 21.0883 85.1115 21.0907 cv
cp
f
79.0353 49.4782 mo
78.6138 49.8716 78.2719 50.3278 77.8606 50.7213 cv
77.2531 51.3163 76.6454 51.9085 76.0403 52.5035 cv
75.8387 52.7099 75.5474 52.925 75.397 53.1564 cv
75.3888 53.1564 75.3792 53.1564 75.3676 53.1564 cv
75.3666 53.2133 75.3016 53.0522 75.2948 53.0089 cv
75.2929 52.8005 75.2885 52.5874 75.2861 52.3772 cv
75.2977 51.7435 75.3112 51.1089 75.3261 50.4773 cv
75.329 49.9517 75.3358 49.4501 75.3305 48.9516 cv
75.3251 48.777 75.3165 48.6034 75.3097 48.4318 cv
75.3203 47.9582 75.3484 47.4345 75.343 46.934 cv
75.3363 46.7218 75.329 46.5117 75.3208 46.2994 cv
75.3266 45.9937 75.3512 45.6735 75.3522 45.3495 cv
75.3445 45.1556 75.3387 44.9656 75.329 44.7728 cv
75.3329 44.225 75.3334 43.6791 75.3363 43.1314 cv
75.33 42.9674 75.3223 42.8044 75.3136 42.6424 cv
75.3329 42.4399 75.3522 42.2359 75.3696 42.0367 cv
75.3845 41.5816 75.3387 41.1524 75.3556 40.7107 cv
75.372 40.3761 75.3898 40.0394 75.4052 39.7038 cv
75.397 38.981 75.3638 38.265 75.382 37.5426 cv
75.4043 37.1978 75.4245 36.8506 75.4477 36.5058 cv
75.4356 36.3226 75.4216 36.1403 75.4062 35.958 cv
75.3999 35.2242 75.4255 34.4753 75.4178 33.7698 cv
75.4096 33.6151 75.4024 33.4612 75.3946 33.3078 cv
75.4062 33.1265 75.4178 32.9433 75.4303 32.7615 cv
75.4327 32.5474 75.3902 32.3449 75.4043 32.1255 cv
75.4192 32.0011 75.4361 31.8781 75.4506 31.7532 cv
75.4457 31.4104 75.4342 31.0589 75.4361 30.7151 cv
75.7307 30.8235 75.9661 31.149 76.1917 31.3694 cv
76.6912 31.8535 77.187 32.3381 77.6826 32.8209 cv
77.8544 33.005 78.0255 33.1873 78.1967 33.3692 cv
78.571 33.723 78.9451 34.0837 79.2827 34.4719 cv
79.3965 34.604 79.503 34.7395 79.6366 34.8669 cv
79.8815 35.0993 80.1448 35.3129 80.383 35.5636 cv
80.4867 35.6726 80.5383 35.7922 80.6507 35.8978 cv
81.2259 36.4441 81.8339 36.9553 82.415 37.5074 cv
82.9686 38.0773 83.5212 38.6487 84.0719 39.2202 cv
84.4224 39.5524 86.6344 41.6283 86.5032 41.9481 cv
86.4631 42.0083 86.4241 42.0685 86.3811 42.1298 cv
86.1222 42.574 85.5157 43.0735 85.1188 43.4332 cv
84.9804 43.5557 84.8955 43.7225 84.7629 43.8576 cv
84.4364 44.1903 84.1124 44.5056 83.7855 44.8355 cv
83.3332 45.2839 82.8731 45.7304 82.417 46.177 cv
82.1176 46.4817 81.8185 46.7875 81.5206 47.0931 cv
81.4439 47.1819 81.3687 47.2687 81.2925 47.3545 cv
80.5383 48.0547 79.7889 48.7799 79.0353 49.4782 cv
cp
f
91.2717 63.2123 mo
91.0229 63.2123 90.193 63.1554 90.0465 63.2548 cv
89.99 63.2933 89.9842 63.3676 89.9804 63.4341 cv
89.9746 64.2037 89.9679 64.9733 89.962 65.7401 cv
89.9664 66.0728 90.0055 66.5579 89.9361 66.8877 cv
89.9192 66.9697 89.8733 67.041 89.8101 67.0921 cv
89.8101 67.1027 89.8101 67.1114 89.8101 67.1239 cv
89.5734 67.1201 89.3641 67.0199 89.1447 66.9841 cv
88.935 66.9533 88.7165 67.0035 88.5145 67.0035 cv
88.3611 66.9812 88.2068 66.961 88.052 66.9417 cv
87.7554 66.9147 87.4565 66.8867 87.159 66.8568 cv
87.0433 66.8453 86.86 66.8298 86.7573 66.8752 cv
86.0692 66.8703 85.4303 66.7334 84.7697 66.6698 cv
84.4634 66.637 84.166 66.6408 83.8819 66.5907 cv
83.6404 66.5492 83.3987 66.5106 83.1587 66.4711 cv
83.055 66.447 82.9464 66.4219 82.8404 66.3997 cv
82.689 66.391 82.5371 66.3853 82.3832 66.3756 cv
82.0375 66.3139 81.6899 66.2521 81.3426 66.1894 cv
81.0769 66.1538 80.7398 66.1499 80.5118 66.0342 cv
80.5021 66.0342 80.4925 66.0342 80.4809 66.0342 cv
80.4809 66.0149 80.4809 65.9956 80.4809 65.9763 cv
80.5253 65.9763 80.5021 65.987 80.5229 65.9542 cv
80.6777 65.7082 80.9742 65.4469 81.1946 65.2453 cv
81.3967 65.0438 81.5967 64.8432 81.7978 64.6387 cv
82.1059 64.3339 82.4391 64.0581 82.7531 63.7495 cv
82.9079 63.5981 83.0627 63.4457 83.2169 63.2962 cv
83.3442 63.1545 83.4725 63.0108 83.5998 62.8699 cv
84.3921 62.111 85.2017 61.3722 85.9766 60.5804 cv
86.4545 60.0934 86.8962 59.5804 87.3861 59.1097 cv
88.0675 58.4549 88.7401 57.8145 89.3873 57.1326 cv
89.5748 56.9398 89.7658 56.745 89.9553 56.5492 cv
90.0783 56.7238 90.0035 57.3882 89.9842 57.6158 cv
89.9524 57.9813 89.9456 58.3507 89.9428 58.7394 cv
89.9418 58.9843 89.911 59.2399 89.9886 59.4511 cv
90.0595 59.6565 90.2046 59.835 90.3285 60.0163 cv
90.3956 60.1234 90.4317 60.2593 90.5547 60.3288 cv
90.7302 60.4252 91.2858 60.4492 91.5166 60.4397 cv
91.9236 60.4242 92.3461 60.3952 92.7863 60.3972 cv
92.7844 60.6769 92.606 61.0211 92.511 61.269 cv
92.3379 61.7069 92.1643 62.1418 92.0008 62.5844 cv
91.9376 62.7485 91.8822 62.9703 91.7645 63.1081 cv
91.6772 63.2017 91.5572 63.1391 91.4453 63.1834 cv
91.3865 63.194 91.3296 63.2017 91.2717 63.2123 cv
cp
f
93.2319 68.341 mo
92.9329 68.3102 92.6571 68.0971 92.3889 67.9862 cv
92.1758 67.8965 91.9309 67.8579 91.7361 67.7373 cv
91.7274 67.7373 91.7163 67.7373 91.7081 67.7373 cv
91.7081 67.7258 91.7081 67.719 91.7081 67.7094 cv
91.7178 67.7094 91.7274 67.7094 91.7371 67.7094 cv
91.7371 67.6679 91.7274 67.6804 91.765 67.6804 cv
92.1869 67.6814 94.1775 67.7567 94.3583 67.5792 cv
94.4485 67.4904 94.446 67.1239 94.4475 66.9754 cv
94.4519 66.0457 94.3433 64.7969 95.1979 64.3214 cv
95.3218 64.2509 95.4534 64.2365 95.5874 64.1854 cv
95.8243 64.1854 96.4077 64.2732 96.3788 64.5895 cv
96.3729 64.6657 96.2843 64.6657 96.2162 64.6753 cv
95.652 64.7419 95.5421 65.0495 95.3088 65.4884 cv
95.1188 65.8442 95.1496 66.4547 95.1395 66.9224 cv
95.1284 67.3795 95.1062 67.8136 95.1033 68.2754 cv
95.0937 68.2754 95.084 68.2754 95.0754 68.2754 cv
95.0754 68.3276 94.7933 68.2754 94.7287 68.3025 cv
94.5719 68.3005 94.436 68.345 94.2966 68.3527 cv
93.9398 68.3488 93.5854 68.345 93.2319 68.341 cv
cp
f
96.4694 68.9323 mo
96.3711 69.0547 96.2688 69.1714 96.168 69.2958 cv
95.9173 69.5505 95.6584 69.7857 95.4953 70.0924 cv
95.4871 70.0924 95.4785 70.0924 95.4688 70.0924 cv
95.2919 69.8947 95.1129 69.6999 94.9351 69.5032 cv
94.7615 69.3479 94.4099 69.1464 94.2065 69.046 cv
94.2065 69.0373 94.2065 69.0296 94.2065 69.0181 cv
94.1968 69.0181 94.1871 69.0181 94.1789 69.0181 cv
94.1789 69.0104 94.1789 68.9997 94.1789 68.9911 cv
94.1871 68.9911 94.1968 68.9911 94.2065 68.9911 cv
94.2078 68.941 94.2532 68.9573 94.2918 68.9515 cv
94.3978 68.9284 94.5054 68.9052 94.6105 68.8859 cv
94.9485 68.8744 95.2837 68.8628 95.6192 68.8551 cv
95.6348 68.7973 95.6502 68.7394 95.6656 68.6815 cv
95.6805 68.5368 95.6916 68.3932 95.7042 68.2485 cv
95.6907 68.1163 95.6752 67.9813 95.6617 67.8472 cv
95.6694 67.7113 95.6752 67.5782 95.6805 67.4432 cv
95.6776 67.1549 95.6425 66.8424 95.6656 66.5492 cv
95.7003 66.3853 95.735 66.2213 95.7702 66.0593 cv
95.8069 65.8597 95.8609 65.6166 95.9973 65.469 cv
96.1352 65.3147 96.3271 65.3301 96.5041 65.2569 cv
96.561 65.2838 96.6262 65.3147 96.6483 65.3832 cv
96.709 65.5742 96.6633 65.8288 96.6608 66.037 cv
96.669 66.5347 96.6734 67.0333 96.6762 67.5339 cv
96.6956 67.6515 96.7727 67.7537 96.8214 67.8579 cv
96.8928 68.02 96.9622 68.18 97.0331 68.343 cv
97.0611 68.343 97.0626 68.341 97.0524 68.3652 cv
96.9256 68.6034 96.6666 68.7663 96.4694 68.9323 cv
cp
f
97.6021 68.1473 mo
97.4666 68.0334 97.3697 67.7731 97.3548 67.5956 cv
97.4985 67.5975 97.6619 67.609 97.7887 67.5705 cv
98.1209 67.5715 98.4494 67.5926 98.7662 67.6043 cv
98.7662 67.6226 98.7662 67.6428 98.7662 67.6621 cv
98.6587 67.6612 98.5265 67.746 98.4387 67.7865 cv
98.174 67.9061 97.9064 68.0247 97.6407 68.1443 cv
97.6407 68.18 97.6253 68.1665 97.6021 68.1473 cv
cp
f
87.6345 44.496 mo
87.6393 44.2346 87.6904 43.9627 87.6923 43.6907 cv
87.674 43.3918 87.6576 43.0966 87.6422 42.7967 cv
87.6354 42.3029 87.6947 41.8318 87.7044 41.3573 cv
87.6885 41.0671 87.674 40.7792 87.66 40.4913 cv
87.6672 40.2714 87.6769 40.0496 87.6836 39.8311 cv
87.6672 39.6093 87.6504 39.386 87.6345 39.1667 cv
87.6363 38.8069 87.7405 38.494 87.7492 38.1309 cv
87.7352 37.9293 87.7198 37.7267 87.7019 37.5233 cv
87.7101 37.4095 87.7154 37.2943 87.7236 37.1786 cv
87.739 36.7504 87.7907 36.3453 87.7931 35.9118 cv
87.7945 35.6181 87.7463 35.1687 87.824 34.9112 cv
87.9001 34.6426 88.6886 33.7481 88.9601 33.6435 cv
88.9601 33.6343 88.9601 33.6242 88.9601 33.6151 cv
89.0184 33.8369 88.9851 34.1339 88.9614 34.3629 cv
88.9335 34.6402 88.9147 34.9305 88.9243 35.2266 cv
88.9403 35.4175 88.9562 35.6099 88.974 35.8038 cv
88.9755 36.1678 88.9778 36.5343 88.9793 36.8974 cv
88.9668 37.0623 88.9527 37.2248 88.9407 37.3878 cv
88.9489 37.5812 88.9557 37.7726 88.9624 37.9636 cv
88.9519 38.4747 88.9238 39.0562 88.9378 39.5784 cv
88.9527 40.1465 88.8751 40.7473 88.8906 41.3048 cv
88.9079 41.5155 88.9243 41.7281 88.9403 41.9399 cv
88.9432 42.3723 88.9465 42.8044 88.9489 43.2364 cv
88.935 43.439 88.9176 43.6387 88.9022 43.8421 cv
88.9017 44.1778 88.8983 44.5133 88.8973 44.848 cv
88.895 45.253 88.9504 45.9696 88.8341 46.3081 cv
88.797 46.4162 88.6645 46.4856 88.6028 46.5791 cv
88.5101 46.7064 88.4151 46.8357 88.3221 46.9658 cv
88.2295 47.0546 88.1349 47.1433 88.0433 47.232 cv
87.9479 47.4133 87.8509 47.5985 87.7574 47.7808 cv
87.7463 47.7808 87.739 47.7808 87.7295 47.7808 cv
87.7295 47.7895 87.7295 47.8 87.7295 47.8087 cv
87.7198 47.8087 87.7077 47.8087 87.699 47.8087 cv
87.7019 47.2658 87.619 46.6813 87.6122 46.1384 cv
87.6074 45.8172 87.6629 45.4691 87.6798 45.1605 cv
87.6923 44.9233 87.6311 44.7207 87.6345 44.496 cv
cp
f
88.1779 48.0681 mo
88.3187 47.7258 88.4344 47.6227 88.7127 47.3853 cv
88.8636 47.2513 88.9933 47.0854 89.1611 46.9784 cv
89.8984 46.4991 91.0556 46.5039 91.9671 46.6929 cv
92.1426 46.743 92.3167 46.7913 92.4913 46.8414 cv
93.0714 46.9523 93.5959 47.0189 94.0887 47.3092 cv
94.4114 47.4982 94.6761 47.7625 94.9731 48.0045 cv
95.0493 48.0547 95.1284 48.1048 95.2046 48.1511 cv
95.341 48.2553 95.4842 48.4761 95.6738 48.4723 cv
95.9438 48.4704 96.114 48.1222 96.3151 47.9795 cv
96.5379 47.8164 96.7592 47.6419 97.0085 47.5213 cv
97.687 47.1935 98.3645 46.8531 99.1138 46.6679 cv
99.3848 46.6062 99.6534 46.5425 99.9234 46.4789 cv
100.078 46.4508 100.246 46.4682 100.384 46.4123 cv
100.614 46.4162 100.842 46.421 101.073 46.4257 cv
101.454 46.4856 101.853 46.6736 102.151 46.8993 cv
102.283 47.0468 102.414 47.1906 102.546 47.34 cv
102.757 47.5677 102.987 47.8087 103.025 48.1241 cv
103.015 48.1241 103.005 48.1241 102.994 48.1241 cv
102.993 48.1791 102.766 48.154 102.706 48.154 cv
102.102 48.1492 101.498 48.1473 100.892 48.1434 cv
100.671 48.1414 100.374 48.1009 100.2 48.1954 cv
99.9992 48.1936 99.72 48.072 99.5372 48.1627 cv
99.4726 48.1723 99.4042 48.182 99.3366 48.1907 cv
99.1095 48.1907 98.8313 48.155 98.6432 48.2437 cv
98.5448 48.2437 98.4339 48.263 98.3568 48.3016 cv
98.1615 48.3006 97.7531 48.2514 97.606 48.3257 cv
97.5201 48.3344 97.4338 48.343 97.347 48.3517 cv
97.2617 48.3642 97.1749 48.371 97.088 48.3787 cv
96.9507 48.3787 96.7689 48.398 96.6854 48.4925 cv
96.6357 48.4925 96.6744 48.6459 96.6762 48.6969 cv
96.6884 49.2062 96.3107 49.6701 95.7832 49.6662 cv
95.3569 49.6633 95.0242 49.3566 94.9413 48.9689 cv
94.9138 48.8359 94.9485 48.6477 94.8637 48.5417 cv
94.827 48.4973 94.7576 48.4674 94.6954 48.4819 cv
94.4933 48.4723 94.2936 48.4597 94.0907 48.4482 cv
94.0444 48.4597 93.9947 48.4674 93.946 48.4781 cv
93.4745 48.4761 93.054 48.4154 92.5645 48.4144 cv
92.4401 48.4125 92.2608 48.3893 92.1614 48.4395 cv
91.8142 48.4376 91.4839 48.4067 91.1247 48.4067 cv
90.9544 48.4038 90.7388 48.3874 90.6063 48.4597 cv
90.1005 48.4568 89.5825 48.4154 89.0777 48.4221 cv
88.8992 48.4221 88.6509 48.3787 88.5019 48.4482 cv
88.3472 48.4472 88.1948 48.4453 88.0714 48.3874 cv
88.0714 48.2678 88.1369 48.1665 88.1779 48.0681 cv
cp
f
103.354 40.4069 mo
103.335 40.4069 103.317 40.4069 103.298 40.4069 cv
103.206 40.1784 103.24 39.9584 103.242 39.6865 cv
103.244 39.3417 103.168 38.9945 103.335 38.7057 cv
103.426 38.725 103.496 38.751 103.535 38.8364 cv
103.621 39.0321 103.608 40.4093 103.354 40.4069 cv
cp
102.914 36.8617 mo
102.914 36.8708 102.914 36.8815 102.914 36.8892 cv
102.689 36.8449 102.65 36.6698 102.773 36.4866 cv
102.892 36.5435 103.026 36.8617 102.914 36.8617 cv
cp
102.84 41.0704 mo
102.828 41.0989 102.659 41.339 102.659 41.1798 cv
102.62 41.0945 102.63 40.9634 102.63 40.8621 cv
102.621 40.5993 102.626 40.3013 102.62 40.0279 cv
102.618 39.6648 102.616 39.2974 102.614 38.9342 cv
102.616 38.6396 102.588 38.331 102.704 38.0981 cv
102.792 38.141 102.858 38.2138 102.884 38.306 cv
102.969 38.6246 102.902 38.9878 102.9 39.3393 cv
102.898 39.8152 103.02 40.6528 102.84 41.0704 cv
cp
103.863 36.6341 mo
103.86 36.3636 103.81 36.0883 103.788 35.8274 cv
103.781 35.6842 103.773 35.5395 103.765 35.3938 cv
103.759 35.3394 103.781 35.0795 103.731 35.0775 cv
103.731 35.0693 103.731 35.0602 103.731 35.0501 cv
103.702 35.0501 103.673 35.0501 103.644 35.0501 cv
103.585 35.6157 103.616 36.2372 103.602 36.8357 cv
103.597 37.0681 103.495 37.2398 103.477 37.4413 cv
103.478 37.5561 103.48 37.6723 103.484 37.7861 cv
103.473 37.8908 103.464 37.9978 103.455 38.1034 cv
103.315 38.1227 103.216 38.0865 103.186 37.951 cv
103.141 37.7577 103.237 37.5947 103.232 37.4114 cv
103.216 37.2851 103.206 37.1602 103.19 37.0339 cv
103.184 36.3521 103.246 35.6292 103.24 34.9614 cv
103.227 34.8452 103.216 34.7304 103.204 34.6175 cv
103.187 34.5587 103.172 34.5018 103.16 34.4425 cv
103.129 34.4425 103.101 34.4425 103.07 34.441 cv
103.07 34.4516 103.07 34.4618 103.07 34.471 cv
103.06 34.471 103.051 34.471 103.041 34.471 cv
103.025 34.9589 102.969 35.3982 102.944 35.8809 cv
102.925 35.9672 102.908 36.054 102.889 36.1403 cv
102.86 36.1403 102.832 36.1403 102.802 36.1403 cv
102.65 35.7613 102.698 35.2627 102.693 34.8147 cv
102.69 34.5732 102.716 34.3253 102.642 34.1228 cv
102.554 34.2785 102.56 34.4401 102.544 34.6393 cv
102.526 34.8693 102.511 35.1456 102.523 35.3891 cv
102.536 35.6451 102.584 35.9296 102.564 36.1972 cv
102.421 37.8488 102.497 39.468 102.487 41.15 cv
102.478 41.4861 102.47 41.8217 102.464 42.1573 cv
102.441 42.4427 102.394 42.7523 102.391 43.0532 cv
102.389 43.4669 102.418 43.9096 102.41 44.3494 cv
102.402 44.7592 102.356 45.2184 102.381 45.6436 cv
102.385 45.7015 102.394 45.8481 102.461 45.8481 cv
102.461 45.8558 102.461 45.8655 102.461 45.8751 cv
102.47 45.8751 102.479 45.8751 102.489 45.8751 cv
102.489 45.8655 102.489 45.8558 102.489 45.8481 cv
102.498 45.8481 102.511 45.8481 102.518 45.8481 cv
102.595 45.6041 102.57 45.3186 102.581 45.0399 cv
102.598 44.5866 102.655 44.1286 102.642 43.6569 cv
102.635 43.3638 102.573 42.9954 102.674 42.7147 cv
102.691 42.6675 102.726 42.6521 102.781 42.6675 cv
102.893 42.6983 102.918 42.8671 102.933 42.9684 cv
102.99 43.3194 102.925 43.6656 102.905 44.035 cv
102.902 44.3233 102.901 44.6108 102.898 44.8991 cv
102.897 45.2145 102.877 45.5511 102.911 45.85 cv
102.928 46.0169 102.892 46.177 102.94 46.3322 cv
102.968 46.4219 102.987 46.6293 103.118 46.6293 cv
103.149 46.1529 103.167 45.6157 103.17 45.1296 cv
103.16 44.9001 103.146 44.6686 103.135 44.4381 cv
103.157 44.2096 103.178 43.9781 103.2 43.7486 cv
103.224 43.5943 103.247 43.44 103.271 43.2866 cv
103.272 43.0725 103.206 42.8661 103.18 42.68 cv
103.136 42.3704 103.145 42.0377 103.146 41.7012 cv
103.147 41.5247 103.148 41.3448 103.196 41.1875 cv
103.211 41.1355 103.294 41.0887 103.294 41.041 cv
103.304 41.041 103.314 41.041 103.322 41.041 cv
103.424 41.1297 103.487 41.2208 103.509 41.3607 cv
103.559 41.7122 103.534 42.1505 103.51 42.5093 cv
103.5 42.6366 103.459 42.7436 103.461 42.8845 cv
103.464 43.2018 103.546 43.5364 103.554 43.8643 cv
103.547 43.9974 103.541 44.1315 103.535 44.2674 cv
103.531 44.8509 103.528 45.3746 103.526 45.9677 cv
103.523 46.3901 103.562 46.8414 103.604 47.2398 cv
103.595 47.3149 103.585 47.3902 103.574 47.4673 cv
103.613 47.4673 103.651 47.4673 103.69 47.4673 cv
103.805 47.2186 103.771 46.909 103.783 46.6013 cv
103.794 46.2773 103.843 45.903 103.804 45.5684 cv
103.774 45.3466 103.742 45.1257 103.709 44.9011 cv
103.714 44.6686 103.787 44.4574 103.794 44.2115 cv
103.802 43.8498 103.74 43.5268 103.742 43.1738 cv
103.764 42.8015 103.786 42.4263 103.806 42.0503 cv
103.806 41.7634 103.809 41.4754 103.807 41.1875 cv
103.794 41.0719 103.778 40.9575 103.762 40.8418 cv
103.759 40.6586 103.811 40.5106 103.816 40.3239 cv
103.809 40.0245 103.801 39.7289 103.794 39.4295 cv
103.794 38.9728 103.825 38.5201 103.828 38.0465 cv
103.832 37.5595 103.867 37.1018 103.863 36.6341 cv
cp
f
100.782 36.0935 mo
100.672 36.1698 100.508 36.2021 100.382 36.2392 cv
100.055 36.3371 99.7306 36.4374 99.4042 36.5376 cv
98.9576 36.6766 98.499 36.8449 98.0809 37.0508 cv
97.7877 37.2214 97.4941 37.3922 97.1971 37.5643 cv
97.1489 37.5879 96.7438 37.801 96.7453 37.6892 cv
96.7332 37.6892 96.7259 37.6892 96.7148 37.6892 cv
96.7535 37.3863 97.1035 37.1794 97.3408 37.0406 cv
97.455 36.9596 97.5713 36.8776 97.685 36.7937 cv
97.9777 36.6072 98.2927 36.4258 98.6031 36.2817 cv
98.931 36.1278 99.2797 36.0448 99.625 35.9286 cv
99.7441 35.8742 99.8612 35.823 99.9769 35.7715 cv
100.133 35.717 100.288 35.6611 100.444 35.6089 cv
100.563 35.6089 100.703 35.5989 100.81 35.634 cv
101.034 35.7136 100.924 35.9889 100.782 36.0935 cv
cp
100.735 43.1391 mo
100.501 43.2799 100.188 43.2779 99.9128 43.3387 cv
99.6631 43.3898 99.4157 43.4669 99.1606 43.5248 cv
98.3037 43.7225 97.5925 44.0669 96.86 44.5056 cv
96.7689 44.5577 96.5282 44.7882 96.4375 44.6194 cv
96.3711 44.5028 96.5489 44.3812 96.6203 44.3176 cv
96.9072 44.0678 97.2004 43.901 97.5105 43.7071 cv
97.8543 43.492 98.1972 43.3011 98.5757 43.1545 cv
98.6967 43.088 98.8173 43.0243 98.9393 42.9577 cv
99.4104 42.7716 99.8974 42.6559 100.377 42.4929 cv
100.511 42.4929 100.652 42.4958 100.763 42.5508 cv
100.995 42.6732 100.934 43.0185 100.735 43.1391 cv
cp
96.7134 40.7883 mo
97.4058 40.1441 98.3052 39.8268 99.1509 39.483 cv
99.4196 39.3726 99.7325 39.1778 100.049 39.1792 cv
100.156 39.0958 100.397 38.9786 100.539 38.9801 cv
100.539 38.9685 100.539 38.9617 100.539 38.9501 cv
100.706 38.9786 100.833 39.0495 100.838 39.2395 cv
100.843 39.4034 100.761 39.5365 100.635 39.6204 cv
100.383 39.7878 100.08 39.8162 99.7904 39.9156 cv
99.4649 40.0245 99.1259 40.1474 98.797 40.2478 cv
98.5723 40.3157 98.3471 40.364 98.1335 40.4503 cv
97.7449 40.6075 97.3571 40.8086 96.9984 41.0251 cv
96.8706 41.1022 96.738 41.2228 96.5765 41.2285 cv
96.5374 41.23 96.4945 41.2267 96.4684 41.1992 cv
96.3301 41.0602 96.6319 40.8602 96.7134 40.7883 cv
cp
102.057 39.7072 mo
102.042 39.5365 102.026 39.3634 102.009 39.1893 cv
102.001 38.4665 102.043 37.7244 102.047 37.0305 cv
102.04 36.8082 102.032 36.5878 102.024 36.3646 cv
102.018 35.8148 102.028 35.2811 101.997 34.752 cv
101.967 34.5871 101.939 34.4242 101.907 34.2579 cv
101.878 34.0692 101.916 33.8542 101.928 33.6584 cv
101.929 33.5923 101.947 33.399 101.866 33.3976 cv
101.727 33.3315 101.567 33.3623 101.407 33.3546 cv
101.219 33.3431 101.035 33.3064 100.83 33.3055 cv
100.614 33.3816 100.346 33.3566 100.114 33.401 cv
99.0473 33.6 98.0505 33.7549 97.1276 34.2453 cv
96.9015 34.3663 96.658 34.4961 96.4848 34.7029 cv
96.3537 34.8611 96.3498 35.0583 96.3189 35.2665 cv
96.2438 35.757 96.2457 36.2817 96.2278 36.8231 cv
96.2085 37.0931 96.1898 37.3617 96.1704 37.6314 cv
96.1652 38.0214 96.1642 38.4164 96.1593 38.8103 cv
96.1415 38.9642 96.1256 39.1175 96.1073 39.2698 cv
96.0712 39.6354 96.0807 40.0394 96.0677 40.3958 cv
96.0484 40.9465 96.0802 41.5087 96.0918 42.0377 cv
96.1043 42.5441 96.0712 43.0918 96.0774 43.6213 cv
96.0899 43.765 96.1025 43.9077 96.114 44.0543 cv
96.1025 44.1401 96.0928 44.2279 96.0807 44.3128 cv
96.0794 44.5568 96.1275 44.7969 96.1256 45.0621 cv
96.1217 45.771 96.1034 46.6833 96.3855 47.2465 cv
96.4004 47.2744 96.4892 47.4017 96.4892 47.34 cv
96.8075 47.2156 97.091 46.9687 97.3889 46.8067 cv
97.6542 46.6621 97.9421 46.5753 98.2082 46.4344 cv
98.5294 46.2628 98.6967 46.1413 99.1167 46.1461 cv
99.2358 46.0689 99.5902 46.0024 99.7518 46.0053 cv
99.8202 45.9947 99.8863 45.987 99.9515 45.9783 cv
100.011 45.9677 100.069 45.9609 100.124 45.9484 cv
100.431 45.798 101.143 45.9368 101.452 46.0139 cv
101.603 46.0525 101.758 46.0921 101.913 46.1307 cv
101.986 45.6861 101.913 45.1807 101.903 44.7477 cv
101.918 44.4998 101.935 44.2501 101.951 44.0013 cv
101.954 43.6869 101.931 43.3705 101.936 43.0773 cv
101.952 42.9221 101.969 42.7687 101.985 42.6163 cv
102.003 42.2528 101.982 41.9046 102.001 41.5507 cv
102.012 41.3448 102.045 41.1249 102.05 40.917 cv
102.057 40.5188 102.069 40.118 102.057 39.7072 cv
cp
f
95.192 37.8555 mo
95.1592 37.9182 95.0551 37.9216 94.9924 37.91 cv
94.8212 37.8739 94.6925 37.7167 94.5474 37.6314 cv
94.3805 37.5359 94.2122 37.4423 94.0444 37.3478 cv
93.1499 36.895 92.1397 36.6321 91.1632 36.3612 cv
90.8816 36.2825 90.5161 36.3009 90.274 36.1495 cv
90.0754 36.0241 90.0715 35.757 90.2447 35.6089 cv
90.6646 35.6114 91.0031 35.7454 91.3716 35.8558 cv
91.4839 35.8775 91.5957 35.9002 91.7053 35.9229 cv
91.9478 35.9889 92.1802 36.0892 92.4097 36.1813 cv
92.6147 36.2517 92.8172 36.3245 93.024 36.3954 cv
93.1209 36.4489 93.2198 36.5035 93.3163 36.5545 cv
93.5979 36.6857 93.8781 36.8188 94.1582 36.9504 cv
94.3323 37.0324 95.2986 37.6337 95.192 37.8555 cv
cp
95.0801 41.4543 mo
95.0594 41.462 95.0401 41.4702 95.0204 41.4754 cv
95.0083 41.4769 94.9997 41.4812 94.9891 41.4827 cv
94.7879 41.5122 93.9755 40.8461 93.7291 40.7314 cv
93.4407 40.5935 93.1422 40.4845 92.8427 40.3684 cv
92.4416 40.2135 92.051 40.0361 91.6001 39.9758 cv
91.428 39.9541 91.2577 39.9324 91.0832 39.9083 cv
90.8484 39.8957 90.4814 39.9492 90.3068 39.8109 cv
90.0927 39.6378 90.2321 39.1801 90.5142 39.1811 cv
90.5142 39.1734 90.5142 39.1642 90.5142 39.1542 cv
91.7867 39.2438 92.8871 39.8253 93.9205 40.4069 cv
94.1991 40.5641 94.9196 40.9985 95.0662 41.2902 cv
95.0831 41.323 95.1366 41.4552 95.0801 41.4543 cv
cp
94.3911 44.6088 mo
93.8983 44.3764 93.3718 44.1903 92.8427 44.0234 cv
92.659 43.9665 92.4676 43.9434 92.2742 43.9038 cv
91.994 43.8459 91.7013 43.765 91.4062 43.7196 cv
91.0798 43.6685 90.7457 43.6551 90.4302 43.5865 cv
90.3951 43.5721 90.3594 43.5576 90.3237 43.545 cv
90.0634 43.4013 90.0595 42.896 90.4346 42.899 cv
90.4346 42.8903 90.4346 42.8796 90.4346 42.8691 cv
90.6694 42.87 90.8411 42.9298 91.0422 42.9731 cv
91.251 43.0185 91.4646 43.0378 91.669 43.088 cv
91.8436 43.1536 92.0177 43.2172 92.1899 43.2779 cv
92.7044 43.4438 93.1726 43.6146 93.6543 43.8421 cv
93.7681 43.8836 93.881 43.927 93.9962 43.9655 cv
94.2705 44.0871 94.6674 44.3803 94.8656 44.6165 cv
94.9413 44.7005 95.0619 44.7535 95.0619 44.8818 cv
94.8212 44.9126 94.5859 44.7005 94.3911 44.6088 cv
cp
95.437 35.866 mo
95.3969 35.4416 95.4534 34.9932 95.2133 34.6711 cv
94.7628 34.0625 94.1481 33.8417 93.4894 33.5933 cv
93.3129 33.534 93.1403 33.4719 92.9633 33.4115 cv
92.7641 33.3739 92.5659 33.3373 92.3653 33.2996 cv
92.0596 33.2225 91.7081 33.1589 91.3811 33.1429 cv
90.9197 33.1382 90.4606 33.1347 89.9997 33.1305 cv
89.8627 33.1917 89.637 33.1714 89.5479 33.3055 cv
89.4587 33.4409 89.5054 33.9646 89.5054 34.1647 cv
89.501 34.9445 89.4664 35.7228 89.4615 36.5261 cv
89.4587 36.9972 89.4552 37.4683 89.4514 37.9375 cv
89.4239 38.331 89.3978 38.725 89.3714 39.1199 cv
89.3602 39.4011 89.4741 39.657 89.4664 39.9541 cv
89.4543 40.5323 89.4423 41.1683 89.4306 41.7691 cv
89.4094 42.0194 89.3921 42.2701 89.3709 42.517 cv
89.3627 43.0301 89.3998 43.5094 89.3891 44.0157 cv
89.3709 44.2664 89.3506 44.5153 89.3313 44.7631 cv
89.3294 45.0061 89.4042 45.2058 89.4017 45.4266 cv
89.4008 45.6861 89.3525 45.9329 89.3506 46.2039 cv
89.4552 46.2059 89.5609 46.2078 89.6674 46.2078 cv
89.7465 46.1693 89.857 46.1499 89.9543 46.1499 cv
90.0358 46.1114 90.1467 46.096 90.2432 46.096 cv
90.3121 46.0835 90.3787 46.0766 90.4443 46.0689 cv
90.7186 45.9475 91.4646 46.1017 91.7438 46.1461 cv
92.0982 46.2078 92.429 46.1944 92.7748 46.2676 cv
93.1818 46.3525 93.798 46.5878 94.1496 46.7952 cv
94.2744 46.8685 94.9833 47.4171 95.0469 47.4171 cv
95.0469 47.4094 95.0469 47.3989 95.0469 47.3902 cv
95.2311 47.0854 95.2128 46.7894 95.2653 46.4123 cv
95.3237 45.987 95.3324 45.5549 95.3507 45.0872 cv
95.3728 44.4256 95.4125 43.7447 95.4163 43.0696 cv
95.4105 42.7822 95.4051 42.4929 95.3969 42.2065 cv
95.4279 41.3766 95.4202 40.5708 95.4375 39.7574 cv
95.4635 38.4858 95.5488 37.1327 95.437 35.866 cv
cp
f
93.6394 10.5304 mo
93.2015 10.583 92.7636 10.6365 92.3259 10.6885 cv
91.9482 10.7479 91.576 10.8149 91.1652 10.8289 cv
90.2706 11.0015 89.3762 11.1722 88.4812 11.3444 cv
87.2226 11.6004 86.0307 12.1309 84.8772 12.6073 cv
82.7159 13.4984 80.6791 14.5342 78.717 15.8284 cv
78.2522 16.1331 75.0098 18.4058 75.0103 18.7597 cv
75.5379 18.8007 76.0688 18.8441 76.5972 18.885 cv
77.8698 18.9603 79.1987 18.9111 80.4636 18.9111 cv
81.2453 18.9497 82.0288 18.9907 82.8099 19.0283 cv
83.1181 18.885 83.6095 18.9603 83.9841 18.9589 cv
85.0527 18.9579 86.0692 19.0264 87.0895 19.0249 cv
87.6152 18.8041 88.4633 18.9979 89.0223 19.0182 cv
90.7475 19.0182 92.4729 19.0192 94.1987 19.0192 cv
96.1319 19.0625 98.064 19.107 99.9958 19.1488 cv
103.563 19.1026 107.131 19.0524 110.695 19.0046 cv
110.961 18.9088 111.357 19.0023 111.663 19.0023 cv
112.282 19.0192 112.905 19.0374 113.524 19.0548 cv
113.845 19.0384 114.168 19.0225 114.49 19.0056 cv
115.098 19.0225 115.77 19.0842 116.422 19.065 cv
116.563 19.0582 116.97 19.0866 117.116 19.0866 cv
117.553 19.0866 116.766 18.4617 116.629 18.3093 cv
116.18 17.8016 115.68 17.452 115.148 17.0981 cv
114.829 16.8468 114.512 16.5941 114.192 16.3424 cv
113.542 15.9065 112.889 15.4744 112.238 15.0385 cv
108.161 12.5755 104.225 11.1221 99.1577 10.6216 cv
98.4218 10.608 97.688 10.5931 96.9526 10.5771 cv
95.8825 10.5603 94.7267 10.5294 93.6394 10.5304 cv
cp
.0683299 1 .852323 .00955215 cmyk
f
73.2932 20.352 mo
72.8495 20.8038 72.1932 21.4606 71.7491 21.9124 cv
70.8291 23.1507 69.9105 24.3885 68.991 25.6283 cv
67.0568 28.8884 65.8764 32.2813 65.0431 36.0844 cv
64.9071 36.691 64.91 37.2943 64.8502 37.9385 cv
64.5532 41.0728 64.4669 44.5963 64.9678 47.6863 cv
65.1043 48.1984 65.2413 48.7095 65.3773 49.2158 cv
65.5307 50.0597 65.6565 50.8389 65.9212 51.623 cv
66.1864 52.274 66.4521 52.9211 66.7168 53.5701 cv
67.0341 54.5239 67.5178 55.3813 67.972 56.2628 cv
69.0469 58.3575 70.2943 60.348 71.8099 62.2422 cv
72.0313 62.515 72.5853 63.2837 72.9778 63.2837 cv
72.9783 63.2595 72.9783 63.2393 72.9783 63.2142 cv
73.2826 62.6356 73.0709 60.8843 73.0487 60.1754 cv
73.0444 58.9805 73.0414 57.7856 73.0391 56.5868 cv
73.0376 55.5192 72.9961 54.3909 73.0487 53.275 cv
73.1577 50.8968 73.0641 48.4328 73.0998 46.0256 cv
73.1292 43.9906 73.2339 41.8954 73.2319 39.8142 cv
73.2304 37.8589 73.1152 35.7126 73.2826 33.8176 cv
73.2667 33.6069 73.2512 33.3966 73.2343 33.1835 cv
73.2314 32.5884 73.2309 31.99 73.2286 31.3926 cv
73.2618 30.5675 73.2956 29.742 73.3293 28.915 cv
73.2744 27.1371 73.2855 25.3298 73.2281 23.5224 cv
73.1846 22.2538 73.3418 21.0324 73.2932 20.352 cv
cp
f
118.818 20.5453 mo
118.72 21.7619 118.922 23.6502 118.905 24.9305 cv
118.862 27.6892 118.851 30.4306 118.853 33.2862 cv
118.858 37.9467 118.859 42.1766 118.863 46.6785 cv
118.865 49.1965 118.737 51.7069 118.862 54.2674 cv
118.852 55.3042 118.846 56.3409 118.836 57.3757 cv
118.838 59.2795 119.054 61.269 118.656 63.1004 cv
118.629 63.2085 118.383 64.0273 118.578 64.0273 cv
119.23 64.0273 122.223 59.7067 122.642 59.0162 cv
122.944 58.4646 123.245 57.9158 123.547 57.3651 cv
123.712 56.9909 123.879 56.6177 124.044 56.2396 cv
124.625 55.2097 125.292 53.9559 125.681 52.8218 cv
126.497 50.4251 126.99 47.9631 127.334 45.3225 cv
127.447 44.4574 127.413 43.6193 127.428 42.7051 cv
127.449 42.2209 127.47 41.7387 127.491 41.2561 cv
127.448 38.6714 127.145 35.9368 126.48 33.6392 cv
125.819 31.3675 124.79 29.1585 123.659 27.112 cv
123.264 26.3964 122.773 25.7421 122.332 25.0452 cv
121.741 24.1165 119.208 20.2541 118.818 20.5453 cv
cp
f
114.666 67.3168 mo
112.897 68.6468 109.219 68.7866 106.879 69.0731 cv
106.279 69.1502 105.679 69.2264 105.077 69.3006 cv
102.158 69.4405 98.3134 69.7124 97.2636 72.7109 cv
97.1551 73.0349 97.1662 73.1023 97.0562 73.4254 cv
97.0085 73.7109 98.3582 73.4409 98.9793 73.439 cv
99.1577 73.3492 99.4485 73.3724 99.6703 73.3714 cv
99.8077 73.3463 99.9461 73.3241 100.084 73.302 cv
100.429 73.11 100.962 73.0936 101.395 73.0918 cv
101.684 72.9461 102.076 72.9538 102.431 72.9538 cv
102.81 72.7465 103.737 72.6067 104.224 72.6067 cv
105.049 72.3241 105.875 72.0396 106.698 71.7541 cv
109.037 70.8052 111.522 69.8513 113.521 68.2495 cv
113.817 68.0131 114.189 67.937 114.666 67.3168 cv
cp
f
78.297 67.9042 mo
78.8154 68.5282 79.5522 68.6718 80.1974 69.1116 cv
80.5658 69.3817 81.1044 69.6642 81.4694 69.9333 cv
82.8832 70.6103 83.9519 71.1658 85.3961 71.6442 cv
86.9849 72.1717 88.5396 72.6741 90.2489 72.9857 cv
90.8266 73.0918 94.7653 73.8073 94.9124 73.439 cv
95.1492 72.842 93.8651 71.3789 93.4185 71.0019 cv
93.0023 70.6489 92.497 70.4242 92.0398 70.1734 cv
91.5986 69.9314 91.0802 69.7915 90.5938 69.6584 cv
89.9515 69.4809 89.3294 69.2765 88.6446 69.1618 cv
87.9898 69.0509 87.3422 69.046 86.6507 68.9805 cv
86.0494 68.885 85.451 68.7866 84.8483 68.6892 cv
84.07 68.5832 83.2903 68.5927 82.5125 68.4954 cv
81.0842 68.3189 79.7509 67.991 78.297 67.9042 cv
cp
f
10.1966 105.642 mo
7.86416 105.642 li
7.86416 117.462 li
7.86416 118.389 7.97684 119.015 8.20479 119.338 cv
8.43189 119.661 8.87307 119.824 9.52834 119.824 cv
9.52834 120.269 li
4.0894 120.269 li
4.0894 119.824 li
4.76547 119.824 5.22486 119.638 5.46842 119.266 cv
5.71111 118.894 5.83246 118.267 5.83246 117.384 cv
5.83246 105.642 li
3.60401 105.642 li
2.53789 105.642 1.763 105.813 1.27761 106.154 cv
.79309 106.494 .520059 107.058 .458519 107.845 cv
0 107.845 li
0 104.319 li
.458519 104.319 li
.869365 104.704 1.63819 104.895 2.76585 104.895 cv
10.8259 104.895 li
11.9874 104.895 12.8004 104.704 13.2632 104.319 cv
13.7486 104.319 li
13.7486 107.845 li
13.447 107.845 li
13.2546 106.997 12.9113 106.418 12.4181 106.108 cv
11.9241 105.798 11.1839 105.642 10.1966 105.642 cv
cp
1 .871122 .421698 .518273 cmyk
f
27.7772 117.381 mo
27.7772 112.916 li
19.4025 112.916 li
19.4025 117.381 li
19.4025 118.291 19.5308 118.926 19.7891 119.285 cv
20.0465 119.644 20.512 119.824 21.1846 119.824 cv
21.1846 120.269 li
15.6278 120.269 li
15.6278 119.824 li
16.3004 119.824 16.7589 119.642 17.0042 119.279 cv
17.2486 118.916 17.3708 118.284 17.3708 117.384 cv
17.3708 107.795 li
17.3708 106.85 17.246 106.205 16.9973 105.86 cv
16.7485 105.514 16.2917 105.342 15.6278 105.342 cv
15.6278 104.895 li
21.1846 104.895 li
21.1846 105.342 li
20.512 105.342 20.0465 105.527 19.7891 105.898 cv
19.5308 106.27 19.4025 106.901 19.4025 107.792 cv
19.4025 112.169 li
27.7772 112.169 li
27.7772 107.792 li
27.7772 106.848 27.6567 106.204 27.4166 105.859 cv
27.1765 105.514 26.7241 105.342 26.0601 105.342 cv
26.0601 104.895 li
31.565 104.895 li
31.565 105.342 li
30.9097 105.342 30.4546 105.521 30.2015 105.879 cv
29.9485 106.238 29.8219 106.876 29.8219 107.795 cv
29.8219 117.384 li
29.8219 118.301 29.9485 118.938 30.2015 119.292 cv
30.4546 119.647 30.9097 119.824 31.565 119.824 cv
31.565 120.269 li
26.0601 120.269 li
26.0601 119.824 li
26.7414 119.824 27.1982 119.647 27.4296 119.291 cv
27.6611 118.937 27.7772 118.301 27.7772 117.381 cv
cp
f
43.5645 110.715 mo
44.023 110.715 li
44.023 114.45 li
43.5645 114.45 li
43.398 113.794 43.1978 113.384 42.9621 113.218 cv
42.7254 113.052 42.2097 112.969 41.4149 112.969 cv
37.6011 112.969 li
37.6011 118.473 li
37.6011 118.858 37.6861 119.129 37.8568 119.286 cv
38.0276 119.443 38.3179 119.522 38.7288 119.522 cv
41.4149 119.522 li
42.3761 119.522 43.0401 119.47 43.4076 119.365 cv
43.7742 119.26 44.0845 119.065 44.3376 118.782 cv
44.5907 118.497 44.862 118.037 45.1506 117.399 cv
45.6092 117.399 li
44.901 120.269 li
33.8264 120.269 li
33.8264 119.824 li
34.5172 119.824 34.98 119.647 35.2158 119.292 cv
35.4515 118.938 35.5694 118.31 35.5694 117.41 cv
35.5694 107.795 li
35.5694 106.858 35.4472 106.216 35.2028 105.866 cv
34.9584 105.517 34.4998 105.342 33.8264 105.342 cv
33.8264 104.895 li
44.901 104.895 li
44.901 107.464 li
44.6132 107.464 li
44.4555 106.73 44.231 106.244 43.938 106.003 cv
43.6451 105.763 43.0097 105.642 42.0312 105.642 cv
37.6011 105.642 li
37.6011 112.222 li
41.9003 112.222 li
42.4853 112.222 42.8849 112.117 43.099 111.907 cv
43.3131 111.698 43.4683 111.301 43.5645 110.715 cv
cp
f
65.4589 117.045 mo
65.4589 107.792 li
65.4589 106.892 65.3385 106.266 65.0984 105.911 cv
64.8574 105.557 64.4318 105.368 63.8199 105.342 cv
63.8199 104.895 li
69.2458 104.895 li
69.2458 105.342 li
68.5906 105.342 68.1364 105.521 67.8833 105.879 cv
67.6293 106.238 67.5028 106.876 67.5028 107.795 cv
67.5028 117.384 li
67.5028 118.284 67.6276 118.916 67.8763 119.279 cv
68.126 119.642 68.5819 119.824 69.2458 119.824 cv
69.2458 120.269 li
65.4589 120.269 li
65.4589 118.119 li
64.0166 119.806 62.3082 120.649 60.3338 120.649 cv
58.7086 120.649 57.431 120.164 56.5009 119.194 cv
55.57 118.224 55.1046 116.945 55.1046 115.354 cv
55.1046 107.792 li
55.1046 106.875 54.985 106.237 54.744 105.879 cv
54.5039 105.52 54.0428 105.342 53.3615 105.342 cv
53.3615 104.895 li
58.9183 104.895 li
58.9183 105.342 li
58.2284 105.342 57.7612 105.516 57.5159 105.865 cv
57.2715 106.215 57.1493 106.848 57.1493 107.766 cv
57.1493 115.551 li
57.1493 116.809 57.4942 117.799 58.185 118.519 cv
58.875 119.24 59.8362 119.601 61.0679 119.601 cv
62.8942 119.601 64.3573 118.749 65.4589 117.045 cv
cp
f
83.0517 105.342 mo
83.0517 104.895 li
87.6906 104.895 li
87.6906 105.342 li
86.9478 105.342 86.4329 105.516 86.1443 105.865 cv
85.8565 106.215 85.7118 106.848 85.7118 107.766 cv
85.7118 120.269 li
85.2411 120.269 li
74.3493 106.901 li
74.3493 117.698 li
74.3493 118.459 74.5036 119.004 74.8139 119.331 cv
75.1242 119.66 75.6417 119.824 76.3672 119.824 cv
76.3672 120.269 li
71.7014 120.269 li
71.7014 119.824 li
72.4442 119.824 72.9469 119.629 73.2087 119.24 cv
73.4704 118.851 73.6022 118.166 73.6022 117.187 cv
73.6022 108.188 li
73.6022 107.217 73.4254 106.52 73.0709 106.096 cv
72.7172 105.672 72.1339 105.42 71.3217 105.342 cv
71.3217 104.895 li
75.2673 104.895 li
84.9256 116.862 li
84.9256 107.871 li
84.9256 106.927 84.7921 106.27 84.526 105.898 cv
84.2591 105.527 83.7676 105.342 83.0517 105.342 cv
cp
f
95.4109 104.895 mo
95.4109 105.342 li
94.7556 105.342 94.3005 105.521 94.0474 105.879 cv
93.7943 106.238 93.6678 106.876 93.6678 107.795 cv
93.6678 117.384 li
93.6678 118.301 93.7943 118.938 94.0474 119.292 cv
94.3005 119.647 94.7556 119.824 95.4109 119.824 cv
95.4109 120.269 li
89.88 120.269 li
89.88 119.824 li
90.5526 119.824 91.0112 119.648 91.2556 119.299 cv
91.5 118.949 91.6231 118.31 91.6231 117.384 cv
91.6231 107.795 li
91.6231 106.85 91.5026 106.205 91.2625 105.86 cv
91.0216 105.514 90.5613 105.342 89.88 105.342 cv
89.88 104.895 li
95.4109 104.895 li
cp
f
112.359 104.895 mo
112.359 105.368 li
111.231 105.368 110.299 106.364 109.565 108.355 cv
105.028 120.479 li
104.592 120.479 li
99.8314 108.002 li
99.3858 106.848 99.001 106.121 98.6777 105.819 cv
98.3535 105.518 97.8907 105.359 97.2874 105.342 cv
97.2874 104.895 li
102.87 104.895 li
102.87 105.342 li
101.973 105.342 101.525 105.687 101.525 106.377 cv
101.525 106.604 101.581 106.861 101.695 107.15 cv
105.458 117.072 li
109.029 107.491 li
109.178 107.08 109.252 106.727 109.252 106.429 cv
109.252 105.704 108.794 105.342 107.877 105.342 cv
107.877 104.895 li
112.359 104.895 li
cp
f
123.622 110.715 mo
124.081 110.715 li
124.081 114.45 li
123.622 114.45 li
123.456 113.794 123.256 113.384 123.02 113.218 cv
122.783 113.052 122.268 112.969 121.473 112.969 cv
117.659 112.969 li
117.659 118.473 li
117.659 118.858 117.744 119.129 117.915 119.286 cv
118.085 119.443 118.376 119.522 118.787 119.522 cv
121.473 119.522 li
122.434 119.522 123.098 119.47 123.465 119.365 cv
123.832 119.26 124.142 119.065 124.395 118.782 cv
124.649 118.497 124.92 118.037 125.208 117.399 cv
125.667 117.399 li
124.959 120.269 li
113.884 120.269 li
113.884 119.824 li
114.575 119.824 115.038 119.647 115.274 119.292 cv
115.509 118.938 115.627 118.31 115.627 117.41 cv
115.627 107.795 li
115.627 106.858 115.505 106.216 115.261 105.866 cv
115.016 105.517 114.558 105.342 113.884 105.342 cv
113.884 104.895 li
124.959 104.895 li
124.959 107.464 li
124.671 107.464 li
124.513 106.73 124.289 106.244 123.996 106.003 cv
123.703 105.763 123.068 105.642 122.089 105.642 cv
117.659 105.642 li
117.659 112.222 li
121.958 112.222 li
122.543 112.222 122.943 112.117 123.157 111.907 cv
123.371 111.698 123.526 111.301 123.622 110.715 cv
cp
f
133.056 105.485 mo
131.444 105.485 li
131.444 112.511 li
133.332 112.511 li
134.459 112.511 135.344 112.187 135.986 111.541 cv
136.627 110.894 136.949 110.038 136.949 108.972 cv
136.949 107.932 136.593 107.091 135.881 106.448 cv
135.168 105.806 134.227 105.485 133.056 105.485 cv
cp
132.69 113.152 mo
131.444 113.152 li
131.444 117.381 li
131.444 118.291 131.573 118.926 131.831 119.285 cv
132.088 119.644 132.545 119.824 133.2 119.824 cv
133.2 120.269 li
127.669 120.269 li
127.669 119.824 li
128.351 119.824 128.812 119.644 129.053 119.285 cv
129.293 118.927 129.412 118.293 129.412 117.384 cv
129.412 107.742 li
129.412 106.832 129.294 106.205 129.059 105.86 cv
128.823 105.514 128.36 105.342 127.669 105.342 cv
127.669 104.895 li
133.973 104.895 li
135.529 104.895 136.772 105.274 137.702 106.029 cv
138.633 106.785 139.098 107.749 139.098 108.92 cv
139.098 110.807 138.041 112.064 135.926 112.694 cv
136.391 112.991 136.844 113.399 137.287 113.919 cv
137.729 114.438 138.309 115.302 139.026 116.51 cv
139.831 117.85 140.459 118.728 140.912 119.145 cv
141.364 119.563 141.835 119.788 142.322 119.824 cv
142.322 120.269 li
139.176 120.269 li
138.53 119.491 137.748 118.348 136.831 116.843 cv
135.852 115.258 135.085 114.247 134.531 113.809 cv
133.976 113.371 133.362 113.152 132.69 113.152 cv
cp
f
151.421 104.672 mo
151.854 104.672 li
151.854 108.277 li
151.395 108.277 li
151.29 107.281 150.93 106.503 150.313 105.944 cv
149.698 105.385 148.922 105.105 147.987 105.105 cv
147.158 105.105 146.488 105.315 145.982 105.734 cv
145.475 106.154 145.222 106.713 145.222 107.412 cv
145.222 108.059 145.432 108.648 145.851 109.181 cv
146.271 109.714 147.179 110.4 148.577 111.239 cv
150.203 112.209 151.295 113.057 151.854 113.781 cv
152.413 114.507 152.693 115.337 152.693 116.272 cv
152.693 117.477 152.265 118.509 151.41 119.365 cv
150.555 120.221 149.526 120.649 148.322 120.649 cv
147.624 120.649 146.734 120.457 145.652 120.072 cv
145.207 119.915 144.924 119.837 144.802 119.837 cv
144.549 119.837 144.353 120.033 144.213 120.426 cv
143.754 120.426 li
143.754 116.272 li
144.213 116.272 li
144.222 117.417 144.595 118.334 145.331 119.024 cv
146.068 119.714 146.93 120.059 147.914 120.059 cv
148.848 120.059 149.596 119.811 150.158 119.311 cv
150.72 118.813 151.002 118.149 151.002 117.318 cv
151.002 116.697 150.77 116.103 150.308 115.534 cv
149.846 114.966 148.88 114.233 147.411 113.336 cv
146.212 112.596 145.412 112.012 145.011 111.583 cv
144.609 111.155 144.313 110.685 144.12 110.174 cv
143.929 109.662 143.833 109.101 143.833 108.489 cv
143.833 107.309 144.219 106.351 144.992 105.617 cv
145.766 104.883 146.773 104.516 148.014 104.516 cv
148.695 104.516 149.438 104.651 150.242 104.922 cv
150.617 105.044 150.879 105.105 151.028 105.105 cv
151.15 105.105 151.233 105.079 151.277 105.027 cv
151.321 104.974 151.368 104.856 151.421 104.672 cv
cp
f
160.791 104.895 mo
160.791 105.342 li
160.136 105.342 159.681 105.521 159.428 105.879 cv
159.174 106.238 159.048 106.876 159.048 107.795 cv
159.048 117.384 li
159.048 118.301 159.174 118.938 159.428 119.292 cv
159.681 119.647 160.136 119.824 160.791 119.824 cv
160.791 120.269 li
155.26 120.269 li
155.26 119.824 li
155.933 119.824 156.391 119.648 156.636 119.299 cv
156.88 118.949 157.003 118.31 157.003 117.384 cv
157.003 107.795 li
157.003 106.85 156.883 106.205 156.643 105.86 cv
156.402 105.514 155.941 105.342 155.26 105.342 cv
155.26 104.895 li
160.791 104.895 li
cp
f
173.005 105.642 mo
170.672 105.642 li
170.672 117.462 li
170.672 118.389 170.785 119.015 171.013 119.338 cv
171.24 119.661 171.681 119.824 172.336 119.824 cv
172.336 120.269 li
166.897 120.269 li
166.897 119.824 li
167.573 119.824 168.033 119.638 168.276 119.266 cv
168.519 118.894 168.64 118.267 168.64 117.384 cv
168.64 105.642 li
166.412 105.642 li
165.346 105.642 164.571 105.813 164.085 106.154 cv
163.601 106.494 163.328 107.058 163.266 107.845 cv
162.808 107.845 li
162.808 104.319 li
163.266 104.319 li
163.677 104.704 164.446 104.895 165.574 104.895 cv
173.634 104.895 li
174.795 104.895 175.608 104.704 176.071 104.319 cv
176.557 104.319 li
176.557 107.845 li
176.255 107.845 li
176.062 106.997 175.719 106.418 175.226 106.108 cv
174.732 105.798 173.992 105.642 173.005 105.642 cv
cp
f
189.511 107.085 mo
186.052 112.537 li
186.052 117.381 li
186.052 118.318 186.172 118.959 186.412 119.305 cv
186.653 119.65 187.095 119.824 187.742 119.824 cv
187.742 120.269 li
182.132 120.269 li
182.132 119.824 li
182.893 119.824 183.398 119.64 183.647 119.272 cv
183.895 118.905 184.02 118.275 184.02 117.381 cv
184.02 112.537 li
180.744 107.438 li
180.202 106.591 179.761 106.036 179.419 105.774 cv
179.079 105.512 178.607 105.368 178.004 105.342 cv
178.004 104.895 li
184.02 104.895 li
184.02 105.342 li
182.964 105.342 182.435 105.582 182.435 106.062 cv
182.435 106.28 182.54 106.551 182.75 106.874 cv
185.789 111.531 li
188.223 107.671 li
188.581 107.096 188.761 106.603 188.761 106.192 cv
188.761 105.625 188.421 105.342 187.742 105.342 cv
187.742 104.895 li
191.962 104.895 li
191.962 105.342 li
191.395 105.376 190.955 105.501 190.645 105.715 cv
190.335 105.929 189.958 106.385 189.511 107.085 cv
cp
f
19.4658 145.583 mo
20.3308 145.583 21.0927 145.044 21.7523 143.966 cv
22.4119 142.889 22.7422 141.605 22.7422 140.113 cv
22.7422 139.442 22.5671 138.877 22.2178 138.419 cv
21.8685 137.961 21.4316 137.732 20.9072 137.732 cv
20.0682 137.732 19.3167 138.268 18.6528 139.341 cv
17.9888 140.414 17.6569 141.674 17.6569 143.123 cv
17.6569 143.873 17.8207 144.471 18.1483 144.915 cv
18.476 145.36 18.9154 145.583 19.4658 145.583 cv
cp
21.6145 136.945 mo
22.3313 136.945 22.9606 137.247 23.5023 137.849 cv
24.0441 138.453 24.3145 139.16 24.3145 139.973 cv
24.3145 141.397 23.7771 142.819 22.7023 144.239 cv
21.6275 145.659 20.3525 146.369 18.8755 146.369 cv
18.0547 146.369 17.3838 146.076 16.8638 145.491 cv
16.3437 144.905 16.0837 144.159 16.0837 143.249 cv
16.0837 141.659 16.6584 140.211 17.8077 138.905 cv
18.9561 137.599 20.226 136.945 21.6145 136.945 cv
cp
f
30.9314 137.234 mo
30.8395 137.967 li
28.9742 137.967 li
27.4773 145.806 li
27.0838 147.92 26.6495 149.458 26.1728 150.419 cv
25.6961 151.38 25.027 152.124 24.1663 152.653 cv
23.3047 153.182 22.3799 153.446 21.3918 153.446 cv
20.0717 153.446 19.0316 153.206 18.2705 152.725 cv
18.677 150.851 li
19.1356 150.851 li
19.4233 152.223 20.2043 152.909 21.4776 152.909 cv
22.4362 152.909 23.2804 152.561 24.0077 151.867 cv
24.7366 151.172 25.3355 149.562 25.8071 147.037 cv
27.5094 137.967 li
25.6233 137.967 li
25.7022 137.234 li
27.5935 137.234 li
28.2574 133.984 li
28.6076 132.254 29.1788 131.061 29.971 130.406 cv
30.7632 129.75 31.7071 129.423 32.801 129.423 cv
33.3089 129.423 33.9174 129.541 34.6273 129.776 cv
34.7053 129.449 li
35.2427 129.449 li
34.7321 131.873 li
34.1947 131.873 li
34.0803 130.598 33.5169 129.96 32.5019 129.96 cv
31.207 129.96 30.3316 131.052 29.8774 133.238 cv
29.034 137.234 li
30.9314 137.234 li
cp
f
49.4411 136.513 mo
49.8996 136.513 li
49.8996 140.248 li
49.4411 140.248 li
49.2747 139.592 49.0745 139.183 48.8387 139.016 cv
48.6021 138.851 48.0864 138.767 47.2915 138.767 cv
43.4778 138.767 li
43.4778 144.271 li
43.4778 144.656 43.5627 144.927 43.7335 145.084 cv
43.9042 145.241 44.1946 145.32 44.6054 145.32 cv
47.2915 145.32 li
48.2528 145.32 48.9167 145.268 49.2842 145.163 cv
49.6509 145.058 49.9612 144.863 50.2143 144.58 cv
50.4674 144.296 50.7387 143.835 51.0273 143.197 cv
51.4858 143.197 li
50.7777 146.067 li
39.703 146.067 li
39.703 145.622 li
40.3938 145.622 40.8567 145.445 41.0924 145.09 cv
41.3282 144.736 41.4461 144.108 41.4461 143.208 cv
41.4461 133.593 li
41.4461 132.657 41.3239 132.014 41.0794 131.664 cv
40.835 131.315 40.3765 131.14 39.703 131.14 cv
39.703 130.693 li
50.7777 130.693 li
50.7777 133.263 li
50.4899 133.263 li
50.3322 132.528 50.1077 132.042 49.8147 131.801 cv
49.5217 131.561 48.8864 131.441 47.9078 131.441 cv
43.4778 131.441 li
43.4778 138.02 li
47.7769 138.02 li
48.362 138.02 48.7616 137.915 48.9757 137.706 cv
49.1898 137.496 49.3449 137.099 49.4411 136.513 cv
cp
f
60.326 131.284 mo
57.4032 131.284 li
57.4032 142.633 li
57.4032 143.726 57.535 144.472 57.7967 144.875 cv
58.0594 145.277 58.5829 145.478 59.3699 145.478 cv
60.9552 145.478 li
62.843 145.478 64.3278 144.868 65.4113 143.649 cv
66.4947 142.43 67.0365 140.768 67.0365 138.662 cv
67.0365 136.425 66.4445 134.636 65.2605 133.295 cv
64.0764 131.955 62.4322 131.284 60.326 131.284 cv
cp
53.6293 146.067 mo
53.6293 145.622 li
54.2881 145.622 54.7431 145.441 54.9954 145.077 cv
55.2467 144.714 55.3724 144.082 55.3724 143.182 cv
55.3724 133.593 li
55.3724 132.674 55.2467 132.036 54.9954 131.677 cv
54.7431 131.319 54.2881 131.14 53.6293 131.14 cv
53.6293 130.693 li
60.7394 130.693 li
63.3674 130.693 65.4693 131.441 67.0451 132.935 cv
68.6209 134.429 69.4088 136.329 69.4088 138.636 cv
69.4088 140.899 68.6625 142.703 67.1691 144.049 cv
65.6765 145.395 63.5989 146.067 60.9362 146.067 cv
53.6293 146.067 li
cp
f
76.9722 130.693 mo
76.9722 131.14 li
76.3169 131.14 75.8618 131.319 75.6087 131.677 cv
75.3557 132.036 75.2291 132.674 75.2291 133.593 cv
75.2291 143.182 li
75.2291 144.1 75.3557 144.736 75.6087 145.09 cv
75.8618 145.445 76.3169 145.622 76.9722 145.622 cv
76.9722 146.067 li
71.4413 146.067 li
71.4413 145.622 li
72.114 145.622 72.5725 145.447 72.8169 145.097 cv
73.0613 144.747 73.1844 144.108 73.1844 143.182 cv
73.1844 133.593 li
73.1844 132.648 73.0639 132.003 72.8238 131.658 cv
72.5829 131.312 72.1226 131.14 71.4413 131.14 cv
71.4413 130.693 li
76.9722 130.693 li
cp
f
90.6315 131.14 mo
90.6315 130.693 li
95.2704 130.693 li
95.2704 131.14 li
94.5276 131.14 94.0128 131.314 93.7241 131.663 cv
93.4364 132.014 93.2916 132.646 93.2916 133.564 cv
93.2916 146.067 li
92.821 146.067 li
81.9292 132.699 li
81.9292 143.496 li
81.9292 144.257 82.0835 144.802 82.3938 145.129 cv
82.7041 145.458 83.2215 145.622 83.947 145.622 cv
83.947 146.067 li
79.2812 146.067 li
79.2812 145.622 li
80.0241 145.622 80.5268 145.427 80.7885 145.038 cv
81.0503 144.649 81.1821 143.964 81.1821 142.985 cv
81.1821 133.986 li
81.1821 133.015 81.0052 132.318 80.6507 131.894 cv
80.2971 131.47 79.7138 131.219 78.9016 131.14 cv
78.9016 130.693 li
82.8471 130.693 li
92.5055 142.66 li
92.5055 133.669 li
92.5055 132.725 92.372 132.068 92.1059 131.696 cv
91.8389 131.325 91.3475 131.14 90.6315 131.14 cv
cp
f
102.202 138.387 mo
100.743 138.387 li
100.743 142.896 li
100.743 143.892 100.853 144.571 101.072 144.934 cv
101.291 145.296 101.711 145.478 102.333 145.478 cv
103.607 145.478 li
104.501 145.478 105.23 145.178 105.794 144.58 cv
106.359 143.981 106.642 143.179 106.642 142.175 cv
106.642 141.03 106.236 140.113 105.426 139.423 cv
104.616 138.733 103.541 138.387 102.202 138.387 cv
cp
100.743 131.284 mo
100.743 137.797 li
102.334 137.797 li
103.446 137.797 104.331 137.507 104.988 136.925 cv
105.645 136.345 105.973 135.56 105.973 134.573 cv
105.973 133.534 105.651 132.725 105.007 132.149 cv
104.364 131.572 103.454 131.284 102.281 131.284 cv
100.743 131.284 li
cp
104.054 146.067 mo
96.9693 146.067 li
96.9693 145.622 li
97.6246 145.622 98.0788 145.445 98.3319 145.09 cv
98.585 144.736 98.7124 144.1 98.7124 143.182 cv
98.7124 133.593 li
98.7124 132.657 98.5919 132.014 98.3518 131.664 cv
98.1117 131.315 97.6506 131.14 96.9693 131.14 cv
96.9693 130.693 li
102.769 130.693 li
104.43 130.693 105.738 131.037 106.692 131.721 cv
107.645 132.407 108.122 133.313 108.122 134.439 cv
108.122 136.089 107.091 137.25 105.029 137.922 cv
105.029 137.987 li
106.2 138.224 107.155 138.741 107.893 139.541 cv
108.631 140.342 109 141.262 109 142.303 cv
109 143.44 108.548 144.351 107.643 145.038 cv
106.737 145.724 105.541 146.067 104.054 146.067 cv
cp
f
122.691 142.843 mo
122.691 133.59 li
122.691 132.69 122.571 132.064 122.331 131.709 cv
122.09 131.356 121.664 131.166 121.052 131.14 cv
121.052 130.693 li
126.478 130.693 li
126.478 131.14 li
125.823 131.14 125.369 131.319 125.116 131.677 cv
124.862 132.036 124.735 132.674 124.735 133.593 cv
124.735 143.182 li
124.735 144.082 124.86 144.714 125.109 145.077 cv
125.358 145.441 125.814 145.622 126.478 145.622 cv
126.478 146.067 li
122.691 146.067 li
122.691 143.918 li
121.249 145.604 119.541 146.447 117.566 146.447 cv
115.941 146.447 114.663 145.962 113.733 144.992 cv
112.802 144.023 112.337 142.743 112.337 141.153 cv
112.337 133.59 li
112.337 132.673 112.217 132.035 111.976 131.677 cv
111.736 131.318 111.275 131.14 110.594 131.14 cv
110.594 130.693 li
116.151 130.693 li
116.151 131.14 li
115.461 131.14 114.994 131.314 114.748 131.663 cv
114.504 132.014 114.382 132.646 114.382 133.564 cv
114.382 141.349 li
114.382 142.607 114.727 143.597 115.418 144.317 cv
116.107 145.038 117.069 145.399 118.3 145.399 cv
120.127 145.399 121.59 144.547 122.691 142.843 cv
cp
f
134.14 131.284 mo
132.527 131.284 li
132.527 138.309 li
134.415 138.309 li
135.542 138.309 136.427 137.986 137.069 137.339 cv
137.711 136.692 138.032 135.836 138.032 134.77 cv
138.032 133.73 137.676 132.889 136.964 132.247 cv
136.252 131.604 135.311 131.284 134.14 131.284 cv
cp
133.773 138.95 mo
132.527 138.95 li
132.527 143.179 li
132.527 144.089 132.657 144.725 132.914 145.083 cv
133.171 145.442 133.628 145.622 134.284 145.622 cv
134.284 146.067 li
128.753 146.067 li
128.753 145.622 li
129.435 145.622 129.895 145.442 130.136 145.083 cv
130.376 144.725 130.496 144.091 130.496 143.182 cv
130.496 133.54 li
130.496 132.631 130.378 132.003 130.142 131.658 cv
129.906 131.312 129.444 131.14 128.753 131.14 cv
128.753 130.693 li
135.057 130.693 li
136.613 130.693 137.855 131.072 138.785 131.827 cv
139.716 132.583 140.182 133.547 140.182 134.718 cv
140.182 136.605 139.124 137.862 137.009 138.492 cv
137.474 138.789 137.927 139.197 138.37 139.717 cv
138.812 140.237 139.392 141.101 140.109 142.308 cv
140.914 143.648 141.543 144.526 141.995 144.943 cv
142.448 145.361 142.918 145.586 143.405 145.622 cv
143.405 146.067 li
140.26 146.067 li
139.613 145.289 138.831 144.146 137.914 142.641 cv
136.936 141.056 136.169 140.045 135.614 139.607 cv
135.059 139.17 134.446 138.95 133.773 138.95 cv
cp
f
158.683 139.41 mo
158.683 139.855 li
158.001 139.855 157.514 140.01 157.222 140.321 cv
156.929 140.632 156.782 141.168 156.782 141.93 cv
156.782 146.066 li
156.424 146.163 155.753 146.25 154.77 146.329 cv
153.787 146.408 153.026 146.447 152.484 146.447 cv
149.643 146.447 147.431 145.748 145.845 144.35 cv
144.259 142.952 143.467 141.108 143.467 138.819 cv
143.467 137.221 143.814 135.779 144.509 134.494 cv
145.203 133.211 146.173 132.192 147.418 131.441 cv
148.663 130.69 149.985 130.314 151.382 130.314 cv
152.221 130.314 153.134 130.462 154.122 130.759 cv
154.75 130.943 155.231 131.035 155.563 131.035 cv
156 131.035 156.289 130.864 156.428 130.524 cv
156.913 130.524 li
156.913 135.058 li
156.48 135.058 li
156.306 133.8 155.736 132.793 154.77 132.037 cv
153.805 131.282 152.675 130.903 151.382 130.903 cv
149.758 130.903 148.425 131.552 147.386 132.85 cv
146.345 134.147 145.825 135.823 145.825 137.876 cv
145.825 140.13 146.426 142 147.627 143.485 cv
148.829 144.971 150.339 145.714 152.156 145.714 cv
153.877 145.714 154.737 145.166 154.737 144.071 cv
154.737 142.403 li
154.737 141.458 154.613 140.796 154.364 140.419 cv
154.115 140.043 153.677 139.855 153.047 139.855 cv
152.457 139.855 li
152.457 139.41 li
158.683 139.41 li
cp
f
172.091 143.179 mo
172.091 138.714 li
163.716 138.714 li
163.716 143.179 li
163.716 144.089 163.845 144.725 164.103 145.083 cv
164.36 145.442 164.826 145.622 165.498 145.622 cv
165.498 146.067 li
159.941 146.067 li
159.941 145.622 li
160.614 145.622 161.073 145.441 161.318 145.077 cv
161.562 144.714 161.685 144.082 161.685 143.182 cv
161.685 133.593 li
161.685 132.648 161.56 132.003 161.311 131.658 cv
161.062 131.312 160.605 131.14 159.941 131.14 cv
159.941 130.693 li
165.498 130.693 li
165.498 131.14 li
164.826 131.14 164.36 131.325 164.103 131.696 cv
163.845 132.068 163.716 132.699 163.716 133.59 cv
163.716 137.967 li
172.091 137.967 li
172.091 133.59 li
172.091 132.646 171.97 132.002 171.73 131.657 cv
171.49 131.312 171.038 131.14 170.374 131.14 cv
170.374 130.693 li
175.879 130.693 li
175.879 131.14 li
175.223 131.14 174.768 131.319 174.515 131.677 cv
174.262 132.036 174.136 132.674 174.136 133.593 cv
174.136 143.182 li
174.136 144.1 174.262 144.736 174.515 145.09 cv
174.768 145.445 175.223 145.622 175.879 145.622 cv
175.879 146.067 li
170.374 146.067 li
170.374 145.622 li
171.055 145.622 171.512 145.445 171.743 145.09 cv
171.975 144.735 172.091 144.099 172.091 143.179 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Centred Logo_CMYK.eps)%%CreationDate: 02/12/2014 15:12%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]K"$6ej@TSXNk.]r_=!YQ7EG]?e2UcF&-H\Jl>&fS!cqce5sf/<)J29pJ2*7+-+Z=fF8cddhm'@=\bUR:M[V%Z=01nKHcPlg4e%]<J`")/d_1`0e/T!Te[9S`"NQdi+$RcM4/#;Ej$WD]4Yuk/9Nuk\Lt?QCZ3JZYo,_@?f6hZ^6Ru+q0+f((X$`j%88:BgS?LJ>]\IC\?%<Zb:a+(GVgGgtjeUKV8aWo>SOB=@1PU/-!Dib2rJlaKche/".7i8IN#)6l&<Y3,m@eeB:`?,(,RYI+DojuV%1+XoLKQs!n0:\k6MPhi40J*RhbTaE$<pCuERUP+jNhL_A$,=FC,Ql]b%=ejV"6I:Oq[;Ybf'0W^DG>"4/uh9WbH6NOIRE-'7qm^<%0l`Kc-TO5R9F?07:;CP+'Wok;8rZkWlq3Z=d!7/P2.LY$DZ*51%2?`<ksS5'n1;Q=!0-0Z8W$E'=Gi(E1s7="N1#iXeYM)<iB9c6%88Vp);XJ@qp-0ZSc#FGor)CC8o]f?OZ<?Jp(:\9KR?D'j,1Y;^N8?a*(\(2Ws(LGj;P>MI?_f;*0tH..1g38a<'J-W+,PKC[aDp*%9557(.m1s&#P49U?p]RX0Z,RGX;N0&Ap=_KOUT](<39BYpo-MKYRi(^$aaTn@-sJmCG3*XRQA7&o5;0@1"I!hntbgYit+kPrX%:C%A[$]/[js>d_8A%R*1PM*'g"$5O1AjK,<$2047H;i(/#=,C0c9c^?NDm0@7A`;FZ`IIQimfG--U/L/.6)jRZNf#G61oEj)n.XNI5j%<(/E2i@Cn_Q.n!XQ1/MP-iC4d?GO2d0"/_S!._iW3\dnj>4_q&aL.kKne#'b5ILOaDk3/n^uRt+V)6g%-.V+C$*7%N+5U.+Cl7U6%0%[o[eUG=N&]eG^6kuQd%08k!'.k=3L4QDXTR0WlIIcj*:e%L]*DX(jS_%gXQKri5ek\=:C,%>0ouEhg1U6faP$Da&3]_6A:BN)8%&Z(El*Xn]eg/J(HO'Jep+#sTHV+n2!Iop'()lJ/Cj&bIi,M)1gQaYOmXd,HgEVQ^2BDrZW)?4E8jEdrW0NPBVj@jB6CZW-,ps\J"%,Vh`Xdp/^R6I1A-4mNf2Mr!si;6AoiS.T&-[3fS:E1pA!8d:"17LPVaiPMYJOt[)Dc%6EZrX;uG/E`d*56ZSP@'ZfM%kV$ERplIF%5><ecW,N+Ch>@cUi'0pZ6bsl>irFQ(#t;TpTcT!X+/s2_e\)5W=g1P.?kG,%YQ2Ho9*fXLJVpFO/1sc#WVFP4b_!5n$Xahm=b+!r%Rt*?G!M5$&(&irfdVOm%fE?fA`KE'S%KhSkNan=5KYRt(V3'jQ>%'a*eO"g#;ud5r:4tDQJ:s$B<OaTq[0$tB5->ZA!Z2kQ(m!'D%>]1.m#G[M=FBn-i(21**V8KY`O9noSOloa&_JH?5C`p"]-bKXP$XdHOaTTpCL0"agR-0h*69:YeK=uFOGHj`M(g_cNlgPDq!\d5]%80hl+;i(SsE=Al`;i._^-Kqh1=B[9Z_d5!l1tk4"^aIZA-E3(MDScLWIo\'n`jJ,eR10-f*Iq0,7Z[b9.YTE*KH2ca+a(R\iAm/3%6CcYn%^1p27Scr$,"XhpN`\gt1mF]!#!cNUE>Yu^29BhFGl]>!l.&+T%6G&-KZKjpR*\m1TMI^%7Z'j=aDhMP`Ij"'S2rVQa_=[$%k_hh7QU=q"V%k<\>+ak$k>:@ro?\5M0FM>?7\_19aJjk"61?-P/'tX]%no;/5F^/aicV&5"S`8^;W&-9`@R5&GR.>m>UeanlH2Do%cDbS1c2r.2)Ij,+$C@M:7Unb.af:Ll?p=Y%3#0IbQNTekVFX(7kEV<rN:BJ*RlR';UdbD2JR0aDMNgIl-_")5NfW]:"h>mL6rmH%%M&8l9ZOBYj:'$FZiM`hJ<6/i!2$nDN'gRp`GmJkq=`";1TGM(E3\18"l\e8`Ar21%!bd>RK$0[?o6:C)/=rMu\<);k=fmbiYuXmq%!'N#.1!CQ<U6&%s:n_*^elb).bW<+>3Fhm6EK,eD92a5(8Qm(8TF)YCaZp:gNaYle9FQBs8hlB[YYn$2Q$!=S'?[6R/LIW$9X8Y(%Dm'TMg*]l0`kW5Gi_!XL'm.-B-6F&@5=;UlE.RLMFc"*e9#[+Xfjr`T*K=rr;M_tBYAtP=OYkSI3+=t'IfqkB-qgS+!!m2Dlu$fC%^m%Kj<@LBL6kif?ESeQIPQ7=YQ.=kVUXB1C$8erlFb6;#C3or^!_k#,'afXK;0X[D'&[F*!0bdfJi;-D1+IFo@$<VOA1T,R!)]cu%5jO"oW,MoD_cC.ZN=@c[/46h,'&nLH1WcW`T`V.6&/Zpm<e]),;Ceo4V2s=TS4SebW[*5%;4O;KOg'pI4=HN99+hR82QfnTV3i3>%Re#H\Stp=Z\69/3Xq`8tjTU@N.Oe1i1oIf![-eTI8o7A'P/:b^66VO`l2]h`YaDYL.7:.)[%b/.d3#&)(VjVr<$_Vj5h/aTn4\`s%_;ZnUJ?=B4[Def[&128rOC24V\53U&?!FiJ-)bqiA3?p29jm<)6rHXT6<jW.lTu\E;X=i@jEO^0qJeu$$c*$DLW(WD=pG$78-QdZ%6BD4fPgC81O/o$JJBHCZRRbduBb/Fk>%=K`a/X:X3(%J0.:t:K-</G"&]8:SLpJ".-q3O^6;:6c;cPF1.8<L_N+tjK0ef\(DH[uE%;J.f41\q)N0qka\D$6:ck!>Cj)RaXW;s/[2N@RDKKV3>u(H2O0B3D?O,,l$;:F+Hoc>Wtkc3"WneC):%+tK(WY)!'0E0/R9#0"R3%AXHFS&JT:X:&]^k.B%@uEXSrU!(gQa,??#)kl=!:C4[JM";QGAiMJr.&Q$,PKI&'>>=J[Z9\>Z)lRJP?g58NK(la9_<n4PcH!7NT%H%r3h!AOA-_#\q[:ijR:BrHgo+@2OZ28]uf9`ZBP6KQF[5q,J_L2EoW'2U*]Jd)s(0t[os.L%N6C,tm;10Q)")K_YfW%8C4"/V"X%KWqJqTU=]G=_,@]<U6psXYUaG*_IS'(re;"ciJ(lNU8H*[?/i?%uY%)/Q>`>C)e/moZiVaeeokhXcO3@XY?ma5*jdl-k"T>XDLu%%-PWT^$KJ_K#Nl.%O_'Y>(tYkW\-@HeHoV":;5c`a7m*W5#s,4kG:W&@;cJ9WBVd<d#)JpTrCF5#WHC4%>P)omNiR;J>/PlO.tWCB%IO<#pF;EL$*S+:a+j4RlN)a.a1b:\]MMSc[\$.876E>8Qkd.dV)6fAaXG#U/+EC>Lg(ft(A=m(3#H07"E#Gc&?B-juRqO>!N%tGc%Z-7>fU"Su;O!:_/!/k1l%e0nh,H,?#ntuZ;&\-&Pj4rA>J]F5D>@4i_pSI)`AmNus&D+FSVATgt6\A79Pef3+*-hSXM.`>g@LU5U%:-6WK4rT2=1Q@.IpgF/BQpk"!6DoFtGK#d(mOHZcl\&:Q5#:MD"X$/]U5.oRCEFNE%Wjf;O?dq'GsKE3GXc8;!Y^HJ`W.WKOd:Y$%;Ms'.U+ltt#e*T]_3)\0?kPl1C-!P8$!rU*Jt7Q"!6B[p?k.9f)C!3okoIkq<+$QQ`Yq8:6gGL;nqNFLXKL0KG9E"$]>,rZ5LMoV%Kq*g'<M^&B+"q:-^n#&"Wok@'8")hHNog\#BZCdJAFs73BFJ'E'++$XdO60[lA@'B7[:cCaBM[Z31j0ti[>p09SW\"8$ll1V-('J%GVCml?`6dg$V_b`'c#`\,/t`8<X^_gE'tP5;*9Fi=N&iG5]o(VdFGJR@"lrW!0,qs1rQoTQg-N9TP>>],/sW;`2GA`qRriSUa;+Z%+K3r@Wl^&V(<8p"$(/4L$TZ-NC8"6#:d-"n"LXIp'd`L&c5kh07L_m5F,*[^+_Yn`G]a"N+p)ai9!o$,.Z`CC$p^J-@B:!)A)h<C%#n<3ZeBU%l>H48nm6C\@#&+fe6B,9Gi.YccRl"t[G>;RK6B]_s>a!Y,id"j!+cZVER^jUf[.$X,lrOp-<cpc<Q*G>ROQ:,pj\75j%5rY/6<Xmu;EQ+o"=dDsP/?enr:e2rJ1CUimr$oYsU\00m8_))Eop?r/?fR+-qf#+a0EoY8n9l-[Mf`p<0P+Y:1>6EXhpDc?W/3L;%)3%1b$#3EB<YV``?a,nTFQ864?k@gm._1bM-4C`e53(qD&to6R\dV$lKM`a.,gLZMC-81m>Yn,c>'*KFG7XaX$g["?*NL-'aC,]<%Zdk-L$%q.EXE@QDi(6C@#>iLASmk$kgrgk%\dhPB7c6%*8%]gUJ:mp)$:HJccN%JHL-S_V#n9;b3->?<Lj(utWPnq3QtNe9V<.e*%F;@<!3XQRtRI9"')_j:QglrCi'W9qZd4/RdM9W)@"-*sM'I_dD!@O;a!GH(/%t72="/'Ke5U"!@UOd$&K6C2d-TXMg7f@Qp*fHt^%'El[Be(o7@h`9`i/M8FSs$kIQS/M`&5u]FV_BU,RBL!di;8nLB@^hTelC]g3X4Y*6bY)[1d]<UNm$EK1;?NODoM1jL03Yjp$9;.F%Q3hPJ_AV1e'i5TIDm/^`Ehh13Hs_QgG%Au>,jRErF'<:#Esg#H<jtu771N"a]2j.[.YUHSf*[Y1cpXh,EYORqf%b0$,0ah%<B1=s%:,i&pMUQ,rS^8,cQ(TsJRkRPtV#dtJ:`^'_/jhsM@53.N%DUjH=)mht2>g5r`9S.sWd$0Zf;r(t_YlC6)/=s:Ebt;TM[@KT1jsb7%<B#0piZh+$&g`.?3\hY6rFMkgc2KkGXW:;pTZuuC!R$SBTl"=*d?LAPP8)^Q?kmok>d:;j$&<Y[hMG]oj+)7,@KRs=@4;KE\ppA*%pdkIPk,ic?`a8BUWXHfPI,Z\ei!"KNd5kGePuPuSMDXU-8]orsJcSm1'2Gcj5UU:!10W/l2_`_Hrio;9bUGTloX_e(B'Pi)@*F7;%[.Xen+^gJ0)u))m9du\A=1e93*Pd>/oj<7`=)X+[:?7:cI^QDYl\G0&_LIPk'0\in=RB:kf9JCQ=+SQLU9-o\[8sK<--XP+G]gdS%285b+h*:,Ub=ZH!VPjcVK$.c.%)nZ'0N\3!epC$F=/koag@_V.GSsM9Z"VZh`Yk]3[7^1Y(aZT`LLW`4c[WmCr&<2Or#s)?cR7Wo%j(#a!PPM"f<AFO6UYE]m>2"?`Wi>s[<5%rS51?;eeg`$$_?D;dB8'a3j!#h^]lpAVQ^VKBPR:#]_C=(4q.OpS(Ru23P1YofD<\_=%6m-,;>H8:TO<I&rfk[+D]AbK#S1i,]4rc;a+A$Qg9:]C[>]4E.59-Su>j0bMAKQ&2i75ZO;:Z3PUflE580A^:BFdM$V4U<c84BjE%nK+sU/:?sZT_%2S'-ju^[b-l"`3Wo0(i)U@21=PB=i6rE+-'&]m^:6dY&_7K*3B3CI3R;$;u7S_No-1;rl+rB*Tl,NC0%?hf-fG3%38udbp;Rc,M75E]hB)DEH[F;O#_md+7':[HRD28Y`.(L*O*K2MgqAQV2f\R=mbYn<S%*h&f\PT%Tt;*@Vm#(I7@EW(n--X=]Nm_j%K@81$WEsfa/+W.YHgcmFW:"aX=m9!^4[_\STpZjJOp8lhmpFP9+,j*shX`J@7c5eEP"i/2p,\b5fM!eTIMH(UR"[$N@^.]>%X*P2%;cQ"K<<ZfoEG'O,>4"l:oJ^CZ;iKZO@e`!iNmT;l1;<GPpT*;n&?=,BFn/A'>5R@IE+3om;RojFgDRQTl&&4+<S--t'D@`D@[[+s%,r_Y$YV[8I30qKqJ3(Ae<@gdsZ5@,'=rL*<r=HK3[;t!m=^)slji9g87cP1ObbJ\94O[70>fPNHN\Wn>q&_=Ds8,2'j@l^6]16Ut%lndX`;F+:t8#gS!L$YN%\X>-Jn6k&G'ETbPM9c#ucR?j]ag_TY@`@j!'5fKu"KFMs50t6ANX._tLlb95\'GUlj@dZ$AMYP&-QjVA%CYdTse0X#'rCVr'Y`9TFV>2hbnK/gjlJa`B-G"7HdZ9=?%3?kq.ORZFV=oh#./ARUTV0O%*TuGN%:F3eBM_@k4!#96^YP$G3&*a0%*qTlFgr;G:q/7R9A7W6BDG/FXLj(_kj2i]17\!iB(+Zd6q#kK`5C@?!2>#baGP!o1iCP\C6n78R<5of<YNB:8bO*k2H:RPP(NN4s%@dOP[[;R;6aO>1L>aYKg7(nF2$fYTBQa=.%o%(gNdt=JqN&.LJA+J/prQCbArOt;h`5^H]bh3LL%E;\V&^St:b;J8m_-cRN"nF+2%gnHL57:?n8;W?n`k#H4UV0YG-9B@;1B7If0?\905Rh:8sg#);:On:ZNA`Bq%kn0PQ(I>4*`r>VT2_lP4=4t*Q&EK4+2:j6\la5qd%=_^LPm]kF@6HZ5M!\!&faY2TnKsgrtID=3r?V.NB^QG!T>4jW4YHaF>_<r3]B:28Ka]F[O)3i-gXGN"A,4EToPeZ/$,luY1g][[t%\7+_-!&5i#5]1Hsd.s>LX^2NYri,l'djs"!Mgp+j"3VC&`HIn7<pG`a\?@EH)hdc0+B#C#-'@tI4*]WDA%=pDj;JKI2aaY"Q5en4%KI_PbeP==U-1lj/q,W5Jqr?.nLs6/,1VNZ!4FTU*D65uAe$ap8?Xb92Q!1Zj.fb$EK9$h#`/Cq\QU,+F.F@sN=CkEKP0X_dqm5I8%4N]cZVC%qrP).@d6i=<l@DD(jFOB110[,nE5NQg)(ks#oY87)(*/5>tE::8cYV:Se(jEgiD,/!1hZET'Nl-t)dH!:2j>bBE36^GC%N/f0g-h0'S_Z\=e@t,K\)qbe[ju<c0-=>"XRN.*&R$DYO%R^7Ha'f$?MK+u.hrZm,3@8*-k"UlR3-drbH5n73gPi`Epbp0$a>*L*%!ao")5@<S1:OlF_PeTCr%_q#*JH:eR9kN@fc,/AMF5mX%_VZ<J-[#F]05XDM5A0Ki2p]>",t'Z/f25E++dU6P7;+fUIMpm!ICM>b%4ZO14jt5!UIp&KX,<q<('8\W0BO`[BEc!4lQtYALTLifl-h;'tci.'m2DNQ*nn]Mr-M$Nhb;8aec?$3qphqM1Llie$:@Zrg_jdk>%$/6a)A[WaOI_n#C38;BNE1H\3Sq?E"J7Ei$(*@F-rEBdUS^m_'l=Y80cZ?<Qc>P'*g/:<39Cr0eGJ2Lp'rbAPf#XW:D5eh<h/%Vb%!DG(/*5CrgQVFB3/qG1blRQ6AoA+:Y+]N6@.oUibqn+FXB_!H0\MM3FB?E_?<1%!)W%]6IT2Z[,Xi'Vs^[(A4r7=k55/gAB^E@,n%CoEEf*^:tKqQ4(2/-U;jIEYLP#JoM/4feVA%`i0"k0'Q*#Ef7#0%\6dUEt-"nNH:8E;A+N#oO2m0-h*bj+VD8gGc!d5ZL&*)C7kk%kI?Tk&U(5f+dZPST-:qiQ^/0)AjkiY5X]G?\uuRB9<ML5T(3;'7$"tF*(8V1,o-8nDabY&%fJFm*!=IMQT7;f8H>8s-bD"Ua`d6q%D^Pe%4`dp"4P<K$Ca]5d]Y<im,*VETa`as'IZs0[a`]Fr\VW5/)/;<rkrIE`SnoQG[ZDk@aBpOKogQ?O",7j)JSsb][/'4Ap.).7%jklm/eS?hA?2,HmUPh3j;7&8$h[QGTX]k+7Ul=(38#])*=af[$hNf9b=hStn%,YHNeCnT;A`C5c.Wq_<(NgH(SU]S2hFZ(2&p0TG%h'PFs?o(5h=A9uXiu<954F[/b,&`@nZi8C=Uuj^?QdRqY\CukRri7BtV=&Y6WiXB\Z2$^[JOrE#n'2bG*#t7/n40.%S>jKJMi8o9%@cIE&NF(6"8NnqcC%X\BhNP'MGPDGX\'I)IP>rTe,?;X1Td<M6?=p)]PsLYC"33"i)h*Ca%#SWa^D<cF!O+C!IY,u-j2ZY%+PS.E%ogM2D)F'0N@`l3:gI^14'"=:ID'j7l8_dnj\!b0O`\VM-7VS*sN>faOiL<Eo7NP>QFqV8%->rDmlKk_A9`N!rW.O;SIDI>]GJ6<%%S#$)qi7Cak'q]q'EcQq)q"*q#+@ftdn'E1IABaMh+MS=qEehX^.aXj/(ros.Ia#\V+)]GLcbu:0<nTlbNi/ZoF58jeIqmb\kN)WA%0;1H4o$bTaIg/n1?U]*4m[Y8Vp>_lj"4-/kcD_ogpnZ3Mrgd!ff#:=:=0WtLrjO!F+hj+SEkB+h=9=\Fr3>jeM'(<Mr#n;,n`LS:%(-*R&HGPQ]Iq-bLj3I.7[G$bSLaCbQ-'0PPC@$G-1&X$NJAGmk4*gtg1+V8Z4n4AEp6Ao>R\_4(9Cc*R5<EF[Q<NsBO*,O)3;p![%!ZYECCO\<5;*%I2&\/MH))bG*9ZZVTcS0/7ae6X<IFU/=$#0l]U5Z@lp=6gE0,i>2I[?]33?jZ[`YWTD^DcuFJf=Zh%m;PO1'q\h%Jf<YfeG.'hZ`Y/'&D;8Lbc5Nbg_K-&EfL"([aLO^NjYHBqQ+1cpqE/ZfTG`Al+JH%bN,P,Xjr1O=T3XpPs-+M@$-Qo3Mg54-!.G)%3!I%n'd1!@gglB,BOH&B_s]l>FDK^<:B9,hQpS3=[<d?PZaBO#>%)I)dH%U.n[RqAM@mV3e!8%7')<2;q8W.eOW.NT[bN!l'tEhT%a7[L__TAoS559Q_X\G!PS&f6aEbX"#"HLR,0)@(aULLE4lICIC^JZ%kEqd_C8Uh-+j*m+MDijn$8Z:0">4<!INs3>`CRcIka(N%\%O-/HW3BK,_)\e$4o'CEj_Y;oakaLnFDmW)%IIg_Oij1gU/Kg&hj<Q#M!?pui]/Oa(^7;eO6on!]^59bZO7'sFRlGd/L[UjYpkW4.%n*'7hhfEMMG<1+GO,k-kM8qRFpa.'>`8d>3HkVS0gNn8;Ds6]p_!,WZHr9aPpj>@]R<X/?j7Q^$Eoj,LP3`#6kjf=4%U\sjLi<!9%7%a\X1!e[DgitPsma'r4:G5*_2dQo,@;,C#HjfI%\\DWj`E9MXet)@7pfaXLQJ^928s.mAbI-c1[/_r?:A7PT4N=MSrqOsf6(U.[%GKpPKbZA;O4BdPJLmPhg7!+f3HH&*%)GCp*\]rL;=#jm,PBctK%#;%])IUADV$^cgJ9bO:oAL)GpM5:ir4;_[HB^[bQnYm+qtOPZ%Z0/#IR$s/,pc3Y@2pgFLj7@)DD:`++.[Ho=CXh'Oip[G/9@,VCa'<Tf7-?4<X)UuP4Rr)3;B>`B'L"I`pimt)'$D-^J$ha!^m:a%%s20u9Wp0!.I.^&h<jmb5d#ko)r>DL;?jp-k*3$OL4'I!b'=!,5L&Qh!E+1pXQF[$!E`3kV9;CIa\t,4;s01`H^m!1[HYHqBNLda>%0pb?oL4Ulo^7`134a."Bjn\*@1seXi:."(F9FJ+'J+M?92baFTqXLOo`/+1n%:_k\*G\'aV:aO8#Vffgr6;.:)%l]Y&/![)mV>/s%nFj\";P6;Xh.*WN^ZFG5HEDN@f)27''AY[?P'Y>p-b6#oF59EJaI)9gnte4kSY)iB#P-?`?%3&Y2&"O9%92NBM*k'FBcKWIkcYAR%0/+2lDZF-X+ahnBLq`iLZet7Xp@%mq>VY^Wc]_"f-C69C@!W_8J0M^6i[Y:X3_ZOQ3W5hAOJ7\`,@?=3oe.FR`a.<e6IUtpRAmCV%kgeegZ,V<$7:Q/s(R9@uUZl,VDYp/0HpifsOE&%q,Pl70q=p%:e-G#UqTi]_I_"c!^?6ZR_&(o%Dl3^r9?1=!T`#'O<Q1$/iqY+n%WI2&t9E)*d=#@;i=a"//Q&)ac^D\bR;.KK-b3b[ueBZ\"it*CPQ[/"V-1X(q$3<jJ9YBbDEPDhrZ*^n6]W8Pgc18giOs]((Q,OAE%.f=4dZe`_aqo!VHs"!([rE2WaYd8s;s,1a!fr5Us+u):IrHlOO##&GBpJApR(?ei(Wg2fe'>&Q'%oHsDT:AR)lXMUrj$JpF(@1%_%Arm%@;WiV&Iu:&qC$I_1XQ[tqTqXLrGs7@[B)i!?PnR/Te'^mkC&SZ)BjhjKnu;,V;3L7=KaXjmL)H;,08?EE$NAlZ%eW0.ELN@]%nAbS-ne6n0LUlnoq#6B_=&@/":m>BuCn.B?1`N4M*#idK(^?8pHHD:U&iGR=G"uU<;%jK%'`Lra!WFD*0T\5g-<*[c!d#?W@N<S^%>/?>-i%PKf7T$OlMKoJ2&V@nG/HbAndQ=MH!&$YQ5XAqu,Gi;5^t-9@DQ'+fFunn"f'YMXmkPT&#+<rJLt9Z=!q$KqT8@")ku>4K%CL"qd4i/4b#$-#h=Pd"DI!B'SHuf`CrJ3e.*EAlU5U>pULTXK+C9H0LZDh'K6;tqLOe>F((K*t,!][e'Op\CiA[r9cpM'=0AA-K1%k*jAdg?mE?MTh,Da&TZ^WcS8NUXO)?/rQ`c"6/rS7$j(E]1*Mt1-qB9?&U36BFl&I<5+mQHgpV@^S;NI86+`6'Mc,aS_*A9fG%\g%G5/FM!<MNb/Za?DM"Q)]7Bt_"RRJ@JC7(m8X_o\;$?CJnXU@N[D$%#H@IX;k@"fH*M^!Bg+AuXJj>Y2SJZ5g+,mFDKr`NM8`t\/r%*Z!g+9I(EZ(X_J_*Ei"N66?+j&P)jCA`+)&d1"[Ds-UV`d140.i:(@k`D9RQQVF83.knunYkB.Wl"V&ad+Y_SZ_F>GU0`WY+.%*N%fS7CBUDmBE)@O\((j?"oRaDGD*]E-;:&G5e#$#WDT"mn%f`tF8Q_]%8`SO"d=j^TL>faR8[:WO?OB5-o2!S)K$9!pIC7Q9!('Li`%6D5oqhZ?&6Mk+&)g`2HD]KLm3e5+h6_\K6N%]IS,$`P\0@&T`Z8i;k8@BAI2h+;?(d>AuCCq+F4]O1f@R<L=hYj]H0B4AJ7*ba7Z%)+SM2^Og;lDH;(k/d\6n:_3X//1`INkkakU,NXAGc-qPj(GtEo+BkCslFK5GJm)iB.U$M_"*UB*#MSFRe?"T7mo9e?^lT*J!tV0?%.jC\;gj`54LW4j/W"7]fj\c+D8MQ?$*\9sse38dRLS(?H?uZ&$hrJW9RYn),D9K&c`Wie3RL?'g;D0BJ>/2nNd/^R#Q$F,rYZ?[i%Y!7KE(e;-c/iuuY`l'k_qj8YT+q_o$8:+1sY@4B[.G*>:+A8]j`)FRo\7BjW65&Tmob-#E:n5s+.Ur8aPsh#W3,NEhX5*]H$;-`Q%Q<;&lW#1o1C*iLW)32b*)ZGoR?%50<YK>jP-l%+%m\<?)(M\q1>o1\-NmWe5=*)7+GZ#:[c;HS1"rjmVr>MQ7Y<@7[eg591nK?+L%+^2:c([fOSm3A'fRnh%2)EKC<E*9]j2d`=H[*"R=RV!E3Kk"e&8A[$"3lrZ"nA8>nUj.3K$St@$S5CX3#+AbS1$far-Wq4S>fetC%15Lc88r1M*!t$Uc:/I0a"Q_2:P<m)ELd,h]#b*2B=1itB`\e!Y4]:Fp,6IK:/-/:GCd=uXhN<[\<\F+b;R;i-]-7T-BRf&Ua/U`f%@>$.aE#3A^[_t'rh@@<-CR&k:p-1EH6(@-?B9Zr3>m]i+OB\G-6F__s5%ra8eP-&^F.e3s=0tiT3\o3J_Bm-X209e>8*.4W>^hl`%>o90gCFN9N-u#@n(nE]I<gR,E;,Lr&%N8g>9ug*[lEoWTXd3(mWKEj,7^>Xe(/k;rBUIaXY:GA]`"!&-SSW;#A!4!j".,^W#/:JE%^9f2c8QZckDP\[%O0`j#R^<s4Dd?kW^/ah,k\:AkX].<DWnf1&#=GI518';!D+R\X=`moUI?sjM:*^HO3(['6[%>CT"]-1F\EMJ>%p1_/4;JTGtaOWDS](kGj<J?RuKp4K)LCND[Fftg!$"`aAW=,OJajIA(;F$pNL'Bfe18[?B8G/^)TaUo3kR;;f_T;7K7N3#35fNdm%'=XcS$Zs.Y%:9iG`e`7>'rfd"A5q=TCm*=]9p5r&Z2%&Z'[3Xr@_K+Ve</J"Ui93-Y8bbeC0e)DX4Op$8C!$8dU?G2'VoWM'g<8"%00Sho$D5ElSQh*0_Z#C7h/otULVF7,"Ro]?`sd7ZZp+bqEj")@r[#!7lRoeW^C8u8jW0uL14:Dgb?nV@3_d0L[P_bG9HA5.jS-YC%*edX96jn'4]Lk&_q.Kib?uZ0b.I?J`T=OZOVLM-/GjQ#ofH\5ILA#4M(;B7=IPR[bH_%=ppfjj!Q)*'d04O!=<V!!apX\;,7mubc%19uJM8=/@DkDOq1-Kmr0jZ@EqVttb![IGWN6)S$>Is"mfa4V<Mkq8\LWim&ORk8jr>0YBY_R)SK"J4TMnG6Fki9,W<d8DKD100ib%ieC3"mXe>*I\u64qIA+6k&ZY!W)uA?6Fs<DLIg3J2DS,V!R>S7ou#o&#r[:Q6MY,jVjp%IUKsBcfD_G<5'mPEW@M#b(`IQ;_N<fF%d:.eTbK3`:*r2JGeN,b*eWeeHQ50RbInB#CMRdoC)jKZr<k'\*"7a-F>C$<Ve"VVpK4O*[D&bKnrfYE0\K*;ZFV3MGL70AJQAPtg%aFba2o.c-/8%m3D2S-gGL!Fkr[EA(E;Endo6-;akHLAPNNh@-tF)QUg?>t:ickX0=QnB;T.,Sng'^biFjm05-^(QpCc7;^5f2iQX%"VhW2DKI!hMK6lP:m)1l.#g[/)&Ajk?m1M$#g3OfKFeYP:IsG(:/bOel&_ugEh.(m9Y0,_8H0F#ZJ;Mi86`dr515U;T<GXa5#(O8%EaPJr"<D:kPrNmc*4kgH,O*kZ_Yp`=WV%1g$`PB&Hg91M4f[i_+jK<S!686S@8lCCfYKugp1()nWp_Ru>np:V8dgrjZoIGq>J718%)f'\)R6ji&T%1U1.>$-P&Mmad\JQ&;T?2LSmH8ih\q]Yg1l"ibX(jH/>p8[Y0Nu#tB==Q%c@SL,(Spo!fS,oWjK_lX'^V3=hC`qZ%R\f_,em-]%\VN@Me>r/^]\hZr&2(=DU,u\khJ#V6lbRX<ELbT-JP3Sk]W+Q<J_\DKP%@p(4)6.Qf<*Yn;Re7UVkV-c#sR<*Lg=M7%aA(9#:cnI=9P6U>;G`Bk'<i["Q!/fu]9*9%CL/PbWTHiZG8t;R0kg"cH\'1IZ,&o1_aAD,CP-eaMRY);VPK)P4=MOi%u=rk%[o1A%/2=Q5_9>rk]qTL!h.nlUE!2(=4&P,tcL?e,8*!Y&[).4f2mGb5R;de9X.$i8%p#BdH*hR8<l5Shf$YU^&RmZ1b9UY!$_i+\nQ/QG%eo*V$nKtCPS)%7MXOfk*iJ_V55uT7(%%m8^UoV@&dP%TVcc:l]U";W^D't8QEJ.+F"'7og)qf+7#+P6OCA$j4,JsS2e^*7-UpU*!%Npl.bIZ:mQ3-VDfj\ee,AT!FN(Y]G*]kU]Qf1kt>F/:ckV;78ESG?R_K'Y?VDm`UPo`(D)2,$'9?FN!HIJ$FVKn4n!3"9dNCoD6r%U16FnEbW9kQ,A?^1<sW"V;,4iQrOA=7&cjs$*.-bqiNeK+4cVm(n<)GMn0t'?0`3K>+r]7#!#9nePWn34%e(XO6WUhP#%btYFcGI%0t]%Q(M`5HAf7CP_PqrZ>2]gAUf)_g;T_nVPu+t+.@ng?PX3BD47T22EP/1u)iemIf#3TORTN;"k>'6'DT"@R>OK4O0r(^[\aek-%WnM8(@<dqfaqcU>Kin+R.KLDQ0N>n"$\doqZ\QNh08C2`I9k"G>2=g8Th[tXoE?\f<BtAC@`k"o,)O+Qou1NA2HGh^Mu+u<>+sDb%(O&Kj?F/us7DbI2PotO8)9.0.Qk<_GRMMjK;,tn[UiGI]qgb?BgoC!o.Wde+4K_MHh<,4s+AF=hfYs[2$L2k;OIPHUXC;H^%SEj;%(uj3$F/o&aG&m/DC:<LeFie3qBF-:OY,[enVS#tE<!!qGX_72im8[L^:pQ6C]K2$?M:hL&"LRLSF!.&s)L.+,h-?k(:$G)':7Sjo%.b0V/;\=*h\7&](!N@uhYj+mT+G[X&V;>rgATMh<V4&QBGXleh1u;[NZ2N79X4:>,E2*_SG;Y+#W*9KWf4Mkm<A#GYei!qgg0KnI%n>g=B7fVhJ](f668Si`*5?+h'3p,d-'q'"uYe0gZDL4r7!thq9N/>.j>`l&-;D;t*q.L>p$LGhd8noJeU$*mlhmj60URdnKW+44&%Ng!U`=(97@W/Ie10>`%=m_,?0h-/W5R%l^5Ek1GRO@l'E]rW5rF;A^c26ecJA,!,"lA&mH`LdW:k>c`R*66o6c]<B^#V2pOV1O67%::Si<gGNq^IJBOADoZt;&A4k1Rs/.4?af$u#@jKsL;5&'&e+r]c0nU/W_TPED297gWE1qpInhn]?E^/B#'p<O8=eI-duTZ"+iWqj%I'86S._X!%&<D1Ghdk9]-PnmqR3YU0We*pEKM-g3ff!MALTANJ1'*g_o:mCYm]TT*J:*>*)tW>]:F*S'RktPEoWG3p(Vbi^DFnl-%>?*K0ie"K:\!#!-.%r+*jYXH%9SH(>I#(P,Y#]JK.dgT;C22@H4T`]$(GTOXQr&r8Lf'skZd/Yr)j!s)F%AuM<aIDJ>d$fQ#sIen%#)X,!)p\Y1LO!kP=A.fANq7/ihWm^8\VpWBN_uF5f$G-*d:C^gf]d.Ks7`ku@=l"o$[#MI:TC$YmAcreO+JG:\*R$BJV;jf=@)d-%/2f$D`g,.VQ."k%76t>6\.MIoYW&l]UdTBXG,;S:n&m@dH,!^ipTUVF\&1Qa8f**jNV"ckIkJ0F%@"5?D%\Qu5)<6(KDh^:,t#SF%qC[[!Lg@"Tg1uqA@]eK1iaXfVW-MG/FDHadlOTpS%hJ$rXSf]0*1f<pBtMYaSG-fRSiS\d*5/AI>L,*[#AEbh,Q]f-/is^.XJ1dC%B^WeF'11+rS$OMiggm7,;ZZQ)-%ZLghKs^)"&q'?s7f?jI3kE*opTJL4,QH9+(]LChj,4sM8/0G>>`kl_;e9/9OmBU$"4aI%lTX[%P:b`J--(%)0#'_/a_<1,lgdS*21i5/qrecsTpEcb!gg8>G)sR+;VO9L6[X]?,9i6p9:BD&]k`35&"I.^bhTT\0Dih`99j$>g>a/n%F-0GqNZ#jYmrE,Yn(Cdl3E%Cm.s9U-"Au3>$\kReXW>YOOq8YSBQh^d34lZIAh7V3)'\`elsY5u:k_9aPicfQfj1'^H6pLLEjL+D%<h[8^<+c:n[iLr'FD43fG&T.cZ<mXLeuCU2>nrMI*Ic/XFnp;Z8tGGLAf6OV)l^K72,%GZV=.:r?U:uO@7%lf="16I%:PV[PT&Ec%s*g6%iK![@&PR"qc%[2&4=kYPZ#[/V!8!FZ@puSJ&4lS1"nkISKj/\5"<pE(<!LFBCB`K$]#^^[l"D@OS`rk<@+9tD1'1==_DSu]%-ALjG+-bCfL]Ir!ES'H??d\B:Rop^g0Yf*M2*l&1UC``l7ea;c\CZ*qQW(hYNOX#@f(*g/[$`fm'-e)^b*#<']lbbF8"g=13-[!M%K/iF^5$R=;QA*q(D.aqQ71Vr#I6IAk!gLUP<Ll+!QsakV;+A?<$Mq0-7sN:Q(t,",DnE&9:c/bUq-#8A_e5c$5\Nu.7Z*%HEXIG1%`0QR2?B`T69-D^-Y2((AaN+m(H`^lrX_&>fi6Xhc`D4\A^7jh@VJDXdR4;b@pQP-KKGYSTjL.kIm[#l82s8f3S!=)!mPLBhC%!rd%f3XnE#Pk?aL&"D:N-/b.bInl[ZaOqc]62>7Y8odM+7HR`j[;;Q*%)sfa3@F[-i5^sZ9lh(X?X[iFuEB)SXn%LZPn_fX<10E[7U\[%oZQ+edEVqD'f*2AX`?<8Rt'\glDS_2r?\cFaBIS@\"!?lR-*h2/#e8Ne4K$D]!':]r(Jc9j^t^F5O7pmTh)Ua*L%OpbpJ*Yip-I@%+]Zb)Y1u)rf3<UWfm(\)m]:P?NTKM!UmGH@X].Y"9W\.&R$;F[nN)f8n'l:,Wp/,Qju%-K>KH>E/mG36hKLldkH>U[0]Z!kl/bKk%hr`e%qj%,ZF>Wf72H>RY1mKfNLm;9p,5b\J0'CCIo7bC=pUn5&MQh0Fl'%ASb<)-fbBueE/T"c6be1*FbMjK;XgXb#*ka$de'tCb%B\-jGXOWmP.d;7iHTp.iId!Vg$?PZLr/3Z&#Hqql_QR<0m\H<5q8W!fnbR!pnZZ.h,Z[!,2UsGKe&uZFZjs@24m6,Ofb3mSigQ\n%CUMBd#kL\2D_=FZUi\b>eke'14c8T:p,?TdF"9Si"7rgJcd-DR1@iob``;,LN@E+7@^'(]#U$Ln0?p.=\`^0lo-U3\<r-ZqO/bkE%WcCMTO#+i0<H2M$5IGmj7_S<T_\7cVX+VZrBmQDh^FsNe2q6_CY&f@joup%rLB<FFAbKQshGDC">IbIq]D]%7_R\OY=KhWbH,;A:%%iF5qVW2DE:apgc&)bhP!55U^JLX52/rNN%Zd5#gTG"^orf7"]:)1*"Qa>5m_tTZLcHiB`dcL;E?M8Xp<I?BB;eNGuj&D.L@J3WV%a4hJF;n:*-r7LH%,Z7[FAXP`q)8MF.=F3i5YZj+l/`\CKScDer>i(oP^K+qP5n6>(ch-d.R_(T$n$LiQQe^<boerD8AA$LU@If^b%QIE//A1+2gEAQE.3[k`#5_UEJbF?2!I'ueJWIssar7Ii\$Ci]^,k%fN]@3b=6+>HA9&!%.kcRYX9m[54'g[kna(d%bSU)*(P[Ben%/S8>bMn<5Ng/uKimIgl5SSbOq"&[.5'B<abomB$be[?(gO[kpf(sD@I9Sa&E.he@&]Jg=!VbcR;I&;4OV!,]o-(h.nDR&\QR"O4:%S_q(<@.W3Lc+EUSEG!ZXL/8"B+e<4hh]`\TFhWDP$qjUPY3#Z1g?Y$_\!?B!CUtbsbNmr?N?[]c*P%W<F_X%%QI5RcAoVF4cbO:$%>+9:--XSF!j`S5KH#Ru#Fo(Y/Ef>^UOe\c/mW54e.f;9IY1>KInd9p4r#VI[*m62u=2fSBT1bd5KH_AY<:3%"7k;%mT.p($IdI@%%]I2d_DsqaN#FIgBU*>ufmcTWr4DrHB0']PbF1lX7&&d?fQah9GMPUf$$dDMd,f6tXcTB+aghGp7]gu@,`mS,#R[S`3k^\S=rcrMK%'r(db[j_>N`CmYClKk;7D\c&WC:saBFB?bi'[)t2`UdkQm$l\iX\GD+?W2ZDSS"a"40KdVVGNOep@*#SRbu3*(\(R[bKEd^WEq^D%M59GB<".%%]tp=tjE>BsgUSf9-I2=F0Bgj5AW!%JRa!RFZVMHb2fl?YIbTH#:2a$.Bl0>G=ibFFAQtja[>e&tQ_?Xm818(h6i8<=%3+C1\f1k%(mi[8*dL)r&7Pp`n8$a#Uo3El%Wbd2Z7b(@%<pqMt.\.DqP[719<Y.@hi4&=olaR9?bo%Q8*Wt=%E)OhT&=NsCBMaLG%79$^UJJl./&9\\[+Zjh(s&:G%+;V&s`,4)Q=,b/-5t[t/)Os.5k0*V3:4`PEVr#UO#o@+B[QLIRGTptQ&;o*e6>;(.A\c<!?ohH4%Z&,_@rktK%Sp-/KKHf!Xgi?S=Sl;?l)?6RDV0$JMWN7hpKgDpo:uroB.q>R2f;sR^/$UuI9JP^DjOc;.7[6c?Lhbu":dc\iV@?7j%->QWngXab_N4/M^X]'@K%)+O"(sB!u)64NS7[-G(YfaO@_D>JB.#V'@-'.;H_30u81^;;!Jk6HYO6EO[hJs6Z(c@jAK.TGQ+UZ1H%oFC@-0DHg+G`$uLaKK*Bi3-Ti&E#cU<UU6nB'Q,eEX6:=@EYN%;T5]SAq#N4ha3I]aR1k2,eh'`Cm3_$A0_-0/M?Fl;eK%P\Z;2_%9pJ.[:$.,N.^47kk'F7pO^k&O0;*o`9s,?cJAZDpk3'SQ>J,1QV@r3=8,3kr2LBuQ!%UCZfKfd3P4AX=a@011>kW.6SMU#'I[3kJ%c,+%ld+rX$QB,&_XC(;h*?ikZS;N4n_td1kfY9)RVbT&41M"D%elBUS)"9eQ'kYG7A8EOBbEj$E`5BD[p7T+k_[/RX^A#.03kRW]%4'<TWA`R^;F"4Rte*i)gKA(d1l+TO/gNW/\*0><:q$m[4,'!E,*G2A8S\f./llOC5gj;Mq[om>>hV/ogFbN-oZSQ-n:kY:s@GdkU%o@]bfc^EK_IW`?XLqJ7d]0l`q[XKJ7(DRes/o'$/WYo$>58p2&-*+hqP@q]bl1';+lq;G?>Nt(9h>./,g?F"IFnmr%>2.b9;s2:q%-]9YK#0T2r2]Q7fA*,d2gV`*-:>$L!4?-6i]Xg's"*&B3k-gLsDD8lZ?6)-9_u@,Ks/(>SDpi%u&?7;EIlqWUg"kCN(#8=!6SZ4.%YoW3,eDc,*8Q"&@:@%VoH+&%0]F/a@T4Jcg3J@R?Vi#SHTEq]uNO^u,^.RIY*g^L0\Rt:8'+l-SFnRapAlnGbM=T%[qYY.7E4KhU%W"+:F2Ng*c.9tu@M\YW3Z.S.u.e2(?SP_n4V3^'bgLC`;h&FR2k4N.tD0]pkq,pp)O"m$<fO=XDGSs3PZ`:jJCFIX%P^[+#Vi2.4%+FmXr2!PcQ+t&3#G=JqA4?eP78):L\.@li/[hUu3hS'W[[18(NSb9nTBlG/$Vl[*u;ha&M:RIKn2R@Hb-/^f!1U+F:@jJGBWqZ\;%Z0g.<%o9KM%RLnVGnL-GZ'0NPdA<E,bP@MS8B/U6e*GQ@g!<Xf;S7\nf'666@>BQalpZ']C_'p,,!nFG=5?mcXk,+=ghR*`aM"Z8%U?Kk:'Z6j2Z6`6qpi<QP+GbAO?mXtPcg'ilD#B;rhR\,?lA%pgjdX%,RCG2(o_aU2$1kIA+7ukDMb8)(mH!H"Y+ggOFM=/?6\DW<%U9/XMQ<h1,hpLXJ0<Mr\:HoCR46kaIZ^[rt^#"\m2:&';Vd#h5/;D1OQTjfAG<kGO:2Y?6YF7;6Z0ot:ib)o\P<3R3n$ViR?Kl$6%m3Z`UV+>FAG8ElF#hIWI/%>EtL2GApC/&FDr:FkEk3m1N/%&-5YW9PG*-!d5N6*+VO/J!*'3Fk%+t1%ig"\C6I*>WLfkMpu>EOtn%WVB6R5$'qK0A=Vr2)=t?GlrUI9IDm%-Wd;,d10VQ+kf0UNJ3pH<9U1(/lj(GC/;r$bkUiDb_sTU;:O"U.]f#4,qr.:0([ETYH.@l%RB?2f9_-BVcMMcf1-VAAlD9Z?ek:tY]38(T@#DcA/'bk!o*_k.B_t2aNqO=mKW\\0OADV8H@r67H?m-_\(4;mGLft"h2e".&'YL3%9I.sG-.bc!b$(W>HLJ%X(X5jph0_C2nSbC9<i"4;j@k_G<o.URCT$?<4CKQCe$k5(rkrFEjrTm:H^qYqm_&:tNL<P=[X$Z]=j'<'%I[e+*c(&=I[WUnt=7o3qUK5+Tm[#TPdbH_/m@3mKR41rRe9QN%@/ELIHcUD2,?UMT(bE$]If44D<R&8%4E?:d<\+@8:i4;SKrmNA%X=D>*dG8^lc:4DQlJBUI<ps3mb?GieZ8adIa?S"p'`c#1LYUA)DAgJ;qrtZGc'?^M$_bYqnM5H`.Mh3E/;n(d?O(qR7]FmKEMNkK%mEZ$("gU(Nc_MVu7,6J1!BHHO.E;%JTe]g1/X7i`'#MVG_#6e_!6I(Z=p6>V&\1MldH4%u2p]8I.pd)-m;-UHY!H.?S(*r1#V#^1%h`XMO\'p[jRh+::&Z2RrB7[?"HU,9Wm@Sq+Od"%;a7%)?)]kYS-_MDkB>?sG'+>FfFE6Xl^Nb+V9c`*='iV$"LF8@'V'2q-pFK]_%$R"P,hd-`eWsE/0a(sJKWVZ%:,&ilEjIb,*E)=lHQ>.#jkXTtET;jiJEB)IV?=<KS<o2P%B([<oGdt#YQtjij+e$a)eV3p)l=*qd%d-Cjsr5DZb1S<Ano9!'9].__[IIa:b[Ks6c]KibZQ9F#qc@E:/1=4$5n*DsI6Zo#0cC:[.eC"[50'jm!,;?nnljmLAmA(%>]<nf@%31#J2i^qn:g5/pUhc(f$k83h2.H0sYA1!p34"fS=/ImHW[IgcBVXHKs(KE6sIPVB`]SDhG'P9*Lpp[`=&WJA'p4=d=m@n"Y"'!FJ%rB*"0QJr\.QaqfFkn+47g.j3!ZZ:h6!#RY@le5"j.*X;DMiJqDq1B#pR1E6elfjScF7S<i]^.M:cZA(2_=r;h$\7Asabkf.LY^&>%@hRA9>L-9ZH^'#5g#&4:V?l%R7!:?#F.A5\^2B<=m2!G\kEcrcGVFc[#e1L/FhHD;/d^ViFUO3o\27]1%RFneq=U"e_h%8\@qN.)%W`8QtLV&.`P4;^=J!`MDlD[+L<E6\#L7`od2l;d'9pX5Q?L(nW8jgAO?EVrj0sQ1VHBp&Q/t%0B&oVFW)mp0SX`OY7=Qf9?N['.f%"`V&]E<-b8XrP\G:Uaq7,R&J$S1D^.;4i0R\a.;+pg\e7h,p7).;3RXRB2J:P8fnRRVC[9#0b#0I@)44;LO9kgfo(0PC*<te&YX=%rbTp<jQCh@.F%P6i9>ciD=YegQ,Z-',\S`1:]L?<[ZfONS9M:E$O_6e%D&b0)l;h/".McjmbIf+f(20<XRUc"ouP7,<R'1i9EhQ1%Q.5WX1MFjMK/SYJK3jnu^YdkOnUl],(b"M*g<!9mQiHTo1sd.Np!*+jo2=;,dO+LFpfsL[KR168j`%PfXj4=dq!MR71]L^@X]g%M%4fuB4CiksUCJW+WZlcYkT,2[UaaugoM(*=k?5Dbj_pq_,\'mdd#/Hnd(N4IXM`9,<_h6#(XL.LSD+keTq1!@VU8ojW*tPFM>3U-h%Zo)SKJ9/--Q[eEe7e8_5;UN&na(%S9,`Lk&S:PG3M7t=1^QmX2]4CFT=":)MZS1jZRSA+mJkM;1\s?CXPWC*N4;X[shL`tahJ^'i%;eJ1o[Gt"X[Y>!3rgafWZK7&?Q<gMmQ4k3R:<MBmpN(Y*&m$L^`u";;2i4ME1cC>&+hLim@>^W3-&Oq\<qG!N$?&S/K>fPec/tLp%A'gje`Uqp]7T;6AC_0r=^_M17MK*T&ObP@4oBC@E0u"'9XKn.?0hG%2HZ;NOZ:_aPe:i;BKAUu^Ho&CYLrS]TNMG:O@iG8nSnT%X%=\LBn]alunf[frJ6+1k[>l_?NmHrao[sh^&WO%Wnjn6_mj+NmE^n^]C^4!`)%AqH0M!2bN1`heq*G*M4\nF6Dn<[dQ<T)BMQ$e6k%!5J@-@O6@T<MdnV.$\!nJ+[,B@?lq8*$s0PYk?/C`q"1p0?n<5IU'md,KKSe.dGJS'HJgop0t/%eD]4md[5H)"CODpmS,nl:\WM9%^oeZYkFYhYenhk[E/H[/VREUGIUlbkoCHYI4)#S<%\Uf0VW@Ks.QZC*RXM9ncBrgV%0<\V+C6'-pflP;F0L.ToCKSVr*Da7MnhWi%SrI:lQ=o4>T'P4c>e.4>6)P!kR;K@=0g1:=rYaC))jX%h@q'*L.G@E01Poc63\0,sY=?KqS<EH_i"RU+6>Cp]rUDY6B^Q]$m,Q86%"9*bC^9ag?"*nle!WK-:!5]LM1maih4_bkTO^_71_A1B=e6_oZo_+<e9h!O3YK_qa/%f,r@B=h>ri.fGWD23p"2?B?Q/AptCp]&L%H[I<L7"\:^Qj.X3ZF#N6V\,Br^F_UTNBoK@Khq5)e4qu]YEH;)Xqel^dW)JIXgRFlb'GF5+sCWt!W-7>*+,tVV7*eMB&=&#I2BgZ%:$KMI<F4eEHSmrjff3!5SF],4pp)Y+qZT+E&K:u5#ImI*epONB]!8P\SXc!,\DMZAUIW6r3J6Yr0TGhfX=oDR&BYAj-t?$L(;_FO%bpAC*(72Mi58)oOQWC*9jl7bfTe;7PA%7Ni2-0`rY5a5@XL$[#DAq<-h7((cMbOeNiH@loat.I;n?5cKm,$l(FEJW51_?d-)cMYB%GJ_kPCCNK+W5b^#HY\>7Q/eA#<0TFUW7B/I"l)6lai/>(_fUoIE7m0PVE_NAFHT@M#&2lOK1'snbkOft4\O]k[G+oTV:8-'jC%.I%k\MR>2QgP8q2W)0[3+h8ls9V!R,:SSQKb5FU.MJY8s^qsaA<+S(E$uV7spTt0su3tYKXafR0UU2>bL!&d-Mp0.@,D:')#peg'5ol%HCW;:o39[H>F!iU-b7E:cg3g2T=]6G13]5<k]tZl\(<]Cm>$#YOBU`Q$4631;@RG_2fch(S1cEY6b8,/Eb\F]rKpaAM6TRmhX]7c%e=8f_gaOUX'Uip14orVDT3hsq\!BcJJ&L62>*NNp:]0%:>Glg(p!W,rd4');N,CSOmQ34+[qF!WSo;nmX_$o2S2sq^068'bS]8K.%?^fg5Nh(1ODJuI9[<1cfl#aYVcR(7[:RjJBo#9prd4*:t\QaM0E`P`-gcGC"mEXKm3d8.Sh3m.R`GV2,Km@t=.Iq5_BCk`'=_63s%oa:+$Q=MFWS^lKg,BIgU3aM*Ee(?gmH(8#l:,t<Kl!$bU)gU%1j7UmcY$7f5qe7['jj[um!c@O?^,aNG\6F<XS^\nMf'+5'hquT%%SSh+SFQO6XD;6R`1sOjbHU$`8ikkEfUJn)6)s\;XR.<$hn%H>d;l<1'E4>R@rc$oAOhfHAL(N<=ZKFuR;L,fri7dGNnYrmR3t4XT%E91s`CA3,<c?WGdY,TLsl;[jG9se`-G34"@2=fTn(Q;*V&_q7$rN1%4i0o";b?I$@gS0`%"Vu6le;*;FgO"NFDf\[E;Fc_HKKDWN%daB`81jPU<._0]u7%Mn)$dP:acJKY^@WL5S.J/5(/KD)'-X:Yh8%[P"kL/TX7htb+M_:Ro\qQp8qa;jlM!Gf+XgrUYPYP7dh)aAi%Y+FdbCn3mG9".=-r7/[6agP]Wf?pWZf1rMJ$gTTdS^saOPtdA<cFBJ490]>s9+-cN5*i(,>s!I=X3Vm?3^p_1h*,XR:JWFb\^T$h%l.-K'GK3I.YVurmSPJ'+/ZiKAm""EAe5X&N5C5bg0)%*F.C6?CS_PV\VebaERFJ"$=)+XO_@l99ebcl2pZFr>NB7;\^T_>onD`-l%RbZ/]:079P[C@,8XW:b6V`Pn\VR_m+"^J$KgYH2EM8BNUqlDI\o@R>1Y_n3W.[RckUJ>=tJhSr;0.eGeU!nB"G7%Nt&;?USd;,T-%D>Gr$lZB^_:fP@8]7"sHAF>]H2Q)p9[u<AEqCoTl+$u*^2qa0:kk8E,:>g:W\#a;oZ\Il5'I2sGh7p8WrM]7o:Q'e]/_=94KBSkA%]7-Ss)jM0*CSBE7@?,O)m^;LbI00E3UA4*F[IU*Zrq1N9rh@`Qds#[fk5P%\p\*)7CZ.ksN3@XDUC+38[!V,uKm`1^[G>+s1o7X-%lQDCp/ed^-pBNdT;-,E=T)7.*fs=hBYPc:i5r"/`H`pTHYBTO6AbWBhD[WJ_f7&T?/T<Z:Xe/pk,hK5mgpa_^^8_mB\Z;[mhKgtY%]la:C(-'V<lcBnmHVfYbI:$3&rOOo=P+Q$p:<bA'inE#IFs"]#ArjFX[-o<Qm$hI_Cr?+WAb3^!R(:S7coKWLg1i3WZp6eq2c\f]%?DQ-/IN31ihSJ&\1&FFQd]3W)fbs%IOPO4q'U-qD\K:[WHa^97S^6A8*qC&`HNO7(o7e#:3P[GO[E[,D9]L4),l74g7J=-eRJG+6%W+()s5KAHAedOVNYR_XSZm%`tengDL*[dHKi!&$1O;^F.X1I9>.7j(gg9jlGkI>WVc\*L`ds3d][<-`li7]WI[Op(D;rm+D<jK,;%jQX<jSaP(RSSh+QRQKU<ZY&d"`>MUPQ+=FCUJpY5OSuA,b??rd^EW!YmbB8#pupT!FC'o/lnN:bf_TgV'`:8$rdVG"HMd'_.Gutp%43P7qMQMAp:;JaeRmM5_oYTfkZ2-!S4up8rmhFFhetk3]^96\779+DCBlhfgq^sbZ$q1/YqQ[Dnnuel_95JD^ncAuW32K?!jD#`7%`sBk)$+i,6Aq$6'7q?&q!O&Vj*0-)rs!U)edA;fiY(K\_B?sH.Ku$JKeG/$D>4.n/@t<IB-uP-a4kg)QFFSQ?J'LKec/2aR3`(cC%[0+m&cK8;6Q,8PAp&m^C3f$9M`fI7Q6D^VabSZ3tV?GFXTKDU7,thJR%lq?".V0jga,Eca-)\g(?uVa7`S(&MSUcY2m6O+rb!jf%%/'"sETI`IQG<CX;6a'bC/*P$eC@eJ\(Nj8d-DGE3j:8k[Y5SuNZA)Ft_[lAI_N:<o5<L\TFN+jin=.2gBrCboZYu6t`1PXnT>gmr%A@r,85;bde1kV%b;n<<&/GI,6P"7WPf7(Mk(;!9'*]pu/F:UflY,q:5!U&,!DPEM`o$?^NE"5mm`3bdl!3p@7-hjjQA/.6f6hG')%YN$^D2JuUM('<b'[La"pr`O&41!9?,QUBX%^8\Mg1s`j\OR:(=3pdp]"#*e?jd=(pqTrAa4*%/1O)mQ<3phT(+'8<3[_6j5m"(VB%6]6#QLQ$ddV<.):9BS#_XEG-;eCf%Jm(%mfe:s&fne37$gc=sef@eNVcKEQ8$WXt60Cl"\<McU3K+l6o(.1_FYm[V(:+rQhB(L7I%6X:#`3!2h2#mW(4?Nh1%\-')-SN+<pCur:A?0/\<?-$)YPaJ%$hlYIAelM8N<<hHR&^.IV=#(3VH.ma7,Kb\.U>LB7,MsjNom+C2%G:9G;\_9!J'"dA;@)_A?`YHVG=*])?Ye^a*Gta'(.9`TZf?Xf1L`XN1Fqd,:]s:9aV17Wu%0G?fFL;r;>3miooi=`ho8>-:i1G<j%C'f3+Yb+%[Vd6p)mO-SK=m`6d@ZH)(VVQ@UN]nAU+X)K`<EGbukQ8OiH/SMi2X#O*IT,nu+Yr!R=a-q]@U2Dm[MZ.]K*Qb,_ZO-9%*`ja$0PZgdUIRg/As=!>LSL6:QIU\tddO][lqs$n1$@qhKLi1S-@Jg4PT3F&Xd^<rDGLi`fZmatZ=ijKLZ-DDp1uua)=PU,Y-IUn%2_keactMQXUN*`_]W"7iiq"IiX)R$TbHh^,'+Mn>i$%F'G:3q'nR5\W5b)X`(lHSH*,$HA:0%&`I!e;$]"@:$U@rQiRUE*;gJV>A%b7;RO</B9:ff$)0IE"+ta3I>EF=et#N+5rlW:P)fe[]jHXYg<f&J/o,m(BsqGUJ!nI7ULB5kk!Z"T[0^5&/bB!4^Z8O55N#dGW&_%?PSWeGo;M'5k7u`NGMt00"1[AhUEJU5P&S;N$22lJ%l:$cZ&Er@I88uYbL8_$r/@6?nm<?M+,ABcAM]?gp/TA9cnIn/C)NJXe*:k%jqD%;&X(.bQ,Nua-*X^k$a["2#t9G*'aOGoXE,MW0-oj/q&9Q>$[seZ\-2sl$WjnC31L1^=3I2o%368>Ei0Fo<gRhLKS4R#B#-Mu%krdui#C(<V+RTo#p^j=6[W"_J"7_E'+<(N`it8P9&d=RlK@Q2mm5LkGLPTDOA(nBo(K6dY^0I9"i>;M_eN3?TPO__+QAFPogA*is%gt'R[mRM,2G^a?I@NA"NcCHgJ$me6(@-+fA%h64M;f!S0lmg=U!/)Qa&Pe^j.I/nG+9DPa_M9<<K^lN_&,R'3gIe%\Z";<pQ1b'p%\PhS3FWk5.6UH$C^_L:8>G<);c<L")C-)Q5X[BrY"S#LqCpQ419YMqa\4L+u271O?5j>hrZ0rB1TnFW.E!SJN$&Wo77tEJg:'HC#%YP7[ZOT:hG"dY#$P:BG2pH?CQBUa4^AoFELQoF3\!`]LBQadh57ZBmnTJcFA>4PUFp,tT@;AP]rUi_t?ZN9>?dB;PZM$@N$&ku_C%!A"Pq)tmQ"Di*Vd>Fk"?<&(mN"&MM$:rH]LO[q>(E&KS\V0$c=N'oIH+6IDC&e..kQY9-0bSO#^M5FKL2E8TI1^$72BR8I^]_-;_%m,L([!nI\Lnt;8-6Tm?qCo+M_XR]k@\_j'p\K][V,s67VHeTIYNRgi:^kDPT7afNb"NnGalE\1n04keMQ;l(AVer!W3VW%$me@>K%o9F&rMuo"sUt#u%6jP0u&I>9o%#..1;YuKoq;@BLLY']p[f[!RaBH$D+1#b#L\H77#\AS#C1iS<ag'B)4h_>\Odhr'a%*9ArD-@F%aL.^$>oJrU%/k3f4UV'-B$EUX#1m;iNgG/iWl4t`&GEdTMP^bEcb^:0Z.eqi]$P;\a39:i"PV4,(L$S.IOmr/[,DJYE?nUkBNRmQ%D%CJs5)2R7$f%C?h4A1*d6'0?0b&kZMcaM_duq=3C%-9o6GVCWm$3)Eh0I`p<<-EFmSWU!@f+0bi&6GrE\=!=6oM5t9$K*QKU<qF%&\8Hk1(X8I0IRHqe_el`X//_7VNu0SV9Wbk]u[$l$q.*rTC)!6n!'%t*^RSjk#,Y\Y)DCbKVrYffO2<MNoSij&!'0n+XqPiilTnJ%U0_)"+elMP,s$F3J[q-bkWAn-&VIKm#j:R^gQ5ZA"?m@Vb?bP9Wbd55i[EdP=]huk'%Qko,(#Zk.YK!-X53DFY5Pa'4A66UG6XW*%p4e->ke&_8PTAW>F6L7mk\u"4#]f.A1[(pnJqN75H"YKX,,<8Ro?O#pb8)'OLX%u6%]&2WEp1.lkk_Uh#Krh4cChM6+rDMZc9$[(%\s')l2F%bCmsaBf3HV\3ao2'>3s36^g2-Ss]k4n%4Tk".\n`7J<K$Y_8fL[J4.g3+,2NtbQW"#kB60Wk*/8Tlo_R%Y`OF+G[Cp_J%ZmZn+SI46:bj9Flfb6lDAQD7WJ$]JN6^EC,BNk0*L07<$kHGZur,Y??1?V3u;drAP^;s:SU>(F`FL]Z.1I=cWT?*9F^B@,sF#0:+%QYYJm>CaD*:Qc#&om=j77&r[u/a8tmgZT@9hH\,LC^d8u&u609TGECf3Xk#6m,kYE+!OC%o8=G!7!__9gX)XogQe)&bth(OpC.@G%2oKDVBAF*R&GS*5,?RU="`#h:`4V^<:*^nO2Q,.M6:0i.iZXG]R"g!P9M<UAQ]XZM3&@WD+I:'a!0Y-cFVB`j7IPAer0D/[`gd%1%DX8"jS1PR/&'VlVEh-Ln4?i)]"TsW_SB!#PjM.@a]0MIHAj,Bl3s-QI\I]3a`cXhleCj!1236'%_=Y=-_.WaD"Of0iSX;Vl]A>P&%MJX42R.i0</te`[-R3$U[ibek(Xa`WUR5]69MgUlCkW"iQqa:Y6dcbFm;BVt1VK+@RIna&0Z2;+YI[r8P\fNA+bSHR5knp6f`4"u%MflKLmh.@-34kmS%j1&+^3Q?YmYVM@m-T'[HeN@h<sWrp^5(t@lFR)\5=OKbe#mCn4pa,lL=A@M[rp-ha:l%O1sR(q'&<D1hk(lV%/tBs7O"F#M?bO#;8\FBj=8ML`&tp?1Yh/\l+'Xl!3EB0BdQQ("cd"4FZ;:=Z:O8O2lLYsUqX&>33HolmbT;,t7dTJMZH!#dr&t/%%>PDK0l-s"1+,3N[k#a#E/A*c@Am?_sBMcMh1A[(`O^<0,JKcij6aGUK1'F/(+u1cWOu4H$c3eKjeqhO9TSSPUj0W=AfCZ:UMoL=i%ZPXfJa#jV!i>c"eJfm3hG)`(8&2hA/C`Ej(O[3\pNe)snpF.*k(m2(7UnT]Q@3[Ne43nh-EP(8VO"g)haZ6&NgL6ENn+<,8aZ0Wn%[Bm#!%s@b)icCQC`)m4JDJ&[6`'_t:%&Pg^DI-!%E9MYdFH*qV^+apQRbNrf*)RtdTkigi6q8'if;JH*0Ud(B_n]T(Fa]$W*N]_,%]XjbKfDE6,6l;X4'&U#4Lc,R6PtZF=IDK>6[GZOA+5's<Bg/'5I=3?_LK!o0lksf<cA)eA`WjP?F#p"P1>,-d%l_]=<UtMsYDguY%jhi7&D\SVthYD+kC$>h<fR,[W<XloFNPY2E>gC-G3$5<\'DFZ<2aBQsIqCjk[SE^g^>_HM`J->cBsTBgo%Bte6s^dLoJ!q--'R'O%?>"RM$nW!':=u54Q]-[3ecNbZcG0dL_\jZ=?LqM8*5\g?hn)F!Eh.mjD7=3_5Oj-Ul=WI4ZSJ6'.0;7_%!&5]ou:^1IPcqWaVY`W%AQ3Jjj`E=>W&9V!4eNa2al<IT^+qei+t,>r*5m2(hulW)FN``3E/)'k!^lL=_iU;[$8Ar+=1=YI4Q=f\%T`_,'X&`';qcEXY\Q_n%_tut[;X%nf92rtg;X%o-h`+"n.Qu%=3h]jtWT(9QOEBN"/mOGc,P?@N)6)44b"02e8Oi!Qdl#K!O,kE5brT:ACS36a(*!f%ojr3s%f[/RqBU"Etl)h`l:YUmf'i)SVcUEbO.MZiO]:]C"L""q_F9FM%<&bl,o_73t9SIQ[.n?0<k7go5I4Cb]/$5\BIjuG+@;&mim$Lut%lpc51'DpPjmrTMQ8!_eX(TKL?$NM-n_\4GF%:*I'&fW/29+^J:&P-B<h=#D4OR"d?VJPm/:Sek$3M7O`<eU-67$'4'#5=iNiuFDl%3WmN?^J*g%.b["7Sm&[Nb"Y<'m*er+5ffY^bVSIlgSpIiT1/B^B54ss4.'3n?=_CnoVA?<X&%oKD8>FTcg>F_okDN2*BMV,F0-`U%M48,."R!G(NTiI,kMfrJNsrY^%Hcd-V,MhTk-A"%G>!+ko>n0%9]pnOA_:!Y$EfrFd0J!/[n\I)$p/eo<k;](e<]GZo-tVEd@L?H%ofh-W0stZHEJq</SH=@$h)"Dr]Ki$tFGeu9]4`loDL#ld)0R%G^!kf&+'1q0rU98J$].rop\83(SK?%fFpe/q\_NWo`H>qY0j:s.%W[)96j58@C=NoQ#)Qr`emqXeQHB"dT7"4:s.<fju>;,uUXulTR?BfR(OKt:Kg(qt#s-8?7T)1$0:.K4!mS^ApYRZ"JpK>7Hs82Js%gH/GKo6KpE#Cl@RgVEp9>e-d+=A<2\1KU>r8^>HS2=2]LkU!bkLNhe`NP]8KO%=ShLI(C'/\/Gt%d3]$hgHHs,BBrBVfcdF3+['b%pI1?rr1)%[UW;*$h\mUZd]..+H!m?[*2OqBQZ_20<#eXile?-ReMk?]3r91[gj/*C9OB]KP96HC(8K'MEsd.phVoMH2P!dfg#;)8%+g^F'%Y33X-k;kDkEJX&G1Y!sflZ:PlX@*`*'hohh%8S1:$7a6kC#g>ODHtUI2XDH4j%S%-bn?7.n>^rB-NWo7\06ZLWcQ9b,'1&%)&YQ+cL@jYpQ(:pS'G_k%=`k,flU!"FFCb-6YFk.jjIQD1X^)#Vtn7.1=Bu"+%p<9flTu^>^(DtcDGXajo;2sctp:U;9[W=$pq58%ZKYUB2WAO6Vd):B*%U#b3[_HT)L463;_D@spDM#EflZXB,GWJ[F3=G:H*8I8VXq?@G!t#*:,A\MYTq>g,P3LAbbk!aGopHQSJ.?:%hEg43PbK>?"3lp>-X0AG167u(bj#2r#J@XieOotrc)C[Ea#3B9B2>&jYq?6*YKk8JnZjbOH`t`6]'t-ONg*<1Y!Xu3-'?Qrhlq')%!r_Rh5'C7hitO[EdRA`9Sb@NudQ/WdAi=4tGR_gA!q7(j-=L:Y`9chLUa,;Y:r8SgVUZpFm+OTHPZ6bR?V)";)t'+UQ"&S\h$#OT%*M9n6H"Y'TquNG#F*T@\qU"&K8WO&`%t6]&a>8#]kECm\mY482;P(E<3hf1;b[$%g(s9)/h!&J1e2E<th$neb6a?Itm;[aZ(;nk:%HOq`9Scu`SR35%L[@>s3qdP>`7t?5b[ch^3+[@6BeaadFX>S54'_E;mV_gI3*oDJYe<+:WqIHEC\fNpAFGL@[r$]fD^^F@qq*a66%]Zj;ShF_#E`gTTKU%CSdXp]>4rN%`jdng$\<2ZG8)MG#^][K!]B9K_I#r3S=LJI9^i,"FmV4ljEpmiWOBh8SCA\c^GhFUrtH(BoP%A/>:^,Ee@GM7&9?HLI^j_HR$A(h(-ML`k`R81;^+]$!]<bIgg:(nu4p9TGo],(k=ZZagl#?1Zq0,7FJ;?J4bG*@ruMe=-uoI]%(b%^keSJ-%!J4oB(L\Q2&lRqn:#PB0HMR-eqL??B/K9(IK(V/HH\`^dJC)diB9coAa!V,VgpIf'RB@pn]b@Y[RRB$C$C6C&.NWKP]lH%_Aud.jfgDnflQ&,3%+2'GCs)Z_-XYCb^:D#%4tCQDY5F9puN0O^6CQ]5*>A5Si[l$s2(>%KHY`ZRf%lO!H'bbfhWCeQXfg4Z0Td`%em;iBa20K^-e;UNHe"p14[6RiF$Gp=o.`:X`*.]N'[6u0k":1<3.fg")ctr+T3)It4R[t3QJ[^obB)Qs<fbf[-WLH$R%E(2C^=VO%ENN&jJ.2O[He4&(8WoIB>&8&,nChu9,c9b5I9m,lGRaiIGM>K<Nr*me-qs"H\$T%l+,sV61O0]Ei)dJqY+%[J9PQ5PK,X_5I?U!S%c_PJsU\5[/qaJO-)2@ELH)&Q&]lhJ:2*?ei3NhV92t',?VB$Uu?JKU,mADiH\sc7)k6c`^#qRk6)s5^#_fan(njoC"oXqj<]gt)F%k8q$ie5>;:)?r8a?@11A4@>jsOXO(@C?]].`^tJ)XfjFdnm!V=/JV2HqX$u$m5o]U;l_iq$!$M3b&?FYC!e4OEscIdDG2Xl5Q6s2%>G]R9Zp&Oi5:a4eMU(c&gHoWJim$hH>>rul]O%+TMRmt'jjX.,;l?=Fo$C[+?%7#j_gCt<FE]5&hWaHGqplIlZDZ[+]^rfA\(!6q%I(885c@r5r4Z*ZsL9hlOl^)L'Gk'C^Sa3,<>8!NSjr]]ZKsGAHHg]eOSm0&T58/<H]dgR8.QV^01[?cHWAQ&.eKiS0K,N99V]KIF%9/lFEi(cuagf@\SkA7J^=>PiHa1l=;R(Whm]hkMg4IqU*+ASPH:(bukpR^7dVYH"RP5EHuNHLrfb(<?1HFZhL(Co0Ep7d,_>!8?j%f_0so@])T+@b(m2AB6q2a*b:`j""`;YC-/[(o(qi.D%_1WD.r(<k2DFpqH8YT*(sdOX-UKRH"<)a-2UVFIMrP]7Dpl/_JH#Ns)[u%^T=dBlY1dd)aDcW4Xe:ojiAbLI[1s((fW%Gd@H&'3UpOiYq6g?WDW2DdlB!cE*YMsNO9(ngQcC.Rjg>>4G"FAm>=(,AUkV6/l6N1%qsC;Zgh?D`Q0d4=!h\!J2:&mN#ifF(/$37>>1spp\VD`Xk-"02HHqXaPI)UY!Z^D:>-"e/_Mmd&7Kc=JV<&8D+aoMXIt=p*Y.2.3%aL'uF23EP(Vf-l+nr`O=\RcAnq,,;*ql.,6JUkD^<VY_.jTpH]f'Tp-rW<:g?)LmCCiOpPm'`_e/%n>p7$nH+gS:$d-^+/[5;kq+%OfS"a^.6S,iH\r]G./";PT#*1DB4s1hYX)MH6r^=qWI;\VfF\DEi@L?3)M0'9;2p4@^'Kamk.gO2BF>:;%K>2^Fp?*fWFoFh8(N%%Qcg%u@Qll?6',%lg1Vl]\]T^KoDXXLbhYI)aT<`1Ahh%/S-;HP"%[O7L)UEX(\RFpOU'#1$l2V[1^d.KcR/tEq>u#j/3qW'^eeR/%/3qW'^sGn\J>DhU)L:6l5ggW;]8mp_$dcdnFPVB:c2ps8duP6[UO;c:!<19=I+FSLPI3:;UO3j'iibMfk88mlq4i=dn%=_D;*K@p%Ha[^49h512T5,-YUlY(,k)>8s;8/1*?g7G9TC'@4Y<dHdcH9gJmtMbW>sIdZrC2mj26sifr87/l^DgpTGPqs"7W:;NlaqW&;'EQB%4QsD+hQQbbF>oH%]7/Vq1:R2(T^V`&^Zn=pP)52MHG8\-GY@W.n+mK_aYet)MJ=KiL_>j*?M+^"I\lqRIKAGo6bM_tSTD[")$7S=%(]8sO+Rf.eV'Gi/Ka[a[TAN6^c+AG]MD!tr[7:"q+$ir]#i>7'o!b,ros;^7#CY2Wp_k+4>sG6/`)5U.>Mo,FL>r4Shloo0C@C\P%ia"e;`-6XMC<1Vt]T9T`ha/"S>sE7'XoGKq@.3qPF0tY@T7>]Jft2^iUbm6-LO7Y!qnR?QcV5;D?,%LbBqrgtYeTJdC0Lmif5DM_%-\'ao1JMoCP`\!@*:I)o!kcQ4Jp4;l+lDrKTK$dml!Df"n+q=ElDO.NnF-4!`sP.qdCef.[b-jHrB)lj!kdj^^#/0)`s-e?0?>So%_;FoAT:kV%eSjsOpjtW2l1H+T&8Z$3Js^MugDfd/rB0(HL48YNm0VYB$[/;jT^V`&44Lip)=h&t4b(X0_8P]RP(od'hY$IuF7=Iu%&\RGmrMnaghW+4N_BjVkDn'JHnK-S,n+p`pS?m/:S[iccf8hI#hD$oP^q5'PamdH"8]/=/kG#N;=8gq8=O;9j]O1=fmCWu&Y+N2X%mQ</=ht?SieSg8RV3PM#-R"7mf?Yo/aZV"kd!,F.LST:SI^dRc^?aBh(n+h)F3PF/po^7,`0s([.,oQac:gjfGQ#/f@Vthk_!h+[%je<XOA']s?J9UtiZYN)$Y+PINK)+8p@G^\+q:"k65I^6M6/VA,=qRXqW99qZrDsPCT^9W\X'9";rPXI_>1u<TPXB-YhCGu!EU[:k%>?V[Vo<qT7)065P8*'^!p7>Jhh+H2\'CZKkD)-2`#E25K[)$-[0OOu0*=%a%(uP;kgh4BjF-bD6h$/YP\`8Y/_6.+mdZR5!$F<@N%GAMW)C^Yu"K%[$ZctZ`tMd:h?RaGEL.!"2t[:=RX^H;Jog$eYFg5Y"WOU"[k?bcRaS3;/hhOT:GpV!YBmt'Ne_VW26DLAcL*5?Ld%aQLm1T075cMq>c9hu)c+"7H*=^INLAT0M]qgq.dP>s.uO>Bcp8rP;e8iU13"p$eGFGN88sg"gmllE%VngS6.aeq'1&\6E&4+7@_K%?[h.O5P=61]6EYq=74r"c.h[&j^Tt":PZ^@kC,I3rt+`O^HQi!op[c3b3M!ip0W:ImeGNYhL,1sg&Gm./+&m=G5hF)qT3bcn(!n?%pP!q_iIRoY5J;46]9Al#I(aZ2In1*a54I$\j6`'!^3k=paEJH'+#s)@M5TIVOpJR1hgnErIlr4^?J5A5=HXmFOS3j6n*=?LD=+t/%ld]pQm_<DhY@j1CqXo-kHfTJKB#bXJ=5NE^_':=&*'6>ZZ1gs.Vdk,DIeV=AKAZV"QQGu#E>i]MWKZbeGMcbH(I*=jrUlZRr=`e+%/fCYQd!&!ofK.%,-pLR(iq`2\D7tDij/^KlqfJ1AY$J?e4t",?IG^K+Pu.PQ[U/2[m$IIk`8Q%ZhVi@rgU]T?kgf-?mlbp^i?q1$%r=]/+**6l]hg90Ts*[Sq8_g`L,;.F2(u.a;n"8h9Vf,?iY1B!WYHGMuo@<Tmh`l/Lke;6W%UQ_oH!$^mI_>1.cjsKC4ae\Fj7j#q%Af0;fI<nSQe&hOJ)uSJH8XqFS=T4$/),=L_pDi$4>cVr1Yk!7`M1$(&O4qqIbt\,k>T.K#3IgAg-&h!,Gj<lKB=EA=\E2Pta`R$h%q/@&Nrp%jFR*b^+gP;[k^U!SkrcD]<$]\ORnp'uJZ1U?:Y>:KLCp!`rp[+T>5PQ7;\TmfYI)acnf,h\OoAHD>pt&$fs6t)UZM\-p%oAD9MG1ppOrM=!?,6$N&'$eIc!OI$<G3.Ir++/M6#YN)W*WN)la3VrLVDNRre>5ICZH5U]NQq7oXb4Rcj$-?/o<u5iVnRMgWV&@F%g#aH9,J1'>QarFB/_g8GHg.):Rs[jkgLC'Xl2=!Lg&@gQ\9@Rkqm<I[jH>J$Y'+!PJ%A@'FSkIVs/+NkS_eIcos*7lo8DY`B5[/;%r28phl;t`mq<lJMn%#dAfcL^](FL;NI/DO+0&OX%d=,83Zq"2X0)OVdfVG!mnn^JcFq^'^'F?pXoWO%BgcEH)NTn2t=T:F/2dXA0%^G@^>':8NupfW+:G'*4pk0DrMj0kQ8gk5pNO7d8np]l*ZcQ)#\a6).U_T)36@9CP@BY<9cWVM=Ae(bOZoC=Joii/C`?mYb.r_W#(%41FnP`;\d]^H?K,_MRmK\+P%`Fp)0brJgX=oUl(DgumY=M05tKqnj1=#eiBA=T:G^j-N:.Y@Z4NZ*uqf;T%0L8'^QA:V$A^ddqP[%g%XX@djIoH:1q;Pm=t,Sp[ZrKh]*oF`r3[?gOK4mZTn9k%s$AW3m&gG4T(s+b/i0r]MpjG_V>$9&"WJV%2jHL(.@;q]q:j2-Pd#7%$@hhkn'O@K^P4tCJj=aiBA\fY[kI,3r5Y_=s'3KM$T%M@_(!(#^(dbg?$gm">AiC/8c_nT7tPl,ll_nrrqo-hVJ=j`'HYaf(io63%::[nMc5lf@Ltg'Z*1[Ieknph&6/17LP'#F]o>RmCRK"dEf\0IkHfa>5Qee97T77]`(:?ssh33HrO&,RuS=afJT>,mR`2&s$"G+hk%m>tg*05nE!kUY2js(ZVQ>]o5D4RpRRLT^I'E?jjB96]oa_a?omFqTu.#Zja3gr9/[^qkJJN:Ys\rdGj;\A-n;>O&=`gHRh_o@,&B%`GaB)*rB@6]-.>R+5U^Is1V.t*+Kh[G%J#J$o@7_?YoI"[:H9rVq6$frV=ut2;OG&:U\Ss17EXg((]<V;<gFf*9&Qo9,C*J4hn%U%,MSi]P%%*:1E>b*i_#CWm?:=@T"=-Wm!F"qW1'n"YA;l[r>_9XKme.4o5XNsPJ"<(Mqb_ET38c#p#)9-5]oA?N\rfrj6+JBrm-)`%6\M!lMA;;n:)_OE[l-[gpZ=c;RP5WQ_:otds65*b[Fn1ZNdE8[CM7>3Y$s><ZKp4XBhAVr%q=(GLMKs^@k[B`LCTpPiSGDb\iB]I%2g:W47paJ`H++SCh5_8]DgiPdj+R_bV=iZ1Eqeb>(J=>-)*<3/X$u]pFDpc7hel?Tjc/6+*1"u7hj(H+X(n.apZBJU3[Dlo]_g[A%1'tF6ed=FC2?c=XNfW<:*;=5IY^Q8frGfR(,])nI@e*HGrR[5e?@)CQ[4+)CrPts]B\^FFY;HK.l0:b&\KlYh$%fMSV6O?RAlB8t%q%*&4c<JJ)I=<p@hH*qE2$pJ4hYCS;$)malis5A;d,DB8gim5r:KCJ*(G#Gq(J"Ht?<gL\3-=e@U\HcX3;1/up?_[3?#4u6Q;W][%pQ;LroP\uC'm5J95JY`<O+*a[Il`ib2qOnf#<sH)roW-)lf-m&CHK/ts'Q7^pAL8(3Z;THjjVap]_UXJ=5,g.gH)un%Y]Y?cRL_(%_JUDVpour)ki6r)lXRpW*qLJs@u!7>`t&,l(Ot>YYr*U"0T5;]@eXO5PH!?Dmk8=jI3_=!*AJ*&?dHYtG4CV>hs(p1h8QX[>`GkN%jL_d3hg`UE>Q9_gH+rY5_L:c`m+rU\kN^rP7el^ffSSqkBe02]rk+K0\@R)V?+`@hj,OVdHd;];fKYp`E:gmb_b+*eO(G>qq*C&9%Vp[?u'BSA/k7FJ$pt./>r6CpCkKgYRog@I'1EYHKF6=8!SZg1?4+FhIhi`0n-1;hr/hY:\jbOqsqWTpqT%C[H-boWQ_KVo<h`_#9%roW#mQcdoimr(Ggq9.[Rq8hmiQ=44F<.o_4$7$1-jc;O)W;Li%rq%gKICWIS%p".V@G*l3+)0'8ksE)TgAGr/%rTf\1(Q_.4>?fs%&$ip<Gli&`,n:(&jkol"r&Lj]+'r`Mf'L8XOqpQ=>;sS5r:5HBQ!o^)6d%a`Xa:+FIW8oc%r;0CPM=,YJ)CHh)7)P5hHKk,IeNT`%BBC:Z)?#r2@ILC5lYjMII<=ie4+'X:05k;H%ZbQ,OZo[1_nu?=*A)bc8<3I<VnRlKq.AGWqrm2fR+ZE=EqYPYX2iJ24*pRbS.(I>%I=WF;c'GB"^$q(Y?,j7"j/pQb2q]c4!1rtMDGueFgLkES@gRbH]/:[O3-=HXkBP25n^Mc$^HMIAoB4#(Y!;p3Q#g;<hKrbGcIHqg%aS&B!_#(nnB>^E9(J]@^gKg@R%FosXm5J+\=LpYbhd6?Ll,A!ngWsMM]_h'Io66g3LBRFuY;ePtH[#M^Z7^@ha2r#PV6rlSGH*8:%q![=[$0T%UL.(ofCMn[k8)KBq5p-!\:I!S-o\dF"^EW\HC&*0T(["#4JM>PYlg_f$qU=mc@>MO5q:D&K5Pu5`0AbTuEW$F2SpeWW%J8]`,>@-*b72Da^oN?7oq2KgcO7kqNMn<2c^"4bkI;e^A(>iF<9D@K\)nQ`dNVa5l_mJ8>s1._ao^[?Xq,^Z-0CHUOErmr,B/JLN%q!$A#m;keOTaM[^?bP"6RJ->CL.Cd]nNn=6r9V@YTAX@p$aE`6TceW(,VQmA,L>]8L-@_4n](%kaMU6&9o5,F;IXWO*kYdsbQ68&%Gl$/n*8m.nad;gq"+Th'ps5L4RhAd-:@Gkdf-b#m7u9U-dsUK5gM]$iUq[s6I`/I06^jPFnpN4&Gj<l3?V,i%s1odpRV-,sJ>38'%-/0h;LKNT>r:D+@.*p1&s5`9qSUhuop`#j,`sXL@56O0[b*a9uWHlbJ`L@+kMuNP+&I+$O]_jd(`XigciR2A:\'-RQnX?4@>F1g8%1.53/r8=dXhiiD%X_snf=uKZ-IUh]uGL)nq^@qETT7;:"EHKOiHa_4)pAX3t-a,/8Ier]KVuP)tF0?Y"Hh$aigPt54>A%hi?bY=d%\YkKq4aFWTK.-c,@YnU75o,\fLKj,$8kN!OqbP!%m*_fhIdup_J)$TY]47-3IfJgH`%8s&MEp5de-,bZn'Q+5`nl?7hAjM\4*!?$%2BI=UpO^/irT('Wc\&p0+8WSD9;bR5q&q`tmXa`XpYhecMO2&-HiI;0qG6J6pXF\HOkmh!$Zc`kn(WhU=Gu1bOT2o]VH.lGm+Zu5%md>e,\'KL!jPBY!HPaH1?,#0Eo#^-u[jSmP^%LO0k83umc`Wo?rcGgQq;!PS:L8Etlh6B,gXuC:oQ'8YST7-P`1DDW8tYl3[0aM-%?g&.FdO$"dS)hrm+(en]!J19#6F3`.m!-_R1,R2Aq.FPRQrF#STD1(I$-q0ff-aT-\J4%Ohm'q#OV$%+J(EWbFGN*WrdbjTd5hDg%Y5On,n^0D9SpgW(Mtgs+@PJAl8rNIX*FeC6^Xj[dY=&4F_So?:B,UMN'$Fn:BANDF<=^),s!ji9hk0l-erZ2QcQ271SX=HhpJ^)_%=2-llmc!hSit#Le]$N\=p<!$A00d-lnrM+'>R:X1IWFk4T\g)'fogdZ_IV47Y;Z*l:VLAlrlBKJefS;d:!>==CB@WSm"q\P6X!BS%*rl&qpKc5<7Uk6T[JjSBT2-P=Q#DnK]fY;kXk-K%W@&Cnrm/jL5J.d7q4IP^J,Jp'j%kc@>ON0,8)>IjO%H!BbT-TWMlBsO]Weqa%RIt4=p["*$F6p6V^F\sFd!FL?asWYoE5$Sna@aDhlJ^u/K6H4@$o#YL04%NB(VMdAT&n*JHhK%>.qJ&ih;<Em(Og9Mk'$bc&s7#*%VhC8<*eHWG_tN)o&^YF]\!>"pI<!P\l0EEJbW+eO,J-:=Y@!n]F^qP+b<I'(>YgKXZfL2l#D^VY1#8>fM<TK#*mqY?^>'INFluP*%>BTG[Y.uBrGdjH+9D^BE"!,f!eY2.E$qC+Ti*nd@!A5D/^GZn^ej:>AEqI?n:^tF$/;A9P2t-1?#6&s&&OdO#a?mC`Qb_bH0>=!N%6j@Wq'MTnQkMJa-pT/r2FM$GF#po!J,_"CB^[A9%/!"'6A!r#IX(\L:\8;T@Y"ukNc&OQ%WX\aTPOS([f;hK!5<S[W2$F'Kraf&W%]]H=D@EfD`?b+!K^Z-"NGlHZ`nm=l:Ppib;r,I-#f,7.#]_>$U--:5!)uh3;lB41I!s?hu0o?K`n_j()rJY;nG'CceKTGqf?f(/W%n(Wg"o@:AMj7!#>Vfrh*3dL\?#I_T9S]^7ohn0Jr0^Qr3MGlK[rRKc>+2`H'E^K=m?@P+h4R(.L<>Y)OeN8h9TL+*4q"N(f_XG.S%,cFnaa7@lBQQOI^:Z)/P0)jYBo=Z6jA%,cn1lpI<oeE1bFR\Meq`5SOZ=>6LrmbZZo&!4(MT;=%qmb1doAIO@FjIdOf#=CK5%Y3S%jT"kcPPNO+j3B=Hh=:LPSFu4n)>h_&G>)?@R*U#jHZ-Q8B5$a`BGBo!q7&07rUeRR5EWjQ+'2b74`K_R)s^clHM!9EJE92U22Xn"%s7j3opmX#9ZGod(V<'q4M+>nKI&s]&o^_D,0'HZ66]_6!]trU,-iXog5'j\^rTE3:5M>RJs/-Oo$8=4,a^Lq;.:G3iK0L>NE5166%gA)'ecI\ip&lZH1Pd"Z,biJQY:9kZYXlIP&E($Sr>3PCkK*Nobn+s*L"1dt!YXO%*.B?\@a_.4o,sgbi@>8U?Q@A]"_*RtMDbgmJ%#_Dd6<=!%27,b!&#ENT+qYM,.RH$5e^RaN^A[aFAf4"%G/F3\Ia^538s#4B4-%,Q?^usU.4W-%XYg+aP0p='lmD;^n/fD+8e$CkC%i1bb@E2=!Qrn?"(f<9$?OT`)#a3U5]R3P=0\GekN\pEBSr+"V)=`[^i2o9Ff\[%ZiT2olUJ,6tdOq79TY!B9<+7q;)QeT.KgU$?Y%HCS:dp3>fEp.]HA0:Y5qoXf12T@ht5j/Z"DI.9^]F[tfi#G2o]h0GC=;FT0hld7S$L02+QdEO7Qqa\,dIrsfCU%,<.r%.0Dp#pia%fe8,c>)s`Eq6)0&?.dRhqj'Ad@hS8*H$d^s>gIk<o3_5nh"E-93-F?D9GDabpZu,]e,?uMJb!5u])'I]l*>\6r_\O_p\p>MZhf`s%A_h4pp@cYlo[oPmm=".NqU:6@54nGR:K@cSO3O6fp:'[ldH%dG/f[&sEpT-=le!Rd0Dop7+*0fp`r-G)<;5Ln,8hQJ@QloNP[&XI%'<6&fA<pf_*1H<2l`Y+?Da0Ff,E2U#)bI&:5InLXO]67rE7ra#Z*r&#3[@Lpr+#QtOdXL6l0-9l#])UC[[3@_HQ%I[rl6@L07]E[%&\(J<+/g)saXqE*rG,:.PPH_#H%4>Wr+V"M*&]2&p:a$IRJ`>h/<8TZRu4F$1!L^Om>@Ci]\TiYZG\R10>Un@plB%r"@P6sWWGeS%?BeT&Z@8"dn^=ZM?=B."hlBl&P"#3HT%l,&)o9`'k?gDU%qP+][r5)\4FR+pG<Cs/S:18*Y:m(Ar4c$7n*q@nT,[gJIr!s2Tl#IQ%a,^YoPt-02o%=J%B]I7Y4o6::SU(2-goldrrqbpA_q4p4j#BT=Y?nbbq:s![%6aSr4T"ro_(cl&?p$UOF9p:C#@iDtp:-)<j8ZUg%c^o@@ok/a2j6Z_sp4(,D0?6;+)l3M?OZ'@[r,Bu!4Mg(8mKoS([Zoc@9:MV:^[Yc%.Xok.1$IQOVK9FfUp(_gcPsT`c!"mb#`n`T%&iXk=Ie?B,S(6&poWf%jRms/Enuclmn_T8%)^!47bcS&)[87q5=U)7[Q8($UrTV3@ms-o?kM;`Imk@n3Tke/<gh*VDLG8]^?<]mk%DDV/*C>:dnrQNmN?2OKr7VH4?qiE/rfcKT?Y3ti5D>(Qg_e)V[baHe+HqDDPjG'iYKHBs$e;E-l9S4u;4`:*[3+@:6+GCXF8U6E#%W13-Ca(*QQQpm-Xl%u2mSee;i8lDZ@nR]7t%RM`W"?6/hToT4`Wlq:6KgY:gPL3+IS)&9b]Z\,>2.jQd[*]kHf#ej&R&:S%Lh08@%-XdElp71CblQ@K1;Eq=p#ZC&,P'e*6l^51:FWq!-+''n!(>>/A61E9K&n9f%U%1p'/5l$9DDqbc6H=GmpUA^Ea@TYo9U:DL0IM:-%BlqZ;&$?fA4XdkNYbBt<Apg`D84K'ga&eQ]ZlE^;SWj\D-ED$M2P(tlHH:5l$>*pmjB=I)&%RU_4o;CrF$-9F]e$cLSf!s5QaZn!%32S?d1"Q0fq4@WQ3IDL1N0Oo]VqqZNOV,Y1@fQ,;rjD<<Es-\$ON-@?<?6bD@g/QN9L)?_OCKAm?<lgOcPbIa-B_WCDPG;\;p`Ph%0p3X=lZL[A1at/=>r5*OkHLX\@.H@e1"L.L0]t0JnT#_8eoeX#N%Z:A)Q.H5['d0W!W1Peq?"bm.,MQ[8fZm,e2D:<q",^4f[4r#%F!Oa:UcKu9%6*uM$JB)EVa=Q9UJH4hOYXjVjQd"K#JR?N0eg`aH6OXo:Z`SE5<dA6j=ZTIn9mYVNQ8n\9?qVOr87hKiYZHE7LLpS%dX$J#(bb+*[%mh+8ZA55\=&M@2HMo"Y6JhL\n#+.#i9TSUI1TZl?jd-V(uDG$H6l!.gtIWi)`^sGW\lgKEh68.'\XM#;=RF.mL"4%qomH)D#2AC+K,OA-N3@sJ7Ds9fJO7@;CE&)P[#JNY]d@E`XoN,[5G5:(gtZ8%?V:jYp&j)QRFo-)%GaaE_8g%1`mTN(/2g#B&fn"%Oe6EYAplTI-E*#uDCe3^g/);2N/8m`2Q%&=&E_V:3/Dh5jZ3N]/o''!*TJ7\'15CWWS?V!PX0*F)f0`,+`"l#Y)I)[fk@@kD&M,e%RE*Bhm\4fi8SJnm)O-gTcdP"D_iE4"[35qO%mLAK<ZJAsnS5"uN89(C+5GVFk>94`U[oHqXKSE7ltH&laVrf1`_mOU[ZJa#N7DU<%QUk<(+jLsH4ci^LSO&(uCp6KlJJ0pY8"Vaf4;d6-a@;+tS;1%]%,i*^g+aAcQlMZVhie_.?tru*2Yn*U`?EH`(3_H!2l>j@0DFC@%SQ'*].S^l.*5nUc@hJu[0UAo]87T\A4r+cQ][9m*Y*7j"=Dea"(MK-SFVbD9!Y&f3:2kXT2%I:ERE\JnC.uZ-m.?\t\^en6eHB`;%.@RW4`^p>+jNbV!o$[i?-KC$#Mk%(=CY_c-hT>)!qk,u$gmD5OTKdPbK0f)D9Ask=Ndcbl1pi6!QI&";5W]esVpUI@2HG^V1.I)[%d<hB3OP=>?-BEaE)(0&?`@!:UR)5$9/kN-k5NX5+Y7+TjpddW80TU8rqI8V*%LR@s296'.1FOlr@*7^N@+/&,&_P\PZidponZbB$%!a77F[';-ed@=6[b`h'K+[*Nq=V@%!JC,OW``W*L`I-j93h/X+YMaM[O1C(3cU"lT#PpFK0rr]6$r_pA*/=\H3U<%]G+O99*N"4c%L?hU8OTQ(&XA=Khn`(o])Wp6Hi8hrQPd-cr$pES)#rq5>_@"l?,Xa,-K0mNk'H_+tAb7s6fW7_M`DAA#0FX@V[4MU-j1#+Ai+T[<%@?g3Q#)j,.H"7%>J(^#%_7@E?X#P;HqSr8o+TAQSKH]T\a4HC"$qbM9JN]eVKL$Wj2IHta46j6;.nKIN5=Z3jij=7Z*Ah\]i_Os:%[O9e]Y0$G]JVRQnjsV\TR(9)3LW%?fU&jFuo90s[*,.J,.ZS9(gEs`p87NeE\S)thpc9Cg<Kt<,UPF`g`p&@nZ;).]Wc;CGH+pRR%D&rqY9r,$$l>.jn_-T.'&TpTX4:%&s06^^M(rlT>^)QY.0tRc-]KI%@V\#qVf5^SEO"AXfI3!o#J<L57B2%uk\CNJsNGJb*Zn`^m%F"F,5arRMo+T8XD$RZm0!cW1&H.'3$81SG5UP[R](nq[:%U*UDNrlZqk^nF"!Z?B5>iL4$B@``s2?bC8-La]EEtjIgd%HBYf[!E>%HS3iHm>W-p#&&!Y&ptpcdd0/<+WIfPa?^8p0Q1dBLW.itDt\i9;JC3(<.[[qO)<_r1:h(3fZ0T7o<?.i8)mV)%A\!'LI@>6C(Ws;%+_g06@FC<5\ar^&LG:qMLs]TtJO8T08t_+`Pf-_E80cGC1m>"83'V%WTiB9]AZHtZ$\,Sp=Z>301IO;Q3%l=o9KA7*$G6]aH^7tB%g=YJ/TlnV(QUNW"Tg2G+K_&jg>Yd6Xf0gL2V[[^;f3FMFo=hXY_oOAPku8P41LNpbRc^Ps4Y0,6E1":*Ets`p-hY,^:,SDYHsr^f%\l9V'm>"!$IXt;fJNFkt3"bqb>uCd50@cp[ECQ]W`2=&Sa_3m%YtF["2LY1C..\FVf>6^>EHH5R_Lp2pj&!_:(`ha1($c?Aco39W%;.FR&BMbH"MA9JXRcR_\GuCYQ`BbH8Y;)9?D;B1cc^%iDG=O#\cZu&-H=`^eO>>0CStu%s)aG8b93^<6aOu$gZE9EL%)X5'gOTq`%ndEkI71+2a7/I_IW7tf$\1sD!W4'+)(EA)@j<f)KoWV*81MS\/oS[,_&!Oe-if<2sdDe).'HW%okQF]W(emgGV/e(OS7B=5s&rmk%g"0Vu@]3cVZtK[r6_+CWAYY2e.NJE6@#Ok"o*HKXCh%JU3'n6(1KsKQeT)Y3PcfG5bGAnM\]_<9BJ"=cX]DFJI4,iTBSAMGTZA&2%GmAN[(j=NZ/1`Oj$CH?'1VAo<0kcCJ0@(49nj/+3`<'+'E.6j[`(;Ya+njHZ_WbIMg_N75_mZeEbg?It0GV,5@7I\5Ud?,t$I^@s%hR:gRbQ-4Af`!b-ZXK>7c>8PPa`5\D0DV!A(_WHuRl[r2qHtf*fWKYJF\1$;L4mg8m7NIh)KGD#P*;GfK,_acc'cl/.eQ&eU,f!"%jfc=Pe^q824@MhkCYlK#oMRWW_-lWmUp\cJmtDNLcR_d^E)"ZGPG'6,g<,'&L&o<aFSJ%q`sj$tUMf3I)O,mi*JaAc,>A,i,@c'W%)d6Ar`jdaD"M70MAUK3h36-eYj@CcUN:^qI5!q6!]Z8U)LL=k)KTtVW.mJ,H&I9RW>%(LZ?\U,dAhsb0@I1t1S^ub.Pi8"g7\.61%r@jZMV'pCKL/f[.hE,`e,X@G$44M>`1DI6tL@g6G)3j!'7)N4hoJk';/Cgr2>'\+,2&g5R:c(G:'X?G)SK6hUZ7Y/$ELRUtCi9t\%R6DH_<mMCmeO<3`0]p$=rs<"T9F]fOcnF>UAQR>eb4'YMq[=-/X#oC7G\:]gaiihiBkTi+,bEAYpdE84A_E9":Gc$QI+1Z[K=T!q%N^$GKnaHOD8K5fH->f]A>)`sJ>U40"^u.:&D95f\$9A"K8`Qgi7mDG503q`SM?C&-b!;BjKl/,s8i2l#JM1XE$*C&:#P\JBoRXIR%%;'i_*@O:CVnt>?)$fV?p>nZ'$&or>0L;u.4,,@1MWYY8*^_cYc6WZ8k@EU/[L*kK2$.^DH/L+D4dB;oqd=37T8nOGP[U4C;@:`r%Y];4.2cca[\X=XH@q!$9XufP6C`$U*4A)d'@2m3WL1Y)4S2c0Y.%0KW\i;Zc%qSjq*7%co(sS\(D%)"V#!hC?'NamB7Q1=U6J$eK%i"P47L/B68OAH<g1Komnjl$^uUd864\Q&t<(ne6P'/OI,bV'Bd"e;UZZj\o>kSP<&O_6L&:<-+^s+H%8Y8\K\dH5Mo1&7!e5'fCM%?Di?d\D0V(A=ar_Ut^e3]c<cH"K`I49"Yq;>2UIdijgt#cWkXbanT?VSp]`=/-)MCg^GOUSFe5Sj0<TG;I9I92^pW-/Olos-n-GT%i,;Mom">#JfHc0sj:n@dUA?=`ghRY05.)>e^:\U!l'U8>p!ukm%&G=3[tc[LkI)p9[%Y^g%EE$R0Q\NgNN[O#cl?j0<hA@@i$U"S%R'`PUFLg%<A:RXL\NY)01(IK??3H_K*5PJ9npSCBa#?n2UKQ-1d-<+Cb\bei@-A@Ref"CG\>R6SK"6(g#q8hj`#^encld(e/)!F<%5!pIe<d*pn?&kRXMMsiB$KZh.]n1f8nh5)!#K[/Wk(N3!L5`iSnnl-So%+Y3g.Ppl.E%oK@U7pN6>3PG-AabJR(rhkL"6JqK?L11%G5#5T\DKCjnL9>7`m_9p&0ujf.pA_-$,%i[_h2k=CQ5h5-6@i]+<:6"RRbsB6Xh&Z9M?\d&_s9OSZ3;;:cH?0KAE*n!bu#IYYBj5%%SDDC!t%7:5\6`#Nb9'U#0C(*1Bc'd8h$MiVM'TQZD'<GT__6T$GdAho*7mFH=b.*,m>Gr%73u!)NAU<28qI;.!GigL'A\inJ!F)%1:/rs-^]jdfpkZ"_QJPZ$8r1&;1XI<@oP+^,C"K&(_T82Nc;!C.5^q_ESeJCg)7E$7VXM1A6?J9ES-"@I1:&-nnmk$Y\trHo^!9O%0GaL=d8/#W@CSLjmAM&,\B^q,hc0lI$g.-d8RmHF8oPdR=pPI#;cggLj+n/'Hn4?USMiYJUmS0!WX.>j_0FG;!m\J&3C)j;WSj9N%VBC!J]S7*(j*ZGR81odY$P-P"gGb/Sj"meuD;h0B%KS\.@Cd@FTl7?V[tdgJ%1.tt8%8]s^_!jY>*l<*7iXTE7P:/MPS+"BJ5ao&%.?=R[&5oi9f1dl9JoXlaU;76`5a06H.ZV`5du?((X^'@WjqqpI%3c?ViPU'?Jd$[l"JH:mk0i`4L=h0r4h>VcFSgg<i:J.O7dPk\%302%8eQ!i>SBi<D[-D3C_Mi_oW!R6Yc2c*#EZbB$)Or?=9PH5'#e_>8Ic\lq[H:+K89uZb)\ngC>Y0arL7pTWZ$_ZW1CSX"pir[%%VGMTUgFBjV\QZLa.#i5A_Q7<J%?1R-<:CBf4;j<eOq>j<L0-C[eI(C[#?i%hKJORni:?q>TPUXg0TPc9&>K4HK&;o4,Tn*MESs0\%j(e<I4Z:cJZ$,o[.l@Z]lf`0/9EKq5"E5`m_;I>Onc4IMI+B$UGb2^2#/:C4%5\L**I:HELq>TpBu1pmPQ5PeDK%e49kC[?J\iQ1%d;OT@P6omhM\X=Tck+7k_q5gP7_e-hRL\:$4$Vou%bh!"Ae+tWnLTIsXmAkO'1d[H??Q[?(-'-9ZafoEU4blK/eT+_fgIB,*4p//%Ub4NlTr]q>BuggJ/A;T*!JCj_=YtpiI(,ZM+.Bm:Kn]Y_-YQX49$-+scj3SV2c8$j\>XBc?pfobAO$P_:PS'NcPBnI>ai`b4I2Wo%T^=>^fasr-8[pC2_SRS<Hj%Cg&5,I%WIVCYg">b@VEr]dAi^>kIMU-t"_@Gj"V.*DJdfH1*?uh79]unrh$Y3tWE;9n63/VoR'M.?%)bX1]PMqI[5Jau^e?4K^(uh*'S.6?1a'\rO,^iqu1JlR/@N6&<'+eM#!.igY7LV4q=g^:e3euK?ciV@KDY$kM%2l$OW2fWKEF`_i%GB)<)BYj"CY^j'8C(:G!@i!&rMgc;P6$UHqZ@NT7##X>_`>:dWUHu^A@rPRTWHbr:`\XjZjgbP,!/DsHm9Tf?5RZRJGjm3&a:ZX6%*/fTO%sS.>,m-#&]HIg*Tf>Ti7cineL_GeSc`^k8YPek,%HCp:O=;'fJUh*[eF3sB4`[fV)PY1NbTO]u0R.D$_IQb[MWb'1!QPTq%^6ArPBFPEUJ45P+T@Afcb4-FR$XaWUe*6O8$4!QO7s9S3Z6hp81c\0iP6On^Jj!+-5)o;^-TO7ZK8Vu$8TS&8;]FF\L4;>3^pV51%M_3T8I**TJ1e=Hrq,G;0`kH*poQ#S/&/%90fTa5BM.S0T!\PN`ar$nC@<`=%4/2%I'ne"?/*$g=;2'arbY[dX%)TJK6DhYigFJK7%%7CP?HAH[I)5;+Prli&;;$t#HN>'??+CF0A.Y2E``tsbk).4H(-<UQp,S5]r>W2rOJpfLEIf`_lLiEYad:;lK&S)#$&"4;@"Ubis%aTU]BnS5K]&:*bbH&B,J/NB'#.A&-?5-2)MA<CO:`W;"T&U6=Uk:m^n(AI?k5&.Ybd52:ELIWS^4YK?HI;Cj8%WTbqEmX`g2[2Q3%UdB;W#68_d2Gjd6GG.b#@[(;A<IIMV*;B5U&+pJ.9C-gq;<_TTLl6'Vj:70%]ta\H8D!rd0rB(aXNF%f,0l$hoKA7AZhN8?@mum3%=mJB.9'SW45*@@L?q?eW(^HT@a+5nN5_NSTSo=sZ&9e1^_n(V4G_I10[F8W@n8!]gR,A24!k?%M*'5`@TUZW^[/<H7\2`X`_]=%B%#SAiZ1#"O8>7r'kg^"XD^[]VQ5CrQm<(1OfT\cA(GT;<_=&AfT_9g(UKg.BQ`<dZS3aXa.1#R[^F>MPY2$-]Ohg&c].?Lq^UX"Jm%!Q+qO0F86p&cg&#$DL?-c+l`"'U"+S84,Jo+>Qln=mZdRH5cs<K)i)V66McVIK[-qI:2>rjkW)Alf%1_I4Gab:X(\ch.8L+P\84+%_*fD/r=&B0D8(h#?r/Y0:*N4a0;Mdu<?jg=;;AGB6-)$^6(jkTU!jblW=e5U;$W)X2KA/i.9&Z4i)@/la,CQh5WKrAin'jr7".]R%Ad/C:`afFIi?5s:P+Z2s3?.mrKtF@oWgGb&5-Q`\MKd[8UKAX-$]%l/8YLe55!M6j0VMZbiU@=!W##\2Y(@A,bXB($'O]H<L';5-%d'S]4A2adSH_AJV3"12Q>W&B%pGaLM<OrB2"_Iip*(CcFFQ%./8n=9)=R"4YKr^`76d1-T!/%1sm+r#=ZSi#mrF\;t&'lIi0"Eks%1.CBbW,%RpV9_u7",]&=7EcEtBP+Ic,4]\oG6EReTG#F%-(mW0Rp`lYZKTBp=?E_E-Je`"O2(c?U98QSa#7#'G1ZL);%F>P@/aQ<%H]!,3MlELs5d2?JL16^0m7-:RrX[`e=gB(o9'qGeoF*WJl^CH;F2f9[W_Q.4-c@$\B%%n#L]5^=>&A51V]m:bR-_&e3:rO3$kUte%\qkEk1K:o',9ggUHUJI\%i(5I$p6Z!k-12Gg9VTO&hlF4&p@udXE#Z=H^!Uriet$Ib]=Z*KF-aKo`:`sOc&7QL;,=U!l2>XE8@8>%E.$Up4.r%6__KpRSg)/XJ:+;2Hj1>j&-l'k*>@6QIp+?R+qGM!A&n]gcIg;n/1Bqm-7sCN2).u4(1';ml8@0Ni*:ds1j:"[0Y.Z[%0P1E*UmfLc3$YYZ6jCON$LK2e3Ti9sKkFO$\*MikcH-4h+D7t[esPrc#KE$krRcB$0u;i=T>'U5Nf`eXs*4NED!Ml_C&*R5;NR5_%:dFgo>Cm(t^1ZXWeO%/M:^Vmf_k`53"tqPU0VFBO8>Al$=Y;VQkS\N&+<N.Do.UTG&U5Q,3=(Eh'`llJ#S+(*RMcI(&iO(LW0L0g%*mj3!SoYHbm)f`%;F>6)c)3>0OMLiSpcdY!V'7u2%XpFB<9UeZ_Y>!mKP(^kVcs<U^#ZU(?3*tZAs?4k&SPWa)Mp25``5CG@I#qM%-#lPHd!+F-g(dm7!g4M@.;OJT6a),f-TE;@_u?D/f9>(YU%uP<7[1h7>G]^'BbkGQX9'P04Q>?/))E?>aF#WO+I3kE*GgELk#6f9%^b??i!dZEp),mEi$,V^gY`0J<c.J64jao)tHbb:ja<Cg<=#ruG$m@W]`@*5TQsLB?!c*[M'o&^'fr.iXkFeu%na_!"a[;oH1sg9b%$sb"-#\HaDd,m?@IRk[;aG;=a^ee<)>S[ID+CflA'Zr]2oO8t.U2d',V`8Id[@!uRI6EW3$SXX.^28W%')!gG.KC<3roXkGJ-ZZQ%/95`d@!SHED$Jl56Hu*C&/CX4L,2V&^nE+E!>tV@_82Om(W%,uXdBJC%L-C+J(\lm5RCaV%C@(p4ke#EN>S%(HkDVb^)<LC+;$r.%5tUt\',(*H>WnL.NX-?Q^se'AD8jg\1a!Kbe.lb/51BdA':9n9:PWhXM%8,_&ilLCguoKZ6]Qi_(O3_7Sr7aLil,rRM+acNI+TS6%C4U+jdL>SjlKfF>FUX&!RU@r,O?pmf/?b,5K9MYX84LCHb?'t1T3UJIBuZs95ieje73_D<,\Ege$NN0[Es3gtN?[](CC2:;IJh)5%3#k=?kg@gjgW_.Y^^e.b_+[rk1dS-<,3V?$MEVIrk\t"M@53r'YbbaQ2bA=K2ZVZ"<_3W,_,WIl$R%(R,>]u4fijaDR4Sh/p@``c%*\`;I_%H0@oITuPjrQ8bS:tj3=n*apQqQYp8%;n66L,g`GYMR%\u;hre60<C.KZmobYT<O.+lXX"LePNH<6G&h)qF>b_RkDA_?9S%nN3C]ES+\^:`V)T3CH!$MM\uG@HplU")eNVkZJtA^&j!fW8qoR2U:4ToFs:(WD\3'r/I)E@ImS@3$>g7rgO1uK^]]r61Tpk#*^U-%bOGPjYZ4f2"$I)p[*qVWIc6O'b"e%#e[bD#-e*h.*it7GV[RK0'#IN-(h`J.J93$?)s#)>h_O57Nc'aV"G2XD"MeID(2SAlnF-lt%,Fk&8?:.2_<dY`Qo;N)K9*(Q_-@Iobc9c'(4p0LjI&]HmD#]pNf40GPDN#_^We(D$_6?p+=rMDq;Q1G?nmGl#;o!>p,d8Kj<,bH\%5eo8t:36!!FX]LQI@/tH%nLZ5)=K0Vfb$m\WV?3&IF1RpJJWj_^rqT07u.ooKha<-MP2`8&)TOu."[*X&Hu;<,92u-mR))*5YsG^%7L0pYk`Aif6]*Rr<0huPN)aq8Mq!N8"Y!o%fi.AZemNeBfcZAQ&g`<gXjKF*+a8iJ8#XZIZ93F@&J+hjYpS?E/h#)CO]Klpj?giu%/)?]G3D<EaLbcc!e?RSW5kornB`'YBXsJ!HR0O*$YDiMcM#0O7"sqiS0*B*]4:TAs!+3M^e/5G1_E98b1tXA3ib.J(Q,uT5H45?&%@6ce*6-)S1j9Pdr6_H4`b3$:-ED@q=#ScDZ"0hl_REFS!UC=P#PYu+\1VbcF#W5S8CRH5p!+U)-$]e(S+;EF?:jlFT*4#;SkM3I,%Cu_`R!MX-;c3nkLYb!M,1djle%mDD9k$UtC6mVi(T`]@P(_C;VDh;d:!C$\!O6iQ_,8>JtT1oB]A]Q]a/4b<Ab:6&u"=Uuq9F2#J%L.331.jQDM/HX[`?AO-arB1Gd]sjTN_.*J'%t,`Gg=X",p@YUBJ)3/0p?\3fO5IYGp=7oQG]p3`"6\D&S#_lE"h4]`)=X&5V/jo"%lGk^qne@7+;.K]\Sh-J)Op:+N^]GZ%1QB)tBEV]8$/Sm]!2Z9Z#n/A2),c#g)bll&kYFh2R$,Vn;FD.jVu2.OSrM^98Qbkcs4(B1%gs\1l*nn.&r>mKW+9XA.1T647&:kWQ'Y?[Z-./*Us+CsqHM.Y*`Bg'R7M'BtRF'=C&VB?NW`J2(5S6N]"K%8J3_$P&?'*\!)mr'%%m?rjQ'_=+l@6(!rT`BF(D;PVHH7%K.ao[6\LG&&?;M*god&NmRaBeYsOYRoOD!DRBNb!`1M;p1H.7$$QZu9MHBug?3\<-(`68;Fm%+bm3r]X;EMDs9@u*-<TBT>SkeJf1j>',mIe0NG1^%QZdNTc,*R8"GQGBnVZjm!q,oiE;s)i-6<`*e%j83`qmJ@<H^]Ku<OT,k]/I%)SfNQ+aM3d)]MXa,VGI<i$;5.'T`Wr"r=:b-*k^3CfEJpMplJnC/[0uX@uW,EKc,2+JGV?Tb"-[3G#G4J8[&Z-QA)R7RWN8_[@"@%W'DP%-DhrP4>P2UP[\$(EhNj$JeN]Y%CN;VbQd^Y6GJV#1cF<A7XQ9r":,lc*P,:0ZV^bt+Tg<0SuL58R/eX%97dU`B5[habY^kK%.[NFmWOF@!,Z=oPCV%*W[:omY6.rD,D0cnV^kZXS+`7:Y6+(uGC)45>fOul>3f/]Ea9It5bD]7RolF_[Ob@g7,TI1HaK/Y?dNTKa%l.At]iS[_*!Z,!Rb46`Y'1Q*/Z4XCA0Y>PONGMRU5M8>[d3,7WSX(lU4>E[O_N[g"PhHi$.U[M)bHe9)L_3e.!CI9/Ba!DEg*XCs%R:"K2BHVOb/tc^_@-.r`!9e?g(BH2B^7+^#1Ec2;8O57<k<i7G@Kb^b2LIeI!ucf[8-K5-&l9853WQ6$>!b*Y8o5KZ=\(dE74(n;%XrG2/7hZ3F![s]V#,P?9=X8V'.n#oZ1EL1(L!u1bGQ\Su[Qs<f#(d`sjI'$-s/MbM!KD]L&2oaR<Q(hNNRfGnn8D"-.stq7j8qY!%r$:>?NDF8CISljCRF%%eQ"?.+"JQj9eqfEM_::Xnnf1qi+0Ybp)t^"djO!$,!oWOPJJqC\Bf:P:\cGSToP&kiBRma<qq^cuGrJqA%7,&WE>4:j@0p+%9?7LQe1%14`UIH!2MtBY\(g9rJ5^HtJ:1,5%0UgM%V-h4qCu0o^C%04l[6]gf@pPI<9o'?oFI-\J"(Lshcuo4L%%q\=`U!hu_26)6W`lY&*h3*"h!<*G*@)pj(OTBukH95Ue3AYni*>4$cF`OTmcPaQeLiJ3h7]I=<PLsGc,U-QYJo+N_;GeD](ltC6%O%9Ft-_1Z:cQ`@q$ORu>#TWpg'+/]r+I+I$"41QJ&3`B7Lu;o@.WNNcgS-ADaT8DBQ(sJ1!Gb==C)34;KS6RsitQW04ElV2;t=,2%--rqN8Qk2VU$N4*<h_P[ll0>q=`/cYJcts=B,$@508qS)/NP@\M$p<q]S/IfC(Vq`%L!nH/2R?/4WnT&bf5bu>#d$bJuo)'pTAn#%fF@NqTJrg7mp-)c(j;gtN\E?cTTqCp25Qs&eTk"=$.7!gmu;'`R,A0CX4[fLF&g>Hi(URef+sWTM=O$M37"=03B`4Dc_S@OU1Ro%%l(QggMPPBlni-tskl_IZ";YYWd9MY7c4_>^WEod?YR!sqLqWJ7Xp[s2EP?6fdHLeE3CNLl[%g5D`\H0lFX`EcE0^f`n!HGCLGI17%e3dYV3Y\krV9(0KN<o\N=E5?j"tZC0ZGHs2,mfsm_WV+9r04_oGdhCDhPjZd:JiU)+fa0$_)9_3@oXRE$utR-WW7dd*1AUL_\A?7%P7_U3V%@s*.I9rA"t_RaK!&5L%]:^K3NQ"g2IDb7!L0"%M%VX6WEBg>,_e'H\'-6A>ps"-OfS[<1/3+m)2$I9/IN9=qB]ZCKr-o[%+['crjCb8QpnT/U#<4j+=0X5Ld)2Qm`&FF5R!@\)RbQbpDAb1Ucj7D,dUBH__8N/!^_+E=g@[Y.RnCbYoQIegV2kpJ]dlIW'C>rL%0Np8CN3d7'1MT"Dnr.`Z80C%<]O@N`i7/<hRmV/fU,8Q77k"ghF\<^+UOiMW(<Ad,_boB#"Bi\lOq7YQ6Uq`gU<^#Ifbe0NeS$YA%#!d$pahc-sK"R#9W6c)(0RL5G1iC#UAPcK?L7UgV%'^IFUI<"n/EIbS%[N-B&FF)NP_CP/[k4VPB?"Bg1!L8D[9>If^D/!=QHP,k%'pMUrnfb^81Qot'HV$Uo\61L?S3NNgUs$[B@+CSVAdZ5olP(WgHQ9#F\Ps,7&.sO-<H>#D4H$BF$Hj&U]*#\P`<2C\NT=3E!Hs))%W<9l6m!0CZ$@"/&,@E'QLiQ<@K?c#cR%b:BTJb'g#-A/&;LDKN^tL"5!%C'oSskN)+=;e!KX3r6\Jk^P"#25JgA<qU%U`+J8Ws?t%'Mp6[5sYkQZ8']q6?Gf&".DKMN/=ZmKNCAMCt4W>m#r%"?O]O993!>0*DiKcX_[?6<9@S?/X7(f%<*T-e"d$6e$W"F]*(Vm>Z%q`%2p+%SS:ih1WfDfCeq(im;I;nh<aK#:&f@H"en`/Mif+EjS&sm5-k4RsC:UOLciLlnJHf?mn4/C[3[hnR>.ZKO+>Dal%Ob(%(^4(N%-n\\!*_/'@+^hcS"/W9l'&+;#qIgRr`mq5fVK)H#N)pRHNYE3Y6!Q<OhkA<h=\U6<JJ(eZ;XGTrTVjkU.9DL/4I!Zm2"D!Z;S+:3%7@"dAio"VT1".$deTo#<A3Dj'(<d>$hB@&$bR\q1<7GT\%:a,-GRB4B6P=1A,^M3KlGn"[XVNs8!6V@47*l4a!Gns,GfZ;\D\,YQ%U*SlFZ&DF9=V0Pa-^J\2EZCO5'JDX$.MoKEFCDU7rXbhILfLG-`Qk/L#PLi.&(W;mC:2$JOUSF=mBbdelWZ[LZFoYgQm9_q7nO`F%6=PKYP=n@GF&slW,,$Tf!ag5\b%6:])Wd>G-K]Cc'gcAq0(eUGZbjq^Co7DH8]@s`FWqYPP%b@L\67gI[30_D21sAd@#&+Y8S+uf%Nrh8!mohbcZq`X;`UdqQnK6nJPQ0kQBKGPp;G"?S+;S&h)7Y?NU*`sG7,\,h/G(;JBg>D;i$IoZ#ji3j#:0U&-*1`Z$4A$%dW3jn%#XU/@QGMCu\nBl(Ou5SPTN!+oW:Hcq394%4jn%?5b.cqMp#s!6l)c8^<%JBr&AkRq8\h"1&F6Zk@:?8<A<@FG$-bFi]oEZq7fBkp%SepNp8eW:9N@7*W[RAWDPu!_Cb*O;u*R-G)4I1ME%p$'A'nNIuS<eFW.gZj`Dj8HI=RZYuB#c-H9q-ams!2q7YUo)_n:"Zs1s?Jb%^G,ti*1,6f-"<*TekfhT;l"#94[f<3#VmQ;-#,mLPu;o\ld3J?@0Tu["Be)g)2329\!`[^W"m2r:'D!=g0'G8^dfS#BYYd>6E?ZF%P,5'YH3[d8Cdh6KZl50c>jIa]CTT]L8%W0j6BHp6QkbZkY#Q0IX$ZO.kTPfEK;W_5EgeOu1aiir$"eU-k-W!?CW5!^/Ah7d]rC4m%A*O+HFsL"lgndZNnp@Z\@iD/cd'>&SMCl]IcBM5(Pi5R_?O\k,Y!+]MW$VM*!c89t#lncS-;oh*m=p-][BZ/HJG7Ho7%m5<g24u*%A%9.tfhpsu@)5]*pj*\CPA*tr=[86`"ZN;UANE\7eIdM^#D0Icm%\2UR$Hs>(W#&=U3EIkCZLR5"f*V(YZY..FdF%COI=N#jYqP2%*MQPjcbs]YA;A/tJgUq=PQD`>THfA"WoP;5U.X-=)hB49?F/+qDTQ'Sl#`fh!pp%D#nIbp5DsJA&r,8HA2a:JTj@LO.j21d)cTDB%`mH4?8!puFfVhj8o!bDTJ/]Chcs==G]$_cQk7Cn]pidg[Aq6_,a"pO'+Cd]&nm"PH3%=g,i?X*9=\?%j#Qc4.)XId[MJ5qqgT1q^%%l6WMA%fq+8Z?7q9E[&?PbH_<30Yj/8d+*oR^R2S<4Yb+97qA]'E+\t<>RG9`<D:R(0d5K%9!O9"j;=+$WTH!8=I#@jL7a#E3hG?%93$NGF;c0?Ah3KqegUgcZdSeW:ngj))M3jVKUekhJ2"nue8/\I=Wb./H<l/&B,2)>TW$uTIM]u0R6(BM.nmf_hMnkh+(O:ZMm"?4%I+>/.`@QZ^(e8MdL'HTV#^u1nDMYt+UB)29'kt&r<EYQ4DH1-L.uV!JN@!TsQjVDf@J/Qu(d^_(?B)JV))TEL<$75&nS"48aZL*P%)4YFo&te;(dc_C:O>U=3Zgs1%g9X`u/?p$%=TFkYeUl)r(R4;YG6UY^pWV!@"3<eQeKK<jL^OlQ5j3f"[:iR!]qoCC(W2KT3,OQS%IS$Ji@PJ`T>6l:dTUMeFArmH&,HEFj7m;MuNRA)f6>%5RUG]$TCC2lEeY^7PL2)>2$Trps81W1p20JCR&4ApV!e?%3X[#fV3l<).%Ob-c=`]jqo4oe$+kFc=FC1&%m*0ri\1,lZV4(E[QlDUt$-L*H)TrA<VigFSdW#"R$$m.,Z*u8?Qr"E]seK30F*!uoeb=[rO5VP=;%O0!O.XT@VjC-AY5MkH4:/:4!m6Y@/eN%I\)oLOR'Q6Ii16*Yt[KB\GrRU/q*mZZj48$"$r?GK_jd&S:f$;:?AP._HB)&8>`h5e=d%_mcn:#!S'`8&^7K53SDRMp-Tg%e5?M6"W*S4J?;W"Qs;'0]fPO&6e=;;P#^tfnE=o1"&_s,=bX!1]3GIOeP=Q$d[S+<e<i/0oKFD%NMc:O3((#`]MJoh2jiS%0&8O?JV\P.*>F>TJ;[keR@`3%2-Eqm8(Dnn;$-t3F!\S4`)_^p[>M[5_B!qmi4@T2"DB`n3$*t]G@HE@%.M4UB)9g`f%9Wu#k7]^eiur]0@K*!W(2]&$(9@X[oaErK7-uo(q(a3DKOD#B%>00@iG!\U>F^N)+>36TWZ3_20?T7#4DFr0G,,F#%8J/JT9Y[>]e'#Q=k4qe/%q%4?/NZ!$+LO"fnD.ZDYV7/`$!m4u">7)M<osQteO)dJE0aQ6Q6DIoOF1-[>aD,hW412ubKALI;RlK&%<iG]OYnLiO6E/:'(oMX`$54Mn9&MFj&9\_;^oYKbZa_D$J^klgA9pB=]1UY^n)No]X;7O@6Q1,==(&"D7:Z-]15cIlOD7.,^C'9V%&L-.LK-,Z,>S*E_##kd,X"lf4>SIbk"XI&(,BT0Q5gi)b^&T6H=40O6%j#^i-<&i=U^t]89EQI'KLIFL1UXj!kVla)7Hr]`7BN9[%<4s^SUtW)@&\q^LMqsls.;(eBkZ3RC1qk@c)]b,,q52A.(j(OE4labE<gdT[F1YNn-FJF*[?%/$3=2[P]+.;,VNk3+2ckTo;\CF=%N^3KWaD0F"l@XE.A9Km^e&(dS$QB-h)+kg2T330=";YSLTpSag(t%:7%/:O>bM)Rs?/)IepkUl@'Wk6K4Y.kpk`\qeeM.=A"e\+O%b)D$%'kJdb_V*P60DMV<FM9g,i*$eiYBhM];ibcd\CF9Y`YG#[."@*20ZW5r:@J7GeBG$'!t'^Ij;f9C<253a^9-D,=_ZlP7W<#2%R-(%62*2AT<J2^;+UZC8f59I^Gh%pnc.dK+$JZPL&NHi0Z\0Qm=\*k5+s/mn_3%ilQ:2Ka,Xr7YUnLq[[&4SB-RD8kUJ]p(E<M8Z%>Hu8=:N$u?M2>SmqB+Lp#mJlsENhPPQ$fs_2%o+O7GOW9-q%LX2Q]-_%:4rdd*B9Wad0"u)H=*q8/"qC?uAkMM0ZZu<^8-nL(NB_%faV(]Pt^-MKk45YhGm8mn5^1AB2hQTRGSG;!6g6M$>X.69o*Li%tb-#<0B\3ZaNpCW_jn`WHUqb9O5N@+)tc<)IiUU(l$75,tN)f%bc?O$@hQP_nsOaDYi;f@.O&W7WC902!_61$`/fWF_ih"8b-%seObTPRlR]ipdicI,9T%R^S?5r'&g=Uu!!Arq;eGY4Srubu<)ACt%fs)Eqdb].t,6(^U9I5HR]6*DmSqL=R@'d^VA/8<VP':@%*$ar#,3s$ZA(O+/';fOZ+Sg0lBO@nS49@Xr.(cjJ8,ugP'>\8`Q`(dH%jF>K(:>dq5=K%"_e$2Fp-.]S;fPM'5"b<(Fbg9KD'iGoAXt7a*PoXdJ&Rt5\IT*$u"l@D<,6[ZrGh#qp`1m]%C.50@nL2PYJgV2o%)]8oIYbi'fEjoM)Kjnm]`?hTGfI&X9EE'_@`Cnbn_Z8F)K<"5u)G\=$&qMHjP*MJFjW,X,Y]7DHl4LufH)qel:P6LV@r0RkdI3S6%f\3G5]i4T.=H*dP40Vop=<#hVjTMM&TtGM+Q)):;c31[qobfmbBqgJ&I=UoO2jM(<mZX&>el6XKTn]qOE[/p2lT25,(=arq+)h-m%.N-+'I=f@'d>TL1Sss37O6*E\1*UBnYS'Nkc/;]rRFb/X'"ht]dSWf*$==-p__iODS"UEoAgAQ$&bl.s4Keg+#k2IVdIQC#Gk)!E%Q-t]a&(snh:I;=ao]^l?6n//O,ToYg\-8<+-.0.6VMc3X(\lQ[77T@t7e!OCUC66>e(-9]Q4TTTj)S'S2Lp+:+>@h<=BVt]0TMI<%^'X'PGC,(\.iPf]f>U_-M*S:I+"Sl!HRGm2k#Z1.&e8WEQuFer^Ar@eZR'52+?M$?>mD/b&u=ag/j]ZehGo(4'NcW^6;uBg0Mhr]%Jh0OFLZB1+F]t$29gS(Y\haVRasBj(5*G>uNPr3KfuVXq&/hrd8fNuD&<0MV6dXQPj=rt7Amup#%AtHW$!C`=ii^*TUi`B1MG)->%3&/Z1)^E2Bf>B+=fLqrc.$R^V.)bTl!JYBLk[l<W(hn/OJ5id7:*:.;g5qWDhpANA0SPbpi)#&8?If=$Nqju$;qJiP0SR.H'Qo(>%;!K=E3Oj(Y7?A4R.!E]84HRNb,Fn<9.8dsRmiKr7gH-8EAM9X:dK\@\dObHpdXFF^R]<WQW1JOj:.2(hJ4eSWOK]MQK[$KX]XT99%lRG:,p^&W*7[)s6OtTAYct4g69c@\AHKWibe]P:^e<hrM1iL_Q&i2*@Zn:s>R.J_-64R<bKKh#VDX5[NfP.3)OT6E5g!q_K77ae=%%F`m_P%LdK$Pt2G_YbC(_GHH8H^c?mpc%Q[q;/sP3(eOcNZ;pdSA;j7T8_Rd`%l,tirr7%AfN?PbG<NITl,YM"OFZZ#3#/-1rN_c%1=[dMhN4NSen,6O<4D=K0,[Ru0BYDf0X+^T,hk-EL;6t!F&JYR17#.J+7M[n<7[%+%]:el1KgtX,*R7Ea6H)!S=m<(n^]>nmN&m5%#quTL-ZD,_*->kYF9/8Bp*(28j=QuN.NLj30OIjt.a*d:'[g0oOFoGA*adL_cgKA=mVlQuP1L%dkS,F+;R9_`C"I*e/@EP4>q`89%R2B'*%`IZ+*1+,7-'"G/#VS^iZOeYu3K5T]-Hh-!En1FL=olJ9`bMI.b+BK.$Zo^&&=+,$h*FU,!.3sf1a\]>q>XSgU<FY=)21KK%?No".$ikf]+p@[@9bcGB11qf0U2K]Wg5q3J\sV[Q&]ojuCNG]W]uiRG^6+D42d.?R)f339&&HVuAHpCBYLiq`2U-Nra:WR(&Z>ag%mN@l1WG;)3;$T<+TbatH6itb\3[I@3F.$ghl7(uA/65LddI6;c8E\5oGc(7R)Fl3!%q=Ub\Hihpc-E5EFIfA)dR=?*jL,bKKou#1%>Nh5f$3d8_6HLd9pnTqcS('FV.6u*&cJDF<!Ye\Ii5h/d"3iIoRZ.Np\U'O+eYo_'Q$7a^:K:so&IbB76X!EB['&E_7EO\620rJm%A>Xd/@Sk8%I+&&IrS"n`X-']8Z+Q"J/a\`!QBeoaWcqldS8+\f%bbM9`]+P>M07!]p1AYWZ=Zi#F&K*@Qk+?Z-0qY:U)C/S>ePXD%"?=I#Qo_qL$P&m<NPtHA;=NG"qIYpH36>EbM7:,0"&+b+,;#Vq<F/i&,HmcrgGD!6f+D\J;8F"0dTTG+BuMt4?CRXn!grMP1D;@o%o]gQYC7>Ygat8RI[2<PpQHU/4g);=O]GFdZIICY\#P2BL6+"h8F<.L.!Bl$UfV)7H'P9fu60!Zd!$ZILP%'`]CYgCCk].TZF`%AT%F_qs/C%QOkj`do-Rt._7W@553^R-*qo]K\J`XBk<W19))\6"<3C<R;0kH<bJf<X\4TMFD3I0MoM/CL)55"55'>#/OYSZh'B=14#c%'LLBI3@iCs0c+p6.Pp^po.K?TffA.B;U(rY`qR&Nb/KVcPQ.fL-M"]S4*KeO%g(=VK!PugB-,MDfBVFUB'jo:nrL%fJ1Ga7.JBfJ%B*C6M,(5&\;=_(Un<B9_XUnaQAhlP3h6C[2Rs1/NRp4NAdCr`f75CbB4E57&"lRg\V-`jGDdEd!2'VY;obQ/K+hT]Z"ueZ7EFnQP%n!CYLr0/'_#_el49t31+5cDDNeRjr]XZO:dEVRg[C_,G@DsUX1Lsci2TQ7=ao6beLdTebD+X"(q*-cY;%I97*j2#34VW+m_OLReW%PDSWCe+D0F\"0=tc9&4u,Kj/"-Q<&e.&Bk!!?p.L&lZ/H;_HCfE`#lDI7G^->1I3M`1V4(f'R^CoDTbsm:;+\4Y(q(g7]7&ZL!8X%Co=;=(5s4pDI_0r$%Sc?#4!^aH*,BQY,L]@U4OP_=;h6]#q%;Q9:EZm[95g&H(1V"B+B$&QIfU[=#KNkR"DKEQlZ!jY>X_Td-WT`%.2QH.lDGG^0;5jmXl_(4e6*?O$&UE@FmD';TJ7YKC>53X.8m$$f742O-!LimIFu];QAC7f;H6-0&Ji25+e2C4VMiNCSTVag0,8]@%H331U8>.jHJj>2;$m(=lfdJ_0T^^92k<\jHOi!RRfF5$>V&`*]b?K<X67U2b7p30uN&4o%]L9r_jK+.H4(gSir'A<!M0:R8nTJ-%%N<oY2L:6BZG?prYoQ7!X-%(WW:"'7fFN?$Y,UtG^qbgLKag2Aq(j)+XiLC>fOW52`bU6r1S[^g!h==DC_rJc6[]E7N:bTjL'sP&i%-/N[5R,3L+efI,&cH^[<9djsCJD:mS9ET6Q"WkXg@QU)*#ipmu*Ns`:FZ":ikgkT)=F6,)/lmUYe%75LJ2C\F.X5_3dg\`#/A'fu%@)TG_amu#W\=ea#U=Cm[#l3I^oiC4WG?L1Skk6HgE#V2AIDOH-"dM,TN<T,MI2O(j!Lspb6'6TPRF#l3&6+3,*S6%tH-*s#5N@XG%E5_q=,O0HZ7OZXHKcRDjE1ppGF2m0ZJ:3R2QCqA-q"uJ$=CH.$5HQH1[(NB3P&B^RDec@A\,$/8&Q<%2?:0k,3=ko(Mg4kVHn;A#%P'1s*gFVT^EE-;b8-6*n);S:9M%6.^j,'>h[pV!:<5OQ18/U^>g:95I=:V?E;n>(uPk[pML7%KR1t]?CosG\3hlbO#cT"MUq*dmL%(9Q^?#?"b!3:b9*@)88F0HkOSXPp0`_#+&"2$BE8BV?Pebe:@E"PNp'r2Opp^)4Wq^UAB;RTR6l7k\;4:OSc;]RY3pC:JoSmE+[8%O,uWkZOpHq'i<qR<kJT'-S<Q.pr&+IZFD\2SOBVp%3)Y>HWo:m#f`sbbu:i6B30hC2,`"SYOd,d&91]c!@6lF^i1'iiRiC9"qu$q%4hQgpnWf?*oMCij6E7D0+373s>J/2^JoZBS!m.*<BLl=.Fu+lukf=-,d]A;R?lpMj,3Pe+$1d[qL1aEiOE^fPo6d[C7-VZB/PmC;%'oUK[ISnLn.9uO/W#-9(ns[Qf#p*:_</n_<X2P,B'\K8E_YbHckuB)E=Du4H'3OC/D(q3[<_LCY%W;2,-]X/lPtX*I5^6dV<h<7Y%AoPQRYXCqkd:-.'[:RmlF$bX5o*1"RDKRfE/=i-uC?j`m&OL+&C9%BPINnq2c;tsSh91B19cG!9s)]@-8Z9L']&;.$@?p2YFuAKQ%./i;qMlL`Zd9!`T-uoe3@#.bRd*G*"UkqfP``T/gkmMdi-c.gUbR_iE4/k:q1trVAf$*-XNJI!@0TTO!dg`.Vj!7.77^`H^MQ23B%4Sl#SjhtJ&DDj'-INV5ica(?!!X!,KG#/;HFVprh>+UFX($"ha+OA33Muk.o-X,djn3n!=WRPJiXU92k@TUQ(,M@mPkltN`S%K"R%9Al-B._eo<KRfEuHr9+O/B/q^'"h3]KXP"t!d)fsiDS5OeAti:@0p)HZ?\P)Of-g2&=?bS'$XAedOa6JHk$NfZtXXhZl-O<1cL+W%9.Vje)J_/q,rFqjYZrO]ZL'F:^R9Afl68Q>!l\B$[l-DS,B_\.SO%!1k#KuGbpmdFWD/%q5_ik>f5*B3_k2TAD^u#/JReqXo[tY_%65(RUG<uEF&B@M)Jd$p^:Y?XH,"+[Oa:!D,$S7R^]mW`p3mT):B\u4@J2<VRF\Dg+<=;+ni.>[ll6h+#P#ug0PNS;Qg0*(!dJI77%E7tW/%O*4,M=:q+crBA#H%R[2>%\e8=t,!LG'P2MdA+@l:LeG]HZ+(a"H-sjKnA3^8'@Wq<f3IC6"UYP2Ap(M-OGG?"LDro_N]iX%`^/9).`o#a.jOJ64#-%E>CgSLUW?pF$7pu^=:R`g_g_o89i.*^EX<"&_$EB6*:%(cZJZUIOb5;GgSmn[&PPYplk19L5,Fq*/]D+,%fd<TG(06eVW/Q#18\g^uFE,_RYmTa2dU3-B)3!7VfgtTg,I&f2X[urI,S4`_h<&=n!%k<U&[Geg[0(XU6Erut*mSS5]aY=(oHKAp%(0iK/$7D9,>DbNO%M46[-0d%&Uje\k%KZ]SKO#C>m6&r1OH87qduN$\B9mrT)laFP<CoFnPMl4JJ_C.dCX!.AEq=:d1>/bMVjLnR%JDc,Silu_Jc'FaE%"crs7!]9'e.adt/.81A_6#-\m8O3K!j:U0M4iEE.[l(,*Loem_=),=j37JDbM8Id;._\9XD<S^+h"YV6l[o]%,T(ER(j<:n;(rlN5k%+H#?N`97mpcQB'1/%F5#N/GBLo#3#8-fk!86U"-T\?YV6*N;^>5m!2!K;?]LdZR!q?ol<Flg"NFfuJ4Tec%,^$2u?tZ&]5tem>-IeT$9ooJgC?KS-,Z]g-%-<IN5WV>BIl`TS_P'S1RQJr4KRV&lL;n!\ZERNc0@s7oU'-XZY0lIP$;T&!"N(^B%_.4QdreGWO$NW'L_Q/3<8'W]mJ-[EQg*C33Co&!Zf2pr0.dLjm4C1uG\g'.C2b7laIfp&<<>HN)bQ<?QCM>s0e;gBQa.+3`Icftb%Y'k_I"3?;c6c9GjI^[9Y+pYaJe0FE5pVShk4W7E1LNOph-DN1E@-NebB4sT;+i73RK!>;U7lR]*C-P`-d4Y?$j%3^UZ!W+>do?VU%R>2sOQsKEnWZ)T+-".@<p7em:L(9U")U"@*^oM!PkTDl(Zdi"hpRtKDJ6T*?X%'aWJBES!Hn7>K,C+m]5Yk%LGo\9&_Za(q6]%-S%FPT=*.o.R,])nU^%j[lQ!Boa0&0$l,WA!N2:=?A8H22S+d8[u]8^&B?h/nW!V5@j_-U<lY5$3`^"gX=Q;OMU\]>07K[-?HAYXaL_%bL2[`Wg?)tlp:W"%mu0IbNV?8a(di9XsPTF)&Q)c\5>Tr5R@d8YVmo$;h]6Be^R[M,FSlr<YWO+"P)5,?nf7^9O4)ej:LHD:q[De%.470(H,]&85Gkkp@%];S];c>i1Y-7J1c`o#j(28WlMRB<&O%:;LO<pW4qZeDW[FqVBXCEY1"SN[/*VN!^oGbg>q0\8?IVFTHPG\G%]<nTbP\GNUl!S]HElIOS,SV#fN,c+t4I"u;(R6PJ8mr%KhedNN*9h>ZC`Zb5:iF1oI9$MZ%=qo(&=J32g(lbT04IB1@#_7^A.7dB%7`CV']LWa6F0$$Yc=Z-'N@YdLb83UD4GN*Zn;t^bSMK6W,A!n-X^fp1!1F0f_V&<@43=>C=b$O4RN'X-0B+36cI]"Q`bP?tNTUDF%6Z#O/OQ+N,F.s5/"H5!eY_/%-T8j(L'YpLnXc8t'`PU>ui8O=W$-;T[8m*J_<bm@Lj"/Ep2=es`c,')V&i#S"T=<`[lWA-9Mto12%*.1!R0!7+Y9Nro)fff]bGsEgQ=mp;9TUrZ#=90-q.rX[Xaek,X;-A6!gp!(&oB@\1pt30Bl6XU,_i<g&b=U&2lE\?oB?2M6a6-QN%OF78kpaA5R7q\O:j;2_;]*51f*!H*g+c,DuCrB_Zl1Nu9!$<'%--?!t1QblEcWZLU[@Jtf]7G(3Z,"/DjX$8f!&G\6nt(r-12^U\%#=@99)_:lWJ3)er5&[CcP:af:;<FSB-8oA3XD67mQA#p4o`V1nS,3VP$C@h%l_DFAlb2_R"kj7RR6Y:lRFCQJ)dL;/#1-X8N2Hmk%Rg>unBs'3D%\S`*[6gBV!3OHG(2u1I1Yp<"-r79iX/XYP9O_/nU,ne1!8e/hjJi$1Gm8K$/AL-.EraLaE<dY?A`>NO<Bfdb4/""?%_R>jI$?B?.ip^>8cI!b;WU\ggHW+K5ce>8RR7/qODZcO$L,_G".\d8s+:B[-0FMp)AdrM7?MimW+KGP58(O=fqEhlJ^Uk[?d@8p"%&MtnT2,+Ct*K-"RR=7.#q;?bq2GtgA&H'%_%<X7H:Na(-@>:^gT<U(d).1P'"+c!ESE;V`o>7L7A\JAq7Ymb'3.Rr^AlpG@+?(!l%TW`d_D7o([)&hujSQ?Dm0FOsgR_$ap7a%k/daH/#QGe''E^<h/AQ^Z$q2BSF%qsJp@DL&E3#Z6Qi:f(;1O5-`5(i,2:K[c<lQ`R?%bGt-=%!&>m\]3O-MOefdG>\PEgt?S=<Rj>&WfLlqEDfbn1J<MZ?MRGi$Z_*4BQ\AgBQf4L+g\L"3B2@8ek@H2Z=5R,I[<HS1(dZ,%a.2\AMCD7<e[n",lA"'W"He>"gFVPjL$sTh,EPAl9i$^>C17si#N'-P`?HZfVIX6\rG8<-"#_o!^K]V7P.oWM=I^8ODR2W0B:3Vm%-R5FD[\44'1j8;/pC\pOW0qjHG1<E&?YA8&3dgLp)PN&JR'4`nRq=OoD:\*RA2i,:BWKkr9'!$91%Q0MW_;eojat<Q=mLZ9VUX&>%\&%`%a3>epfP%=`$okXW&s[F\ikhPF&F>uN@GNY/NXkJ;ejj.3g?FQ+d2VdIb6OUr]o/"NepCpr^cAaU<WfY2^C*.b.0pH8dTGXh%4UW(X\NTofPU$tV'a<ePpoeG"'Y?u!"_7+\7_;Ys[61QEK^7H!8fK*pg$n=.CPgN/aW^gHYWg[o961#R-72MXV.6Od\j">G&E11Z%ArjuD$)/D)1&4E"[%JUGRBpTF]>4#!>>D=<!r"7Jaee$9(FFW#99EgdPdo][p`3?+$D6(3_D6u'!qMH5E/SkH^$*:'`ngJp*13g!%l)[(-5oPHH"cZ(!V@09.#J*g0@geJ,P)uLk=?d\IP,6'\Jf6S"K0HHXX_)Hk]KQM(hRm#t\r`Y/>Y:CJPeG?Lb`Fj/PmiS@()GGS%eS5JNl<9S4c[(NUh+n@Y;iOiopiZDTm)V.4*m9nUR-"0r+F%g9UR-7"\l=!X'lP:'/!WR\DP$E!Js)BLbFD'h[[Cj?ChDg\no!-p%6^gi:/o/<,lM$O,*2HY<<!5o?r0UEoW_=e?'A,UIiZkZ:8mSQnR^'m4HIo=,ao1$f8;8g0Z@*TIVe./o<dZ(?3G@gc?jlm;raLR>%\r*"21a9!Dgtdo7+D[u.K$nW.h(feD?t+hG4HG2.)4R`\kJFkV3iBOE]F%AdATMi7:n=="7o8%JDdLo0\<m\t';gX1;5lXbk96e`%@F_BUXLJ>qp?!`p<)J&-CF?dAo\J'.j]S)ubD[d?3%p08II.oGpK>dW3Di*$F]tU1DL%HfX7PqIg4r=hQ:ZqE[(alH1N=lH]EQl+%o1C_C319X0>#4s/U0>D:TSG]9<0p4@7,KSE0qX^c48&gM'"E^3C/<(WTJ71U/B;hk6b^fN5fc-lY4,l=]Loi05rNoko.I?9e4Krr%McJ":[gRlJP#-GB3KnE)\?LGK'uhoh%auSVACm"(MPb2kP96(O`X&&9'8tU=7u:ZGTWF8Obemrl%MN0KPhSgKD)4%,p=NG'(:II)%#]:(%O"+)->I*d&0b)[533nYEXIjEf977T&k:H_WdchCEOG_S[8lF``ZS\qiWg-CR_bBL_3l:t,Y0'#qK&?b*SnCPnm:%MQBkK9S%/SUNd'dZ.K_P6/0!.V?9R.V#T:Xri'P2ZWVojRj.nr$?]!0Y?d$l0RRRM>9H@c-%JeJba$;.U^b9K&5Vp:t_hJs)TA6D;b!6^so@%$OJ!,3K_[LTr>7h9<f$Y6f25!6$86^mcCKQ&1Mouj(hJ!]9VV^01@`9PN(-ZVsE%D(,./L(kPjcYG.bW$&Jqjo?/KfaVgga?8ZEK%:_6:*d33K@0n[2N_@ZhMOu&,mlPKD,Lj@8mJXe/A.?Us!b*_cp:"W2V<\Ge)GcUOQmZ;l)IEn#&.L^ohb!!1('d8Q30Zd"#UY=I)%9%1@Gr1-IQ2D('*Md@*<A/i?/X#G4#aLZ8q_IoR08P7VDF2$n^Uh8)52$tnP-uiB`f5/*i^!>#6CEk\`blV6mlf;ePT%!q:eG*.4%(SrVVTktp<S"05pks_Glq6_bOAQit#QFF#7,;5)>D^Y![YAV(/@1&5fE]+P>)P(I8Z&_XF+-V0qYD-'qcIQeJJ9dN3<U@3XrIo(q%:+1H`QQ0%!^+;]45jrRH6n#YGeHUeV:S+SpX9I@V(/"l_G0F!;*0tG@i0dVTRq;&pHt),q(AR,'cWA$.1?8UlE$)DSCI*B.7So`"%]T\GFU>GLABU^F#p\BW&-)PEk`p1K:+=]sm,D+ciHV[@`_uZ>q!j<I,\p)*H<&r3'R%'XWqUmB9$be%YM5';^84$Dm2'6Y@''G!J%XrFS)P[k>ucSL2&IL%O0^(B%pV?-bJ^(BuXO1Zo>GsAI*IPlMn-W746kH%"-DC1EBO$n)DQ$SdJU:S8?>mU4@99J?FYQ4)u9d\4B%o#";nY1j^[.Q\k>ETY2Og`sn7#'N1@-m^8EW7lZ1(m\qCdIP5<8"(;/9.EGjK:KcfXrQr.l[o1QMga`Gc9("u20K$QF[`Zu?.t'l%HG[4h<(EsGL3=o&<@/P3!_I&4$6N@U[9<Ta8uS@+R8X!8dN((fRY?D/F;]4%]gtUWS=_2e.Xk\I?n..d]b^Q0FVPdm8Hma3UAG3W%B2BGUZGmpYUnY*-Q!$T%i>_lTSqCeRH43o"eXih`@b`]_7]d%aa6RlA?ot*]\oQ"t>f@"Q(2#dT?>U$A0V,il"i_S+X&n;YlT3Z,%5\,fOG8f>:lnE?"UfLZE<R'ei6CAoHZGtX8A:+Mq'"lX[H(bVHI&aUoCHiZuMj>h%*<Cd2X%gqV&dkQ@.l`8kYn1W7GCVM^%J)OO%7G)'Uf.G:bO0&/LedtcqI:iXHWC37&ThZSk)WbW\,pqQcHn>-488oPB:2_8G0!WL@%!7].0:&J-4,GYYY538^\[sE3dq=t]jNFTU%">l?ohIL?dXIC.Ib%1[Xir$Ga_F5VX&eTZ(?_RkT&q,j]*t]f-bp$0JBtQ?)=2csOYusd4TNkS3ZXq+=GfRKNk"&$&8m#!>]FC,K%,.ibnFdZ@B#qCV6cl#Es/AkHNAV8$T+ABq!&H]TG."p.IoQ)Q/(,Z'm[on89b=Fo&[,5UR.G;uC6$U4,%Oe6,H5Y79=PA(ugLd8.%Z21jE!iLR^1:9Vp;HS2O>-ej5Rfu2VN0=T.D_J(nP'J]Q(])+=6@t"f&oU\I5db?Y&aFVnNO&@e@=R.=*8&P7?sU`dQo,'So3sZ'%Q]7Q#kgM.V=Ia!)LptaD$@CB1'Z0ln[8Shp5dgK(:IXBN"i%EcWp(&qA$^>X@pMng8NI/j6q'-'7"GNlYOBRUR7L=8e#;d0@(*C=%Kk/B8F'eiICOgGA6oQR^(1%5A*#6>%b,e&ICaUKu16-'_MBE]`0CPDR]Y`trR##FXC,L44.fL[\7Xq)SP&H*MRuU?AD%<g/)4L&F%2ZX)Y(4aie6l3">l@#5?HB:3:DL%lBBQ@/.L!F.Q/cZ6O^YZal14FNE/FPGoKEs9!Xqg?:X2-78LY+=f6&$*/Y*=;.SVtoI6RIoi%s.eu+Q#8[Pjfg,J48^GI#i+XS]1g2+4G].DL?QN#@IjB)F/WD\+5eV^*!QhA?/HQIoh\qZQ!#B19oC^LW+=[m!$Uo:V[YC=,QB[6%NuHl(01u6UHT6,kZ'GZ3PkSY[Xq)HM</(/f_&SIKH/::Z9*$dpi0QMTD+;X=,NrT0K&oCLoWj6e9cHSBS'F,BoXOnO_gX%`O>C!;%qeffO2/<aX`p_#Gg`b.A*keYFl'<Bj'kIIYI@orCSb,CA7SLBK(nAD2XA4AAbYB`r\dNK/WbSK<F</eWC$6WJT?,@5QBNXaE9I,7%dHOa,#<-cuSJQdeVSd;YnS;_N]8HCs?Z*$eipW?pnqls1KU3M;Mem+^iM<H'@>MIWYKKoYO4jJ[#P0Xja:CpmfJ?t3A(>;$-1I'S%EJ6NDHJ_Uu8?uCO#oKD=nO"@3>&kJ(9f?:`[;oYW>q7]]`(E+tP*%3q-M_MrqB@3_enMI[A4J'aG)FYS,p<JNLeJB).d&FQNf95=%\pE,.q2+5))Om-$od$7`iO)+S)/m]/Gk"T_e/UeQM`WI1ct^Ht*5EL=Ht*M--m@)3\qX]obtOTNO1$J\j>HJ4PkQmrO4\9k":c`E%UbdR'#pGGQ-cl$h,6,\^.[L=[_e@%?c`kA:kL.XrHRjsTRn]mOp=ZW!H8t1h9@i53FBTFhgQZ\?'3e;9PA@^2Yjh,Q_QT[gjf3T^%;:;gQ;9eZuCui^WoYF^TG\#(*:7%X/[ZhW,O.,iZod1<`lBl/ASMQ2,,JaUY+%N"3(?O]>5lZFCg_g)$EPd*n8>sFsr^`HK2Y'oi%'%6N`Kba+-QCXVpA#nei+>)#KQ@1Lr)<&qc&bG2?6DcP@S0KF7d9m]1;`ejY@p-gAr)^f6d">CF]#(Q+a'3_E@lil-HW=G+S5#CU%ooubP9n?#&<X0A%Y$U3C@SInib]5g+d?":sS!'Pe@tXCo+Grh7KL%H.OA?j+-RAo!KgD,n@?@AYD32E:H<6Q83^j\idWHR=.<6-3%76(YApJL!LQElIAR,&/dEn0*]MC0G:Dkhg94RZoNUq\B49F41Kb:[&t0sjZ7D086]GMsLc]\D&Zq,QI<42pSdBgp"V?aN8]:)[OR%849BM=-kpoalL]V<&Z2QhABQc]D.Ci0$cCj,4bK@r4o)Pm)`i\Q54!KM?_2.1mW>`:6C`5mK)?%[#fKs*k4.Vga'Ti4$9Ni9^j.Z%>L$k5VI=`7W4SrEj\S^c4%N+mVt=2a^$jF^OAjK]aDS1CP8*"(V>mb4ECc4o\LD/)Vrq!AIJMT=?>i&2pA"N1f9XYP[P4TUP9G]:%.cF.1D(&jIopBr?_Y.8`3NgeBT0A"CRC(2n6XZA@\r"Kqq?qY8jPc!YBo/fG8oNEng5*<;]jLcM*Y0[C=mfS`nZ[^aP3aGfd=%)r%GI2J(UMVB,)/6n^P_D7A<FjB9=*e-00?ZQ:1+j89J^uft<%R&n`1<7=eJ^C"AlZQ`C*O@pEU7sldm1LkQ<UZJ'DJaoj(q.kL)HoR%)n<#RMZFk+Kp8=uk0ICW4"8R^p=LJ!9Qur38#dq9V&L!i1NU#\eS$IV8G%_@a`PaqW0Z/dWFB\5&M$Z?Q(TDZcKCH+q0!o\&%;<%%8k5hC-9mFW]::f3+l+b=bc5N&:,@A1Dn'sH>PLmZjtR7s[k60,7kmU7AMMKhb8-FYr,tG&E^+cl?af%uqP>&':k=T)Mmemq&.SDl%5%b;h0d%gM=LuO'&m@):cMiCAB_VL,\uEWZB;Rd3YP)nF#qj]:T!bSGLZ$BDg>21.E%?QpoUOtU]Cl'B#@c"Iik-+8K!'RB<V'gT%+TWT`Vn(a+Zmu].]V&671_$%jEbI'l!hS3PjH8etX@QCfk&.]1Itg4+SY"oO6G;>kf+=1)6lY!"*/C7cjPq@#!>c%/.[M72[1+LE%_#NJq:"\0E9JT;dpkuaad]sFQJNU25C6FdVKho%&`2:g.*dDF>feHEDAZtd7"JNpWN2t^!*nHM@E_Q6oUsn!nRWE^QFc4N,#u=1-%XSWq(+XVX`mT(QC*Nuti9T?HB:=hK(A8&^0j]kJN:fZ.0gGQFf!0Nga>Bb`u2ecGZ8:c^0c3@-JL4V[pGWJQE@es]ej(:96;(:O]%TiI/Q`:BuQAm.G&HreE&Z"DJ`afiN0@al)ZXr/$:,-6HopaGedL`njIFS<g%LJg^6Jpa#KKU@7:TqVu!Ti<K@;\I;XQ7%Amg,mOR%\%1R$bu4T'\+nR)plGIOYQ+'0s5Q%<go_49=C'c4#',\WO][iG2cU&OOBB!HW?PMY9hJ)o)%_7k?2+O0Jmad&]cS0@"77[ajT?5L%.)](L^tqR*U3/J`5fITg.*N)ZI.l'C[1oT\Rh5pf's<%2-0U!!n8S_S4,Oc4Ya2%oW.;]gGO63&jGfp2S5-rp'K)T/>8kA.@A#C\%!usaK8Mi_]:D/1$9:#h,PHQB+q4HF=f.B.0hcNi(qj2P"72B)qjh]N;"t>Bo),Df869pc=^A2A[+1>\LUSU4j_3F,RUmUjP,Zh=?%#Kqm"c8p>P'qu60h]k(74sp-OqmG-X"&aGD]<s?k?9-SQ,5!AB<X-RV9s&jddbFUV%,j;;fUL/dp#JQH;r:0o)NacJ+0]A=H4^HA%6g3g7V[CFdLup(-=m3OW1:K<hOA<I%P?r=!0Q;#9a()!,Tj42p#(]`emB^n@?iFqq^tlbRmpG4d4+_R7-$8Yt1bB]_V*G$TB0mm-%n<adt/hfsbc4EeNMr5=TAie^4Z<nA`X7;$p"#`N??k-2AX;;Dk!7h.gJjduar+Ni_^B0h-.OAN)VGd;ZnD&<\5.o4tS8?98VTj+I%@J>.^mQ9qG27KUlr5Q/h!qWdaTXl$OBcn5IC$Kd(:6eGgBH`pFJMRS;6q*]B>G("oC.7WM*&H;d;n@i$-UQTb,7($`N$p]*J?1[<%_p$5n;^H%qFTVV7ffo$";I(g^PV7S21sImoI<;Bp;scRbs$97!FY$7Z^0r9b5&7lQ`):qoQ.@*U2d<+<TDeG>IVI:G+b+$-K:Fun%WQ$.5C91mG@Ud,[o=Hb9a/Ij&@(L!`^M06PNrC[#MZb9[MF:4^;'Yj[j-T?CX>t3&'k)3eT2'NaM)tHSc:8FXBp4\qCOR5ZYOq-]%S%rc6Zt[MMY-cb._Qd/-ektNe_K?Q'^Q'p6?Pt?^i\XY"6HWa&&fKuRmXS3r/PiX%Gq].@7JR-gH7@\/+FOj1_)G9>(Y5dla.jCl%f<=0pRB?N^ObAt6MrFg]i`J6V.]*Of>NaG$M@b[+06KKo9+f[#e-XFYmm668T,[:Oc!h7O=E2GdojoW$2/,sppT;!&lY.iC0eejY%>A<>Zq]A6aEiN`m)quNt^h2`hLatDd\DXSNMEA^*<kJd8__;D`P<j3Tdp^A"'=M*j]fPt*Y8@%XIJ?8dMr9Ven;gZ-\Z2O8V-JA0%H8Q"BcIBuu]3bUI`,u%5)/306JTHV_/ome`fFZf>9WiJtRAh2QlV-!Fa"efd3DotDXlNAGH@PeS9hWH[;b&3VCVcEE5'#T#]I8%P%LuG!V"-HOo>W,F1":r0>73PN66aD;Mmteq3'FAeVF[n>dc!]mJS*d,+Z<b4Ls4;[#!5;BR70<N4.aF62rA(0$qI3os'm8D=An%#.%D)G03Hh3)M@B&6X[\,(KJlU)6)'bW^0@>Hn$$OPO9Ou"ZoV'PG-BSmD?6thQ!Zlf2U+"joH_c#*f?R2O;'m!1l("7\YgZS+8\!+1%0RlkC-k_2fN^`IlH30"@d?.0q`>X:R.!g%TdPkX]2H,_QfXPQCqek_,l[to?UXGW"Y[?9BbTT[o%HMAT)u+sLC9>0Dg7#Se!PX4n%JHuGW*Y&3<C_DA\dcuS_!>L0LLCq_c_:.GDR?VDV,Wmk0K(bE-=^N>i-usbcG,dVuN^?O91a'c_BpS'!bKK!T=pPU6h"4&Z-Z4fI%OF2M;r4\Zgf*s<r9IpY5Nq`Rs[f*Kdgbs5*gr<C'mZ$ECS&i(@3NE'\\s!egAR+0U$pVX+i.%]@'iWf-/-ho;P\=`5PrUNY@7W3c%cAj:g95:>r&Z#Ua'WJVdg;jg*#$U5Xdc>gm7`/Z5)P&UA)&VpE8T$O&2[p'>']_Z!q.doVMO@tq]kT,[J:%4eP:c_3f+J5&Hs,UA%_Tp?cos'F8g-i3__L40jB5[12?+`bG<lI3*2F.*5mbW.0GO3"c)Y%oEC^P\XZFcWH@f0cI<uMl,CUG\*hUDhpVs#kI1AaK%]%ba$%'LAirfXfrcpZnsMJ,R&4J)*pf&9B<BG09;EC<3+S)&UmK[l+_+p^?c'*CCd&802"h&:Z4U*W]gm>6;]7-cu8?m<NV<UF9C`*\^]X%0Fb-6"%@WireSnb9tSXsPp'3`F#J(r]M5N&o_t@RC\%K`SRrA)]sMPNl+WVF=&)a/h#tR)1U^qr(2CQ8n4je=#dtOK-Hp4>bQ6PP%=^7k<%M1J#'5,7h\kib(lUJX(%K$R^-E7:^&JiacPFrtd6MXoB0i>J[NGpk-8s''f[Z"&b]`o--K,E5dgJq*7J6EF4&[DQ*gI/K9%[p_?>FU_tjR3\RaBNg8_qXc6U$iq8LN-'@i]EWC3GWK^25a-WoNd=m7IjUSNh.Uh_S*O++KZS:Y3*'&<P:]WU)R3bp.?6o'K94S9%6QuL>%nVsK^mRD)b57uA3O:YEn?OLgc@l$+V&OIn9[`tZ"G=.\8A$PmbW&9pY`3FB;+6,G+1_n;h8nRV)htAt.KD@'H&l`Mg8_1*%ll$AVo"Rs]W#0h5$na@k^IOeFn9DXq068;#qD<I!(![\Q`2kTKS[_Hp7A<6ZUuoP6L?R.ab0WEsZamYLW<BO*/2iDG$Z0%C;@Ar3%OVg?\_AD^RTp$7BOrqSLFYeY8NJ)r+>]<A[/WEk&,f%2grPPXC#:8=F4irX>&-Akh]PrCq;lk0]rOJ"gAs))cLfB]&Tql2`l1DJa%9VLGq4hA_%M*H_U*,b.E3%01W#C]:5Tn[,U00GB;i3%8cA(QO'je`lL_r"Tl$W&J(bTLF9HPgb8q'fD_Hi_9G(mq,%AS4>qZ3a7>%&KRUWnOa5dWtYER0FO#5kj,0E<L@@(8.Z4BeMf.OBT%+YMU4:%X:KhAigGMiejq(CR0s4DQ7ui`5nSMi9a79qWp=>;dE+#8EST:]%kDjaLa06nl^TIWpED:?JRDH'U1(Rdq"e!?s@VLV/'!9g.c#8edK:\hZ6YScWA5h!r:H$N,MDH5`psGPb<%CK"QRFl]HL6SP1fl+2%9g:EGQaYa&9uu<YZ9OA.I50X_6TD[q.#$;aqX+#HRoA/.cK!F$C,`a,2[AIB0L3Rm8Ok=2Uk]5Z0Smd0.b[WKBk$%W;\C01W>AIV%l@Edu1?g4`>pj&EHButA6WJ2Po.Gt2gi'lMb=ul.K88k5Fp#O=I]B:--AQu#_#ZF,e[n?f]sDusL)sH?JX'_.V/)[KViqVCP\-?P%&*Gj>9MF&f)9V_4P`kf&Q>U6J=+%%:<sN%=XQ?JN4ZFqVf^DP]1Z2p:_V<pNXEdlm05P?#Gk>PiYK,D%rLEq?kj+\IGCUpV-;R,O%A6AV%Nf(M$dgeS)cn>L%g(?cdfTkihGXRnU4lNhdlT/`q>=*bCk"-$LaPPS:Zm%9K^8P,gd&b+QAY^*7,4<:#Y7pC[h\W8BH17V0%OqDBDrIICfU]nUbE36A(L`/UFJhgPh(tk.HIo2#OE3lmQl`JeIZu,l>G+K*>E^q+J'Zai*BMh`!;-.;5J1Q;4ChB;#ed/LUY(WAj%M\"AXJ^p(C8i!`@kIN!+.URqh)!OH\'S_m$Rk#D\]6%<kmH@Ca^W#aLDOn'H)rJK'!b#>"^/=M3.Tu,TCnSWcg7T:#9"4tWjm,SK%#*;,"/0lY>@8!2#1_Q\.+Q%!D>oZ!B1"(5spfLKOpr+Z?U*V6Rg:aI=\KA+4P`-7r'NI:AkGTIR[$mqShP@c".`kW@=Y@<)(iJbk%3ho$&21$TegWhTZZ3&+FXHLP;N9AR[?7ksuZ0X<KI8A:+=f<d7-d`Yj8);hScg[S@,XW?84JC2-'<slH"jPZqs6CX4e2$`?-&[^)%"K#jpZWc"o!rsC&3Sh=2^_&9U4oScN0fnC`?pn3[7heJQ>Ri;>%6K?i"SjfI`mXJn:i\E_"kOE;-QZnE,XtGWiZ:X=/M^V3]fQ4d%0[uA9X<H@.dpPlg'W6uJ3`nKMkc#XgP'sO,fC?H'NOT2D^qL8[AJJhEF^:1>UlVJ/)@uhlguP(kjcDdf:eMX[+WkPT"UN#qDQ,Ji%ESP*P7,/0rC"e=ub=I69amS"jnP>:_jaHn2oCRgnRIJ,A5Na5#V])pFPn,YgZA9i<%Oa-CaUU'IPOILigBtM%Eb[E!ZpgG"h)co?%MAXB$)f[PLL?,c-)8=L/;f9^S1dPj,'&qC'UoDC1a0[V:%Afr!`l,;?9f.ATi6-Yabtf^`Bb%h"?fLDhcjcYAqM6bO''ah[EC#e'%5=aJBdFNCV;r)fMRer72I9hH88HBOcF_Bo0M;l4@OVNVYl';*bL$&K)enkX=LrCdjB4R8c_gdROR2Tl\@;Hi%A)TU*gVL^r,sek'%8e-*:(fFn;2nk,@^Y')(@o+]H[M=sq_hR:GFD2B!_!qTb#[V]\Ts02Y>a1&rC0?G/@ugbln"Xm*r]m3s\mJ5<4Ltar(bJZdV.t1K%8_KG/Db#0#D55D#$M<ghBu\knmUM&k9.faH)?r3A",XhVnGmPmkOk"2/b3,XO2HXjJ"?kW@G+b`3M`??F(>p+..$\^-O:BX>6DcY%MOAiS!:,%\I3t&S(\KWHm%F,9p];t9*2<.q'^gW:W"Njc9No]kn[673d\L/*;<i]VL1o"C@@8NQ-p3Qi&K_.1ZK3%DZ'pGY'P,p.%Y\DV>('4+?1!\0u&O;"9N_]Ef3iS<:-cfi8PG!%!jkgd<@JBtHKm#`ro]\2l4u<og:aa(Eh06"OS$Y>N[bdU')Y/M;<DC?$PH^*F%AUgDZ`K9MqQsh^3>#rkZncb)pC,?u/q7PgF3s6lq\+i_9r3Aiqik:\Vq_UufJ).Z?8rH8BOZ5iWdj*t;V?B(fd%C&e"1R!j,0\XG%pA2)0&pZpNPL_-A19h/\Ml+qRA!/$^1d0cZ.c#Z'b@1pjpp]3;eh,@Xep8e8dK$(,.?>UpTge1lZtTTl1\p7^q9G45U?lN\<U3En%7Lt5]D?gV*D,Z@(l_Lh/ffC/53eA00W/3\kp;m+SDBb2;n06sr46fA>I*mjX4D'??=qp!>5'b=*'s:pG8N/-J%+@?bI7P^8E3XQ.%*<*0_?*j)F/+?h,Rb+Bd%V]]FCq;jP8PM?;Qq4#E>`ZCaUmJDf\&I5GgY5>*2H>A)k+d>,_j9lPEPR_edUJ?5M(3W"42J^5_,MqV%VDCi96Ud\*;3e;A7d?)B#^h=p_E9*_dRb0VLZ]r21%W7Dk_kPM;p((pNf`C"b(a@q"3ViI(jQbiSlp`j.;nmB%,7W1FVQ%"Qk9(_%H>SHI=DCCt/X3(^;J?ac(MF>g>1]k+Ub#u]X:]_UKjP<'CR0Sc3"e5\N<a_?#HpH+PogWoS(<lN\KU1@[m'G[LB-^lV2quWAd3SJ%,72G>Hr>OZ+r#Of3.n'#;D?V;[5u<K[!9Tq=2i%4k_$FVbP$U:9(IFtV5\Qn(E8n86^g:)cQ6V?&a=LF.4-ks:".$`*8;p4`69o:%VDaY[3-QP22U0ZV/gGVcWcuLVio*m29+Hc(nE-6h84,`4)Cg.^gX0PdK#0:HT:,M*lG,&9)H8'/N!)opQLh.KGELUdb&AmM[L'hV%*EnV+Y-3rYUqSIR"oL\4f/1)Jl'^"n2^1,KLe5"g"aUgkr^M[78l72C?c5%=)R96tVHak%>/MKGk-W39=0_'d*@)Q7p+9Q3,^c#V%ND.%r3b%4M7r/pLF't_Il9Op/+kmm6k#d2c?C9c7_SM&i]!+"[F0Ye3NXW'?e&$ciq2)bUSo`]\3LrhHgI[]5o99?K2^Ci!XX3Wc%%>=cpU4kX^WK+6`/9\"UVW'PQ2F)jqSJgV&pcoTlBPZO%OPa0A(R+7foiNsBk)dFsHP;_!+e]Sa-<1Q%d\q'f.CnA_`*tt]Ne)?Y%g0dNTd"EDl#RSh=$n^L!A127,CA:uVIp#759C-;q*+SR=P5#s\1)Q<"+[2&r>Is@LJo/G%,>:t:/fD`hP(U0pOXQm;5XGT8?9&<X%-J(#Sl\-2>B96M^(<="s_;B<3l(\<O7?*[5LEq^+pb`sY@ZD1M.JZ7=`ZrAeBil5@,iOZ48I;al-)AjfO?j"R<N:18lit#Zm8rS?%i5@5T43<3GGFTs"&jeW.^<feJXe?\TBsRFNl?P&rG"?q=PcIpB;OqPoq]QfOQ(#f!^DsE2X:i5,1Od2`k14=#B7u&>eB5T^T9YEL%$\#\)g4q#'!T/`1Qj,/Y4j?8XQh$SGI1mE9"Zagj#t-de]1Pq3>QsV#J9NPZ*Voae=n4SSblCd,FNhSpKTnaN#.PRFqc\jp%l<m\%GFik$&CcFV%[3H(YPXmnl<NNbf($DgEO:K*F:6Oi`4ZbWj._c`>(J[/@KWJ:d['OeF#Klqk0'2]\D^2fd-Ge'ZqWaC^<aBmd&>2g%V.&JHL'!=bh#<]1'bVTqDhK6'2B=t"U[cBC"H$3B);<ib-hoe-.4fiT^BlX)p!naECGiHcp9F6iMtqZ&cC02P!65Wg.-9=-a,GGY%O;O&5XRl+J#SgI]0OFk!C>E0M4N\fEnOXZ2:o$b0SmQ\V,e\\2o@%t0k,X!)c?nArLKY_:G*ak?fb0eGQD9,*Od,M4bG+Q"'rC*D%FsO']N>H`o+r0215+m%f5)0q'ikfr3hA_`m&]3fV9(b84_'aPTp:JEkQ<`U^C!=Z?+n3+QoCTq[MMDn:B2aBk[G@Fc8a?4n:$9uV%[^CbdKg7`,;/'22Cn8Mj/E+=&ZC,u`)Qn[sRH<;:c_Q,6$I=p?/[F=n;bFjR:HohF/sp6T?A1=AEa`<<!GW"KpqkYrCiZCcIqm1p%Xj_4W7^Wo99YN.;Z^[n8%p/r;O]%Y8^6&mS1\U.?/6;J(;.b`VfcKnH5`#[GLZgb)%HZHD:D0Y8%;P;;=.L\\\<HKU(KjJT<!-e7%go+D`%B6tVj;[2=./Cg:-rUY7P"u7oSRCoh^"T_NE+-6AcD5'PhD&fp&j$]W615B>_3IFE7R,;r!5rdh2;iVFm;R2`km:(`,<!a"%+3He\:+o[_"-&&,Ck?oA&XYtHK+6UYUD=d.QZ=n3S"8%F,V&(TmW9n$7WJZL*Q_rS=QT2;nj#@+)-e\.:G"f$[9E;r959%]9[Os`%6BY=6,YeG/$`cEj:9oRO-ksn]RUiJ'rGYICO[RcMGjA[j(uc'O,(]uE'(sGP#P&%&Z@8n<6i[35TAg.)8PuljXL0iT&E%kFWg&a+%.,j#FM0-4c4`Hh,1X/n@lIa1J/QP_,3$=6_OBK0;!o?fXA_!A..j:$OeV38(dBKV*oWo)(l^Uma92%WT0P)^*\]c@"<bU*l=eAP>%SZKofTjTl04="cp]p3;qg@dh)YGc72H*h-9df`?SL_u[<lXD&?Ud,3c?C73i=WM;'UfgqS2rLa)MEnNSY[#m%"i(ZZ#Vi``g]Y!n%No`sG@\,s.)BL1a(>1Cc?$2B%J7iQ<e&I9<+:)2+Ycq4[<qYb&08E^</%kN5EA<K!fm7k(AQA&$olG.a&84ZL'6Dg"=tQY91BT_P%D)jH<6YbL:;`plenlW3]/,Ul$41A\0TQX@N::KDZY5R3:Ah!!Z1rG,X!Bi!W\(bkI6kRn)3+5Ob'jWjd!gJB0\*Hd#T^(Yp*ebhr%B)&sPY='Bg#(QREPHFh3Pj\R[N0\ZLeV"Y9#)Zc:)g\U#ST\kh)qm)Al.9^BGAgQTo8<5&>'S!SUs!lcK4ULuBc1$'ojXAeK;*5d%RsU5'c&W&n*\8"rdDn%C!W%;c(sUW2cIUK<J>WZSKSpAA+H]IA]s*uA\IhSiSk>Q<(S)1]nVUucPR%X4W2TD483DJ97P)MO:aVRJ%E^:c"VP%LUi%uVX%[",@$WJ*G)6,Dr42Z*?U&q3#.hN@CN>^F\BVHuVZDE"\-C%_TkZHL@`!8)7S!i1W_k]WM$7$Y-JZ(2"*B[P(%#`W(/5ej@_n#\")R93Q,DC/J[@9FHi$0dgMoiXTS+2UUI$H$%Cf'PmnRnp0VPUI!m66[4B$I$;$_JZli#+J:Zb!85O,)Kd6fO-&e%[qVkgUuWo#aBFdMnX>?=Rt_Y\qOWGC*o#DTVFb;*mHZ]BL;2'FVD&`W)Xa0"iH`",dLr%f_2-qAgT]DXk@!k4M%WOq8E"^;)?)3V%Sc'ac6o?sh43T9[=UbW$-.>Ie"quN5>5+P[AW^5MmA(8u<BpPQa3CY+_\>Wl:sY,2,S_V+&OG5,.1c=tD.V77B._b87S]5Z$u8Nh%`oK#a??=@qWOl$6-iZl,4YFT%oE`R%1K[^\f1MX]#42`lA&V_k!!Wr9CMaZ:Jq+'s(VBMhMXt<7@@V5.,alW!=fgFY^rYfZ5E/au%4@o[hLdW3rCQP3R@-l1ElLE4DA!pm?cnGnc;XmnZ/Y$hB78=HV!)_H"MlgUimSbF7,oHqW(C(+:b]V3]5=)`6SuAb4:K].,0e/l"%[G<8(;0cn#]3!3h^(Jk!om?'3NJM)Q$DU$Z8TJfP>dp_Ppq#R5rSAo$i7=>7X%+g7^>d1K8\VL7!9q.B>T(f"Z7t]8AU\:h8hA.c%WSC$TR>?CAp,]3cU(&3AMBf2j8^'-:Ip)G&btq]4=j.d5p@u=C838s@\VJf@X7=,EJthhH./rY.P4#4B])qtCRO57];sG1*L3:)*%KPVBeNF`/tWs-Sa%MA21ni`do,8DP=pc87$1LSB&C101T[,'tq.FXFoEU17^ftWQ)[$o)SAe77!2uH@S;\j]5jY"ZC9iX0*[?_+7%f9CpD#dE:9DtmIBk.9<F,[P73Z1_T\4O`NV/IPGorbWVDb;L1OE3qk]!^qN8c__cL4k';%(?D^7gTW]6$r04%LoG)eY%'n[T$*DB%]]GCKjK`^99(Q3/nqiT2VlF=5dV%mS`2S$+hs<Hd]!T:/B!cL"Vq$j3<:[\C?aiq<k[^qFWaRH&;ee)0Dfp<Ik#hShEeVLc5'!Db%BFpn?q++8"1",18ZNs<;D&g+C=QiSeJ/.r3\Vpfoah,<G=tpHb@Ih1ODPh"D6&a)_cHjVV5EJ%I%"*h$E/`'eg:X^rN_CFNfoh7!%pdS/#/f0"oB?K)0:-,+!D-4,EE>>!0/l-=[s0sPl-YQHgHH:VSDe#P1o8RC*eX1;i#h=l__=ZQhLpILUcV;cH9W?@m@XSGXQ`760%eEi6U=(9=;4BsMj*9U#AYR^uuoPEnEEp!C,q9*V6?MN08/j5A)1mZ]"dpHKH&g7W])Dj8kZ%c]'%Fl!\O^TO-95G&3F]75'(7il*%[6%J3\;nhHm#[Pb2;EQl\>,1G;7`pYQRhAoW(OKEqsA#'j76<laHJe<E"sBmVu],PDK2eKl(UAOKqs-r$-+,bbh1?;_eH9@4tf:+%=:En)=Xe<U49s;9Z+9p3bKK1).c3f.Kppg^<!`t8#u$3%CLe;N%(<1=Tb"^#FKBT4#ZH./QeO1*6I!#Q7-1paG7EAi7LC+bF`(.V%&e6Z"6)9YIr3R&=2DS,@N;[%LJU&t_L%%C,2J*%%&lU883pEl^OmZL!csW.]T'"1QQ(nakY9(P]EIrC<>uACO$L[4<XHGP9lq6Cl%DElpRSC%JbX=2DM='Vlm<$>+0S]mWEA.?@;GhZ2!V%2R*8hbqLCl"2$c!Rs@#2:o%[^jG>IJ.-EPYnLR2Nq7_AANLQo)hf;F(T,8%2H,Bj0Qtc'R'MulgsZoJWt"#\2m^*@.=[X0.-bmX:')k(C)AWRV@3b=@*3"9GQ@Z`M0>Y/K&EMD;GHN'=[?s5d>E/_PO(BA5g(iq%Q8gnKOMF0,.dM]G+]2N2LJ$mX0ujBo(eM@dNSq2->=nPYZfP+N:2X80WA5Rr)/-.tB%Q5:D!'@2Rk6b($.1I[TLIO-AA:^>KD`U9%b1*N:LOb_X[)iU=`on;77\pKN(k0]t3$2$,@J\uE8'rV&*KFi2o^-S2aY-#G!^7,47jMh'nbtu+J0kNn3%83KMD-L]U&ijHaB][L%DAcd)P$@dQN)KcO%aImc=ec5)-.R5Sce(kn:^%4=Uo_[8&(E08+AsB8g/&VH:`+i+X(oaa!X:MV1naX)r>X^aT?]au0Vf?7^d-:T%g=rPu`eT-HK,01UiIqT7K,?&)ChW#p8JE("TI^Kr?3(.7)#52j_59t:;%Z!/pl446+^O2S/PX=0/<q4(!;YrOP'9"iq%G7BjVp)T%T%q>hV0[*(G/%ERodCg"-E.=n1RYa]_&a'T.@;(pIT@5=@IY?gT+/U"D%PFmY^l3<IGc7im'5QY2I`QQkE_`hn;,C7l.\b![Zoq`%3,)b5/q/+g%!ZsCT:<]u;]\a^Uue(h_(pC%e);/;D=Qg8X]I?G`sei647bmgqTWO4*8,4bC:h*\rcKS>_=".")SVK";!_J?$)QMD%I6*UHZ".k+f,Gn(^3h/9W/`_7gsh-pT_.Y/IoPcA8M'"9+C8I#OZer(K.qrF1GI?':_MG0-u1h=)6i%."?=n2oL2o%`S,S2o7h!3%&gXou'=SF8\lq:1nTUakd%WQ*`LAH^`;9s074JUu(2(uhHjMS5]LW\ajd^.r"t4([PL=B&GSm_GA?0::"BWr*bC)?9F$A@0p:>,k%#k?3(8'KW=iu!\>Gcc9C=6X$-np>"*+i2TR[TpuZhlY]g+(D35`GZ%W+MEGro)Sm:N(+mR>a'@EQAjEacjtH2ghah-c0bV=Q]>c+%FQWY0&6F"aH]atRTg%U4(3bXX)G7@*4VN`eKWaeYk&F?u7uCh/(T\jSXVm/qW`8AG,L77(;iD,D.t9mj)!`obprJ(d*1'JMHt\5u%=;5':mBme+8.,D*"=pul@BDCj(W@+H:Kii*N[bo[.dA5(JNsO<XYu8\S*6Uf1DP$Ok$eI%\7;\a>qr"s-+OBCq9g.9kUs`#`#mBf%+<<WT"+iLtCIr1Z9qf,&$7onP2f?`78m82*^'ia117BpR>.`m,iKG2O6R$&7kQ%hqT'5Eq"QdEheMu9Nim*e^VH>;WN9eAXO]@%M%,lUn+.]4g1k"rZ+5tZ#s(m"a^;eI^GRS)@l-()X'E9iG4*>o3M*&!l#K"/^%L[&rZOhuP<Oi'PgNDlZ3["hab&!J\Pohf)N"L6o<%&?A%.0!#Qr!!^_MJ=:ce^>-s$&$@tSj2Vt9!YA$0nka7_>&?YTS>P"7+=R:(aB#nBPjgUsL)RWq@9IP?MXJN'\%_nR6QeT$?TTRY%-TC3QHVD1Pc%Ukq"@oZ`\l;/`dR6TnV)%7r%'65>Ulp2%(4i4kZ(sLZ&BYO$-3-0F+V]Ci`Jq13[`(W;/A.2L^6(rQKo<GkJ=]fP%aJt-EnsJ.&1(HE?&O-.A4&XG/M.%L<go%3k`eu/bW%$^!]66Tl[,`ZQXaIWoRd9h^Ai\b'mcY"JO4.W#N]0fn(fUn<NX/0u<A3tr%D[0]$$pX#fUZFD-KRBIGZ#,T^`adB0UeVX]FN.S<RoFUY.8)qmN.er9'p9Z#)n<j@%0btLe;X[Se)@f2'ctSn3_=u,]:*K?)A`Fl%REFE7,pXCtlF\+.7P@cd_dG0HHS%Wc61\Dm/es9q;sP&"V7'=]`-2-?PnR-e7YGZY/Aa2*kffpH6R]d,@?)`olTD+#%[@?#V4FB'%'FX0UhEbD_VQc,]?-!&(aha;Q3I]_/)7L^m/j&?u=>]'[R[VhThpP2;:o8q5)cF"/<?2b5,&>KReBh4o<h71dfL)[gWKHua(&V>`%4fV&i>QO8/e2;Lk@JN323_`e=G5jJ)qVqCJ1kC/:b<Q7$[fKb4SuA)mW+c%=2.a@<"=F^>ALaG2'^m1"I'IJoZk5>H.-e9E^F'T)%=X;BO;/,kXd$ch=W7Gh:WQ$.m*>NWIVe\[V:hJ=64sP+g/3-!)".Q<a3Jhe6Iqh8<J..hBj^SeD.[uYD^r(\/_Kej@*cs/BQF])9%LU8?_U/((Z/BX&a-@aFbm<1qp&&_=uARR/9pB\D\\d3u#Z4(8^eU(`PKmjBa[H35D;C+%._#UXj$_k:\S/gPo3Z;tV8@4H2K_9G[%+<T,gn4&"seoFCMcsjj5]R#$s9+4=KC.4YJMb%DOjSX8<@YeN?:>R-TTFaJa<rapJ>C`H@3gqoG$G+\/*g^O)hQ5I=eI#;1/Xe_?%%PWEV(Zcpt)KG"=8T5@W*#I,?FqqEo%,e1HfEKDuMp^rW95I1o:[`NXHJb.uIS2Yjhp$^KRRp32A$@p<']-jp?=YIXY^EYNY#/-@%Bd<2hF+tmM$kgC\*-e"s;5U%!(mmu<-qcSn4Ak!)d(ZYL>ufCI*6SC+c.6!NZ=\5URLF0\j-38Y73F_q.)h81g8Ljb@Vfqkl;UIE%7]H7'(k&Df%<6\o#K&9GZ?FA/?Ob(RenE;ZK!*-H`,]+sZ<m.5`g:3+.iCAUOI$ZWhoR"OZ.k"I=C5bB:,])kZ1Nn2OA5B&QL@N4%e7h03)\1is#tSPUhU)oq;HD4]:LKpG,dFOV^C;<Wrop48OidUGO<SFR(i`?gL,;V3\%[T's)q;/,$uKhg*ZY@L*@(E#e8)8D8h5Y%.L1T9oaK<p(Mt$V;k8[`igjc0C/8b?"r3MLA$TcgQ*2HaVWrf<-nJ$H7;+_8%MDZ&"7lasXgURY%D1W=[!2pM[W[S1'Ja%VCp;$c%SZ*NF_bUQA@DVX`"r"6e&C+lj.:cG*)le@ZWt-uDV;5<I1)qk\Gq0hH"VDGkmjf@!I2#;Y;JS&-E5em+)?dEAnt"WYYSWaqSO7d7%fZ9bmVTdt,/Lps:T2Z(/F(q?LgQ?DABg85S-F"L4g[Md.%D^]5n;qqijY8d?L=W#Ta$FH,M#rG4L6>]8%F9hGZeb?844g)"Wn0fA%F]/R]8Z::<m*/)D<^c(7->h__&G>ii',[aO%iGpfReT6C55bqIUPZ+`Ki'6[1JtO0S]rTGTWP9KdX_*`'+O0#?O#B_l_K+na9a%%%F6*Wr_d"Y2!:o[<AWNg\aJ](&4a>oM1f4AJcU9I[M3"g463T#J>>dUk;l`,'e)L9!\6h"A,YHONb5=$!,5V24CHDFkQl4erf=muL%H!SNG]^@>glfmscQl;#'R6E-Rhf4m.6R;D?f[]07n2]>&mi?[H(m8oh+<La(^'#mSF!@>n6XRS.Ym#d4Y<e+&n9^Im!Ykf;"#+"4%gqcpT#d*U8$dVt&-Ptao](KdfQfW[59;I)mi$qQ=\QV9Mk!,<"FV-3\m\jVJNbOfqq%O;O/2-mKb!%*T-75&Z9#g"W29o]+.T)j0%fjYgjbpC'Kb7V_2C3-AV(hJZcLjpRj1D]^,/L%+K<OC!hTiC?Hg?NM?*e0\3mW4EA2^m"gU>"Sb9nKUNZB_fMM+bkY6\%RtXVR[,%Q3q@!lQQGAB%!<q7&E_lHIh3cRX05&CuLS.p?,bbVEE[I=Go)RU2%Sc#ZLJmQZ3?rD</$caTS62)#H>@j1/jh^'f25oO`37Kh_2%%b5Dr9.>Oh,FIM.0*L^qAi+&Ur1s)uBSWk]k`h>[aofnGY<2W`.M(dq]+"8K0Sq2BfhHn6W(*+D9=`SkRA=G,62Feja(FS<M;!8O.%R(`@HFq6Sm>8SF>UU1kTBhdN%/VD.FHT2^%7^hB3g<^\jej'9f'0kYNcJQ!NoCqD9<4;Ad($h%@:#1"J]7ERS9\#=\buAf5&JNs5%J*P.A<rOhuj176J*cn\4o00)+D'ZZ:RbU&dlBu(BT#jcfrP*qorI8c^4IS$R#N<Y:A-.od]+1OdO=.ul-'j%!-2,nEEc%HQM!J2P%^ft="Y+b&Kf4=g6?4@?4Kr@CFDMnh,`bX7X8hM\WM3&[t<)Ik8qGDLt.38QHGgLC<\*#J?"h@igJUqdaTgYHDD')f'9l"Z3kA5#@%n/HaDa69+mfnfI<08/[=6@Mp#`egfQ+nig.U&9T&a?5,Ub6\NG9[$u3;Vd;1P=Ck5c[6\^KTU;ZqP:t@lEWlcjU;l#9,!ljl)a&S%`PIZC='ZAOT*/7<#r`hhKF)<0`Z_4O^Tnp:&%<*[5_9:&.QV,EC'T8T_2-j)HSU#Z.RQbbM]'`5m<Z[Xf0m?N\"Wh<E(UUc#7:K@%%osFfq<X`<oV,"i:BI<q>4jZ`NuJB752I06MI^14O>mZ'.cu:s`%=YRqQVBB<aWA:=cRER5"MR:OiWoLr<Vo8/CpJfZ)IWVG6E7.%-Cj2q's:K%p_L**DtE'^]$+6lUi@5?3dD>Cee&M'T!%Q";7G#)";'^ZH!b86&U$oU(b#S=b/FA/%IlIDI[-4Y2cRWGW"f:8!]5A)%el26:$\"2q;7@\[6DSRHIl/o&;a#]2BO3%<c@)Tc9Rrmf\23DF',,=lRcGp,'/<;76r^?/@0T'%d^+W_AT_Pp=pQl=f]$hV^g)P\%:nSmI)@a$=bXX3t+B%cT\j(7F5gVI>g_B0?k+U3pPF*41n.VD:$L(BSO@]l';6U_sSN=dd:(AN0dBJnRebkmTEBL^A_m(COkAl4[%a>IreBp0,/78*^E2?D_o,ESC^PMp!e3!f!Y7OY_<>Oh`10U?@'1u/K#bJ6XD4t02Vg@m>'O*hlT;p6[F9q)+9r%a6#Xe1e:D5'01%>C`CS,I;Qr!QZo1+WrUa%=jWP(#<mVff\De>kX8F@OP4'S\#M8nWIZj5j"DLd.(9e]Y+6Lga'VceotmQQl(0<(R5!0PPFQ:AoB^q%$?m;+%E):=1qV@JQF;s&C0RYJkAH@5J<PjcF\7CZ(HK,qlnQ_AP+VdZo4X$b4%-oXn6$m-!tu:5LNHEfr_A<0G=ehja1!-B%@OBe%<Cbj]Sjj]__!sF=4J)<cP5,O\464:ik9`?TU+@6$DWI&FaBe$r$K.eL1FU10?lH7<Jt_PSnrE\@VE"?i]HNB*5"#g!9*XGu"akB<%-2)/BNcnf`^#Q\WB9A<%oQ9tbc[+3pT#3lH"T08`=h.B072nbl^<2[1duJ_>OVcQT1HB_Pfp1"r,FX+^jp!UQ<t3?,$o0\J_-O(W%q5b;d=Bd)AmQahs'VBU]pP1.LSAD7F$=$^;8Udd'.fsttN$d#h-KUs/4Uj"//_c*TbabL)e\F?mCh1M(&p!pFmIG@ma"X:.U2f#!%'!i"Rc/@%ekL!EhXsoG%5bN`A`P%HF;+f7/btL[T<R7-])SUZ;l4n];Yu,"hhP7AqGfRcdCl$]$^lC8LaVHkg(=3bmF:1kI>_^Xd%^`q0FX-CWPL`kK,hh1mu=9U0V`5+rHVMmja8e8D.8u<rNjSO`kN-0(X+'"a7X;UX,*35E*oj\Y2,NqsPc.&2AU)?1\Ali2ciNDS!%kSgG.b.46YX[k3\ig(#2TUg1<m-%p'.!+;%,N<i&=d4=/]%Z-cV2TB/<FoWcF_@6e*HsB0\*M]#<h3/erOa8C6DbMk^B`2BX:oV3%m6R!]$p1cEo]&<_CJqZ.#a\XGEZK,:0P=qGd^o$a;A^O$ba+KIiYomrY*rPC/E$dsBssOGE+]Hj>3?VG./4hM,4Ud:UWGP9#SXM<%W[Sk2h=]WfLXlU@Ml+#;;H8@D!a?j2/2ikc:[_p`q*@/i+%Hg?=:,/(TpWg:NNcJR"WJ7.:Tog/#Yk`1%W5IcXVBq\?1!l3D!X6U%q[Dh8oH`V>;]A?UT6VG:M5.8A@M=1TLsL:k3g5<Z025*$s+9/C5AOe0dV=*>\>758kHq8KRKg2ZU/+0f**#e(RO4sYeGFpM?D&LR%DF5Zb]G&R7HK-)>!JfUV6#tb^oXaM/$+B(^I9k_h`jO0OV5'F6G&u]Lhi3UUG5)7.<3[-i#4FX]_#%Pir:ZL3S;RFLd5CeN2"J!A%o=lJ+nt3!K#O!S`Ic`Zfb9h,M0P0f&jgg:B"2\e!A=]gDI5$3XA@_-T8J=rl/=hGud_JT>17pVkj9G@^jW;6R<:Q."d'U]-7kEh1%VWcpXLe?hboO?s8/31"m"r>1j%9.$>3pAFRDf(,$Hnt3AaTGmmVp5a;2CrTsc4*e;]9+Xu1cZ?JV#aTj%/-+YK8Pa!JOlpP^BZ^-%l^/9m61+4s,*rg13F_5#,qBA3SZ".c[0Wu`TjZ*7H)$7s93/:_7KjJ9pq<00J3[BkQ\q>o!beF/PuMluk8AWG"UYV#)64@nq-Fb7%aa'3sW,!,t&+22u7!Cb^*!8]=Dnqj\B3Wm\c$cf]^]Y`-DS)/\r9g@[Heo\?!F_P//-9Xh7BXak'4<GJl_O[pcBF!5gn):k*&/2'%f3okITM9NT:f-ap=MgV!Q/DKtOX/jr3(`@S%Hh0WRIaVWH`[3`!!)knF5Wt$>tiAOQfo$6TmR]gU,OMc`*+kd,=WDpa@>'>TpS#g%*F4A4H_%M\UIkMM8VYg*@;<Tjc='Za'1H`nBM`%M7I[n7:kW\GSi"68j_:U3jAh=m7+!rGbrDHhGI)f7rS+)7:(_tJ#7E`1Lq/dQ%Tng.FP!H75DumoQU!%W?j@D,\m57s6%-caG,YWI<,'71Y`JU>P[3OM*pd&'_UQ\k]:lC:\1pDc;1+5TKX9"R)IGK%m)jVk.7kIZT%%+]XHmW7;o:_g!BCH$(X=Z0`HVg:aY\4X'h*e\t;Y5*/SFgSql8+hQJG[qi#T,(Nm5]TIB@84]``'PG]]?6K\e9ao26ZP.QDZu?&%.9N@OAeG+de#udGe2DHto^_i:Q$0m%).AipCH+H^T:3nL2.hnf"9.i>8SPaP[c+c>)IAJ[d+%q-fSR<N(#SQIUlMfG@<EW-'W>T&%U03^B;JSOf+_9f.#DX&>:sRSni;iXKh'Xpfpu2g]hBu%6P!Ik097<-0V0I_),EZc#BD@SqF,AeWX0*9f.8A(&U5;!r8*Hak<3NYG%O5L/i7'Oci7MoXS18pA,BX?7qFj\V:F_<!VDJE'!m"i@JSF%(R?B`$o$joLAU+\sU6c5:8d$"6aSTF"[(3r?"*T)<,lk9)m:U](K%jZ37YiD'!^XtWKO1p7B1;;014gOP.K`"LsE21rAQ(`$,L_<VIn*&,)_(F@)cp@'9G>-BF,>b?UJMD'7<mCe=#1u&rc(kjp)b.8s#%&f9-XWJ[YrZnJJ-\QfW!Qrbm4Y3&5?ju'^dk,KnkH:2aQTI>Q@\D'0'ALIt2[?h8_H>pO)^AZdKEAVE/:u!$mJMM)n\<V<P,TYI(%-NT=E/WZA;BN(qUQlId;Lf#YLI"HU1af'Z(h+r6Z@Vbl,B<OCb`=#q;1l2t9XD^I35G(@*+5Y$Z)YsMDCKhi`04KVDD(AcPe]@m'%LAe10EfrZ3k7!C/1EsC()Kn`+0t(gu;!E[Fd=F25kmsOOYIE.QT>g-56R)7jo8ShK`$u<CrN-P0"8WChg8*5eS6q]j`ULAU_3>)l%8asa=No@H:%3s%g7^\q/2"o!DoP$]&ULio,1[*c,WVl*-g=`M&,FV5'R+0o,o\]D*Fug(i/"NX77eCcN,ec2(bT=Z!9^$U3_f'\M%+eB*)KbRh#M,?_-T)7r8N\`$&)i"Ti1Y*IB2rY*d0SH5oI\I.Y[qUBg]5,Z.h>N2\S5]R49u1K=MUsC5<3/aLOh:sl"EVB(`h&l/%2c&"a#*1dgdG?t6;g>`gB.@>to>2F)d4In?%0HfQ3N6.ib@Huo^H65PcLEl!V*8D^8%'BNDXFOcenlCOh!s]%32gFpEM%)%X1jKr%@<##5/dht@#*REG\9@%!$il[408*.@YX'kUlVS-T>-tL%MSRTgdk1($*L=r$)nL3(JGSLUUe.eC$L_ud1(!pO.t6m+Z1k.m3*%.a%Y$s_W)g1b"_DFVqa$@TO-bsi.3>nJe:O<&9qDugciIH:Uft+ks%O?$3OBOZn%Re@bWm`I9-Nd1`VJ"5UU'8`NkB,+kP&5^RoN?\e%X)EZ3F$cWC#K4Ze.LA9HBu1IXoO9E%"FrLVBq'p=*CbOlI@3-qVA$Qe(f4hV$U",S\;uu:"[Yg^2OF%]L*!d0^K8^7q9l\JRd+X2%\A(3>^7Dop_[ef4p&"(0FLE3D1i,7o]*RFN<i"V4kc(m*bKW&SO_,UKgAq>)Wd6m'Y]O*2h3beCETQH+NTf!SrSTJ!Yl!oY!l7_;%Kdmaa2JLFbY2pQ/>j!qgjlFS!`%?6.nL(;@BNXOFL)\MS9eF-I!>/qlQcE\q1hGLa7PXtIm`E3EQN2YC4KMP9Y-].J@B$\g>9*bp%nf;1!ZLlZOpmD*G^H?KlYQD?phSL"p1!Os5\s0+,U5?)k(mA(?$V)[%+uOs$,OugRF:]X+%E(U@kE*(B&)V%O#ut)Vm54&=Cj"U3%W#J*Kif'V20ubt=5<c'G[TP(ZAhljRUo_`W\eJZ-@_)_R`R,6nIB_TO9ViXU852YjfsfuEcLq`s(@.N.K["d[\]rL.X1o9\E)ro/%A'VQ;GQnSW?=Cu'HHjmHeKFt5,.Fj2d]fP*Lm!p7oF,0-f"F56i*i!IRA32'-Q&@&E[D=K-+?3[T<"0C,=q2D5-AHu6W0J"O_Fe8%@2F/%iEHlrDo<.9lA>SkGU_\eO^Lp<+u!$L9V8jqOhLfGdn/)i)'bZ'WSi;>1p`Rl';0T)?!;8U((rtMJRN70$?$\)1J8CUBD.bK%Ut!pVY'=PjpB]([@Cd_A2j4;aB/N-ILsNjn&:R6],,)r+$oNe%3!f_JmK"EI[qT"Zg9@qqT\]-'Xro%8\F;U+]KVW=\Ps>,TQ.7a%'&Vj\9ir)bp.9?tFPF]KH3`Fc6B:Z:<g2Yh#W]DHj'Wd8*S&He3TN"ec!j``b4.)b`>?g\;k&,EUZEZ$hIkM7j<J6Nh@J%h1CFQ8%Q?'nmeR&F-h747UfoRc?bk0M"F0*(Dg%f_^-a,[s#IZ%O>h^iR_1]h6p7^8H;slS4S)rPQ332L!k\&7`maZU"Gm*S5Wf]a=R+#:i%G8PlDNle6K/jRcI-3PrIY\57A;`jsb=$)@k*N0ssm[@>b1+oArAQlQnr8pg"aGF8Lj*`u54%Wuo6Vl"WV5oE]*o%9k0ca9212F,$%X#Zbt&8k=/Tnhch6TPJMhP0iTFB*,blIF,>(prkAUs"GE)6IYJDqHNp:2ps2]H0aW!)2W_]UpH*aXB-%%S@X5Eb?UVVf3jkiEi6*%TCbHa3Aq[tqV;Po,'\!SbtSe&VVSN>E!7*@:;+)!eCE0ZB]X,0=GV$u(Dp$5S9gM+^*3V`bEmo-^d?04NORtQFqU$L/^mP!`SB%6%]JO#OZC:BNiki7leq)'?'0O&c)e.0V=+R2mcik?JC3e58+K(aU=[R3i/7/.o:&'k-4JDbP$.rH7e/[RE"<\2j=*Q#ljg!tYD+W$E%8Q\Wu2<Wq0$j2\bgR(3IZD$NJd8tJHR*ncDX,."gP.LhnR%i]EGFd6I4T&atCZ[d7rUlX4^!<%B`7K.2S4"''Gc_,u2qKEqWi?oM%\1UGq1P#[T]II=:,Wp&Zr'='nk4\DC_$`Up]kM^dIg)-C\EVpRg`7K*\&hWe,W7kV26qt`dm'45[WXgX$/u>D\;nq8TfJ!^9J!G0%#ud:+,&WrV$rEisE\ZO]gY@/%P)cpQ1i7;J%fZ5Ig;^,+$(n)<)9QO+"re.Jblo$0On'>bdRuO!1U>T+HL%Kq.<f5>"=%1)o$pOD%V(i/CEK0EoR]/WqLI0E%FL0FBWDrM:_\Is#7`o\2e5BF>+0L__-Bf$sfY!nc7*feE?sJl5^pQ../#17j,"[J+@J$#,RqQA4lZldk%/pD"fCb*M<8KTUK/O"99+;"?NK:=B1]nGC&=EF4&%kg=i6`;<'Q*CTE^+X\kKm5./?'gT1rYGLreh#1WR<4=.7dm@3`(!Tc/agT>%TGlr"kA[e5V8iIHO5t"rCU.(3pQ'#"1luh4@o+CU8EBqK;Y^tj:P3;@8VJt9_ffd+15mOY=!>#F?@o'oSija`cg=]1F!8]ke#qt8%"63+ogq"A[G@@-M#p4F!LgD>!1Cl0U=Onc9NCe-<D2hR<fG:aWeU;2=RKGY9VF$^eW[H/")pUND1-clgmRmP+1O@j_X*0`*O(Fhk%T^8;eSrj``ET-7ro:K:kC3/+tSjQZW[3AD`*[!'2?1tb$aNK%)K??_Ol!6,g3$:RZ78?3ud_YDFQ68&hUJSZW6tP6V<FMQ;>k_G-%9Jbeg7FVZk<YZ<G6gYH7.*,U'j\a4W)LY@XG.Dt:/q?&\YV.:u6%:NDp*<;'i9qi:r"*gg#uNJTe7[Y-]f=^6K_P^2f>&8B@FmgQ%I<9o'PW*N5p95)sQ',XGWqKH*b#X`9)e;,"2JXJFO[lF4FQukX_)mLXpuh)D;`Fg$%QX6FIoMia=^%0V(VXY9nUS1K.cAVt+B!Fn%XsmSEmpJ^(B]'fP7Td$M<5R&&H8!U)6cJR(#Rp5,#:i-0kg[NeI'g."`Z()91;qX"FA-&u',)ES3b,GUQ'qQo#6dH8r+bLTErcrs%+]pUY`PV2Z56V!QSNBLh)$W+U[+(m#5p?h!c1!B`LiD/rL*m9EoIS%;]A3,9jT!>C)CjbqS75YM<pe>-*acZt>i)N9g0F933cs24%g^(JW2a:<[*WgCW^P",M&Y4b>HjoO0@HNfog+4B4CVETFP!i:]'NmsV$YI0^#36r;P+CZ<WS.?moJmA]/3Kh.fCQ5*`Jsb26V4?-%Q62tsA?=XcUC&?"hh&g&F#d@eejXsm`-69i9(V((8U)p!J,&7df:&iT>.g#A$YS7qFF"2J]AgI3nk2^%>uB(eMO(ECX+8e7R5"6s%.^t'Jeh(g9S]u!0hqA+Om0Y`5CH'3/D!fG7pmj@`>?q"Xjn\4Y"roBS@0K-o_:@D*N)c\k>rcJ?0iGELjEk>K=;V>_FOJ:eC/U25%n;`eI4\-I`F+7s6<UdZ<[#M@:\N[L8qVAaO@l\*9"_i<EWd3f"MPr.E+qcM6hFdgI&[!.U?^b6>,1]sFNh6=#E._JV,)r_LFWj*q%1IOqT1qN:K_T#Cm7F)<sZ36@=A<m4#b!@(+L<:P%^4m`EI@HsZ+2`s6D-/.nbc+<Wb=+DTWg%3M#F5_I'Fk"B:ka3c2]QeXkh6/"%E,Bq*,T7+&Qcga.mBFJ?XB+E60()6;1\'<]_blE],VU*/jVa])*KRguCC'(tfe/%J;or2_;kPs[0dqFbV9!\,V'_6qK8^,,#jTcF%gOr0f6ITS=oNK"Ig?MdZ:,$"O&kFCQ68X;a\,ntHmZKWJF(>ut+iSh3m?u(2_H9j(hK!NgWi>L@adXbjeK+B]\7)DI)<pKf?a2R[%Lp`XA8uL^B`DY"`2GJO]9dX$F1%a3l(<X/ln%;T_Th^6?R&2t]^k/9RS<p#[b`K*L0kmZu`P:t5Ttn^]KCYJ\:bMpch<T8[cW*pQ%;HhFi_%;4UmHC(8@`*Y,Z5XMdjN:oGA"T\[/^u$da;p(;pXM]Cgdh^oQYi8PX2ZE5Kmi]Kri4c@@+?9d0dn9$[M33hEq7p+AS!)u%#ja]F4>h9*g0,=_YG)HYiI^Khj\KH%k=#A'dIs)kX0AK)kV!*0p[Go4d!rFT1f;Xd*BssDIN-:5.6Oi!F=3B)llXH2^Fo(7,.RLn%F3]je16No4aY^E.Sljtn3INkuIQY`GlXp^`P8r'tBJM(Nh'4*M[q-)1'CV5V,YLp6YqAnKYeHHLod7S0E!E?[G.NZ4ARV^oXEGO#%3fq;9*Q/5DPc&&"0pkm0p(@!T#k0a7=nNUITPd>hee"`Q5D@o,90)fDXN,>q!#j<aAQCHmI9Q6XfZVQ8B]N.&5n"CnoU*q/L++99%=@num[O]n7./`)^-AZpua"(s)<di3j9baGDa^is>5qdT1$Pb%JoVDUYSc+h!'N^:JIk/l&i>+4;e-XAH+TNOjZHdFX4c%q2`#TJn%L[l_a1%Wb>Fh/[_M/gJl4jfJC',fOj5i20gggZK.@Co"kW!7U-P<4mQT_g\td;ah\?^B^po7!QoF:&oFi!O+":!l-`6ic8q(@3cV%lGM$6&GTk3]W6*-1W`ARZ@p/\e9gO]OB>^li^MR?!*U.T;<Lu:8TDk!90]8/g58m=6VcTC$9^A$#/<g8lJ,#>L,`_tecbPUQu'W@%s!J42<<lr(%!T:cOm/RhgmFD+RDn7MrDoP>#2OV!Rq/Ieg2<d.N&Rk]hr<*^oY>PZfb:c?.Fc%)%?Ek&V:5Pj9*l!\_E;%&a_7\*%E&"8[!gXnZT!Bu#-`I[.Ejj1D\je+_Tc)r;h-3<GQPgg-s-+)lokq\/WpbE56Q><g`o[7#?iT/qJo?Tdn1UlUFEues1@4o\rpTmS%5Q<tJf73care7JkO8o!Yo(hahrjUd"q:GYgf,9Mb=)=''`Bh*ik?LSnX^1Rpg(#Y:eZkVd8V)q6D9GC+_)u/+?<K?76PUfjAuc?2%`1WO0Q$ATFZsCA=V>b$PeYkG2\5TKMAn_([Z9G>iF^R;g839GC,?RLi5mhL7Y@>O*r;&;Os0E"s\T.M53*kL*<^]*lZqo7^4>`ce%Rd2-VJS7C3NY)M)Bu7q?XR-@!.-jKFk9T,$,qs1l%TCD83aQ$unt;GL%S]4mTIK4>qXVTe6eNtX.E&![pC"]=IZ_#8&/.-fI"dCb%Oj0K[gCZ&48mo@?/A3;H4-@2M)9><AENK$?cskZUC_;jF<&jY,]O)7L3klLb:>u@d7e8qh*RM87DC=\o!%rGp+0p\5K"C!LN09+J%A<oAqEgh3d8gFe5Ru%nt&HZ)8fGm?^%6]E^5RsD(:5OgE1"H:XJ2IjH4phjVkm&V;JCfej(,EV>[-,ZZnelA-P-;4'9oo@+AbaD)%i&"s_G'b8M(.%p,q<)]U5Y:pn=nVcH9(prn!:/Tf85'KE=V-Xdk,db%3_ofC@QX%2Q<:6aZJ_Tspd\WK<pTP9NE8*R<%4#$mH'84%ljB':cqb%p4"+h=kpYYD$Ndl.L=)rM#3&O4JalQ&T%q2%Z6"(KIdCPNUc7fn_5paq7*rcYaGa=cO;inEq(c>p),oq@i)p5]cK];j%:MXX*&*tt>%9PUnb<_e`hhg@7ebmhY.+iO7?XTH;qXZL=BgusqA66Td%;*rSQm69.Q6s"&Mb0`Vc_Y2a2Jm9V\uD[@b_cF**7s%V%c`7r=P#gI]qS,fUL.)/;9E12r7gsutg(A=W`PCnN\V6iEaJ`#Re)(dT$7_c,<CC+IGYE*JT3>-VS$5=:jA,6EJ8\?%N_V!;.?\oM%S-GiTjI.1r#G8_^p2N`/XDgZ`Z*06fdYna0J2C<0d#7K!%HBQ%9G?t?;c1]#kB&FWM48tr?s:,2g"<7p)G=YDCPu+2[mm6Gp$mL@%ibE6YKtpM>!)V--7$97/=\r*W8b#&^#qC95bEElXJm*4]&nuPEdENsX0edoPT)pj8OHHC/',F3Eb>k(NR)."4_[[Qsm!,itO/OZS%$_iq32;<\5GS@GN.#(,jCF]<+k9/dP6Ad0HO:Ms[f.%K[,(P^oa[[g;>rcs[O&P%k*6i>+_iN\cl8j[QR[9_BbjES]7D\)HN^!Q5%N+3?LWXBdj6RNl[Y=eMgqbHdq8]+7s)&O."]][S@ODZ()],LDhe@-71./5ViMh:I>`N/`.)t<o>^/rpjLE7>p>]C2C$nN6f2MB#>%.%B1Z'F80u%:50#.]DpWgp0TWbH7@D`\\"#2Pc4_oj$aNorm+BaI9VZ'W*0bRSC:B$tBU*Lj0Ue)-'Qm@fFf8-+hEq[o,U+[0Xf3%@Wa+8Tlk91V+SEI)$O8^OUsS&)<a&AcO)Eume_+R,[+?!iF>I;_CuL=7?=;0j1480Q"6!Z)EOm=!iE9gnh\$.Y[94AIXD?92C(t?%YS[.o[Rh&ekh3ql3^`uSBa\hZ96d&XQ;),fVlg34+IiG.JU2eg\N/2pXc/<#]QKAm08%OOIWo4T:@gKpN'8ElP:=S2:m[5/!bn-7%rBA?;2))ae6bb9qp^P$ZJou24*4V7VcTaQg61T,[6s@pVX@Voo__=o-8KRT[#QrT!,Z-3U$.jq8!k/(&h6H?>_ri#@jZpH7@qsU_%5q29OM=GqSOr>Ae,nOHn7IbsSnp-9s=fos%?snkH!Ga-lSEQQ^1>tu)bN\U9?s"O;_h8'eHPd5j&=]*cb*/^R(5ORP*4!Mj$S;hS%Q!kM6U3a.Ek+pNZk/;+3IMhbjb=P3%Vq!#>%(GO:O,'\hL#PE:)GmS)(ao.n$r%Irlm"`BP.OBM/"n.Q12Y4d:lSR/D;?uNG?XL3%n8-KP1/0_MT,u`Q@d=;4^cS\[-jpg,B;9u)7t3li&hQ&>6uC&-r[42I@&F)Q>R3[SRuuWoP.L.V@&Zii;8TfC2^"m%1tW^UT^3b2%,q,#P;oebV[_HWBi07$og+lcO5\JLRc+B]uTYt!Pr&Rg^$YEl\D7?9n*s?AgNbO3+&9NIpH!F@>1fYUuDX3_ca-`UKNd=AFKh)>o%V.#T#>BI`+gW?0/A4f<f49=92>OBT/MXC-/)\K'@Uc'b(Qq^WoP7N.5ol&8*:=K-_lfF9h4+e258I\rNNZ"n;nr4^O_^[j,Cu$;G%jMR:$pk7kdOTJmHHt_1.iWU_8:@Y^1PF@&te\>/5<=ObH9N:Br2bKfj(eU*T@gPiH&(RHuGWm!^b1a;Hq_C6i]`>>arf'jRr1Z4B%knb[m)CWL]YKj`H8[8tOKMVj,KU7[t!!:lQdKIBIn?:OeP.A%o&r)mn.T8id::m)`Ib]K`K>2QX?a``1Y-".'<s\jVY_Y79LeAAb%"d5<-i\KGI+q[R_G$d*]D!KB2[j65/&hN7f$qNa\N9&(dT$N@,^`S2U:,6tec'V$KM9HJt'VtPp6Wf:3-$"q7auP^P-_DWVB9Ud%%MS$/,'>q`X?#3p6\/gC[0EeR,&Ba-'+sD)PIg#m@Q^u!6%'@;Y%.=Zk2U"P@Ia"'[V2_3=DH]B33+<!Q<F'SNc!6.\/'ZEQ?t@1A%bUQ<[QF._Z7KO%2MfOXU$1e@@r\eGCBELp[9WfR,N>2S[:L#1u<k_Ka@#P&_R]E$4#TA-TI+.NW%uG$1;dSpqW)5oMjN`FJEfQ[>%&d(Td5`sUc4f+6?3$U-^Tu^8)NYsurR4o4k/]qu%%ml7nLmInDEj'ukXeYli!Ur;q[l&@Ajt@JqE:I2*B*H>m_5Fom>AiM/d9DPG%H:$%`rTcC%N&.WqO#-iq"97d-6utg.PEes4K;'[u4q7jj.!g^cU^I[+&jXZ+2%rk,>h%=Ed]gdC.h."-p+jIrj)YW_:]AJ1dlnNW%T7/ARg;^("qFVCd"T3/QAQToP;>%f8)=/mg>t7eIT6.era.C43VrcGq/A=;d9391m/M&lS@uIM-/Q9K7^KK1TF4D`ujr3HWU9A#%%(\#Qk$E2)=M"$b'1Q$=WD>E3q>#S5qj0q/:bH`hT2-*B/6*P;dAAl*58MO</DgVga;.X+`+2;gU!JQmt+oF**hMYjH!]M=lMQ7.#%Lcu>i:!`E0`gb`r?RCNu.^<D\g>=C>!;V0S%<6$fj\u`':f<1J8Y'gTK?j'OrmpOFfY^<Z.=Ucgi`'.?p`iK-H)b&dp[Sil4R^Jc%fd0B^!'=pW5ibG2?DXkPH=,??m[@=B>Z[5#KE[Mu3EU%H%eV\]*`EOXGc(Z.j*roIE'`Qli57]&&`NB-!Maf>'OT0&.]-Wjp%,8P%Om)o^dR>e$-$bV[L)_u#KU0PGmuNea>\;:i(QOVM66G'R4%^XaF`Ur843-1qc>=7L?acuWfR-3hrq!V.-2VU=f0>aDSh+^P]Q/H<%gmX%Vr-"&D[`]bRhm\0gi92HZP;(ej)UK&NR62hk%3KN^O/Knoh;ZmiQ4QtPILj5RfmH-kZ@fIY7/TqS\bBjQM@^j69"lS3DFV:-%mq'VLC8bHroC&(%I%Pn*,ZjT[TDt+'NQm5IZPB;AnT\8u9e54^`%*O3gPY#Q!*^[EEt.P-3f0a#D1B2mhu_GO6q3$hF.DFU.(`jO%fD0rT)lrY8qZ_7\j@d2khIF-l/0!pt9m>Nhi>F8\URH3FceZ.F#/h$nLSk?(@4bK=.@`IuI3r1BKKm^dY;r]qEE+3\.SonN3S[u`%o#Jq*/Up`hFP<'Q*cT"5pcLr7RMS.+ZKheTpT?)GV2QMZiss5-_AT_EG,qtIGg_*`rn2uLA[\cCD9ME:>gjdUM1q+bEV<t4KrhEd%#nY$S$2]m:PpMo.Y2N"qbeMfb!k&&25#B@XC%$-J@N-0nf/;J4r.o(`KC;e@aLnGD/j'b];b:KG_,I*j-)kK(NsT)'Q@bdcTi98O%)(*;Il6LcR\X2T5q@jR%9W8j7*Gh`HocpSo-+?[4\J)J%XC!>9kZ[uDAJU@LYJ/[$R]5\H9t._mYkYkWCI:]96*`RS*6NaA./;ig%4m83q$D].RhhDspUJB9RTsuF#'^.rtE8rK8(?l#[eR"^.`+=M_6P,Co?/m(;+n@]6q%]NImUaL3/R.N_9GQFRkVeFkZfU5'E7/(r%Ed)'bVH,T/K&Di2">cMjdHVIALKkVO!F:NqBY#ac)3L9+Er5jrG<UY66#4ca*Ong#pWE]PCjA]./8cJ`_LB-Z)+oVr8UA7266F,p%ku=?p0?u#J-iIb>H-JNL?GhY\Z5UC9?]XHZTNr4M9*iFD-ebsJ'OV]A)Uhb.6e*3u\LG]/>\R,o%I=h"iGf@E(Lt4ooZNDiQ(#X&%rAu@0BN/<.f0qs%Mu6h(7?[pdIBR=COc9.<BTVpbR>k:TCNrme1qcqsa(-9M(N(lZN&M"%n)LD+!HHT\jX?/6D4!h5^>iupHVAWE%aRA[1-IAVZUBQQGV,KFS2E[smr\'!F0_d!uAe?MsiH)2R!KHS8*](%_EI+Wq3>e+r5rT4N]\6t:1;LQsl#4XR%Alc_3u9U:TIZr!%ZY#JseEo+VSaDlE<hn,%lF?VcWXQ4L;jUj4YU4JXMdp.UThh:d@K9?@qQ$s9/D7?6ni+8]4!o0[!F:cCSgsoVYWSPWWB).mSF]\\%0X/f`6WH_A4@i.O*uFGc+GuhKns[YtVh_N+5^\Um3BdfnDbrL6O;cWm4BRPg-u1^h$j0ES,?C?`pVH9G'<j<qL#LqQS-Y"kEr[\/%OjaLNFsu\T2.sS!'.T;456"tsQ>BIaFNj:DR,#gifo9XR5_Wp:A)CnT+PqqNDW]3ToiEqf6kIpqRe[knAkpfj$uMg5kEhgN-BcgM%mM9-+6R;AQRn2oULMOG"RIYZh^DBLP&:iH&$EU[p!"=QU(5)hBbI:d$hL3WOBmCb\V#p[Wl+.3m^\(ZEB2MEqT>%XoOZ`m!2Z&AP%cW'Ok'=T]cXhbp%Z@@r4'?Rk410`!IHftkP3eD'SrOL3foJo9A[%#W:S3ZE'63NPe\:Vc:S2?5oce?ua+<KJZcS*II.8]F&jZ)TU%]fu!WSb"bi,CZ]&$1Ujc5,>Ga4M/Ws<EntH@;ZH)h-K4ko)DjXIMs30@AD8<BANINbN'8OC<?$O%X;LA;"#Su5eIlfS/,-"p0-M_%1MEs\mM_Zc/krN<mP0"AQ5@7VAD[7GA`a)$:GgteG//LI=5SI#[jSMfD4H)6h9Ja6oDQB_lK8uP?<T9!^Mqpc6^nP9^4S-Pd,HYH%nc4[?on+@(%@EsUjTf-k##'8M->a_ViQW+*b^^"kYHIE^pf[6ulLTT*P"umD=kHOLqqo$2+1G;p+^(4*]"RA`aT_S%2l)ki!=j8e%YV'Xa$b3(T@XdH+^+T5Gr`"IW]LA$Q1[LVd`G=s$'i8dh^X/mQDCgc#YPB"Q`6d=EG=liTnGlq.S+Zm3`c5Ob.(d%8oLjj.#`=8+%fhd_U7m7Q2hm:41nH`WmnU<eW.&O+e4OuFJ)%C7!=6%%hbZ`s!AtIKL<X@`CW9<'^b7n2GgLh#mb\38*>#:'9Z)<5u[nO'+_ukO<%=#ua)1dG9XImtXj6sB)ePCEm85!EtXTHF$%11(gkVn[AC=+A)AKBSV[<"K67G*a/IGUtd)nXT;aC1)2+8;//dLm'erJV='NIOl]Y%6j:A]cU\5e+,&o>$3<O[,AuF/.KE1S+l3m3\>CWOnM2Ok!Q48/V\Q1]J_GcQU]RCqTM7m*KO?6)@"N?e6dIh=(&&<48-N=p2'>lh%1q\/`ik\.hRqq7`N`6RPdU&US(]qVc)6*]-U8!b6#uqP2UA1rZ'ejIp?oh7QcjE@nDQ&/k(%?3+YmR)r^$T2WHH/6REeYo5GJ/TM%`$oo@Sm3Cgs(+@?Z\ZEHYuf##VC?1`mhG^UA>nLVSgjLj3E-#H$gm3sX5M6Rm!`CYI)&oA<5B@N\A87q?h'/SQbd1p2Ut$ZT!/>^%$r`['VI%=uV+:au"l#`0<8`]'cp#@0$4aJ*P<9R$+n<[<90rS>5Wh9)MVIs!:rP5*DHm5jDO*T$9ZX"m#75.!.F4+`(kV8S)l^Ud%<n@+.;F0pibL[H.pj&$JS>=`I`Pqp,?Jt?fXbf:c9n,:&-eIrF.G"Y(CF(af"2i!S^:>:e-k)BO*o*;I=1@cZ&s1/WGBoVE."G7,%`]mYp\=d4,o$h)MAW>m8E0T>9]Ul<_\-0!cFBi=eEcY>ZbNWS/cfLTFZsrh;Y9fu3U[(C]NXKcBO26ha+0Xg-D!:ES.lEHmpl(-O%OFs28aL$D!J<TEIi;)a5&/(*%!u,im'TuF/Y0k#_9[8/QE#"lknpu@3.)+^,-e^"sL+F%GWk9g(9$h@)h8"YZqT<mj#e=_%R++aG%.Ct)Qic"o+0_aTWKhVA7g1okdd*KWiYMq:TXXf=8!NfmBA(BaSjDa;P3N9o1@Y,*Nrh#PF8/(%,04H$mqm4<#_gdE-TTgH#.,(m1%C4]kr9mq.?:PN8%?#Mt)A\(%2KiF\Y9c^#aW;9p.VGZoGA#Yd^Q68^8=BN?5&qmWdBU(57Yu2dGN+0Dl62KY-/2R=F%Y;U*&f-5/%pb:O9a7eE15:_lrotPS#Bd&!6@=-<.C&6k*W]42$E!)9f4r-PAqa_*$UnUC"P884\D2EPB1*71t)Hp2rKjugD/Qq/G1pK1J0["=*%,7>]LE&S^8`;O<.!eMb0=rIO*!qRV#^(bUY>_F"^fBp<4cctt'S7"6g"6>s\V_#XQrh<s5\VE$?nX(eQF18-g:Bn[V.Q!>#;B8cm%hjc,L>7Gt(3UEN(Whg0-WEa6ALnN'Z(K.hE`KEFB"r/h3%HsOf]Gn%aJ=CZA%E#aL"eB4N]OKrV7G&)Z2t4/XapB2&9`<QCDaE^H%bLEbei&0.AW/oPE&?^&S)HG*Q,maQX!HmD>ZH*+?]8J>p\,&N.CD[s517O5c>;]u*>(K=eS%jN?TC4SIj@rLa#T>lD"t"dm+t*eE%$sXCE:SJ.*.Z1ZC.&cJ9`"QN4p'+Q?4<EV"mLr#/J9Tr`bd-=:!TT.hp8^uV(a!UFlK:0^jBqLc+;BLK0q++2C^]alI^6Z7ECk))%O4E3C*mRLiLcZGc-j3!A:-uKd+(*(<5tALb&/GIh3Wh1ie98pq%E>eeqVs;AA,Yq%T(eEPW+0o]2DJ-X+I'ZB),<h3@dZO-h8i>Z%L,jF4^=X(J:T'P9M6_1-;6L!JTiVm"iFC6sTrA",`dqE-G,>b(4%-LG-\60/iC??[VEk#g!9CISITr9WeUDcYdNB7GD.q.:"e1u$%s$7\]mb=]&_oDr8#c;Tr$p*gu%&\t?4>$ui<iDU))GDsfA\[lr%cj/<^2>]N2!4$,`sQrYq/OOBMumA]!h\osUeP"lk.i69,iQ`K%7%=pFeQ=g>("N(7S/$=49\(TB\#+X[[(MhHJ?X]q;[RYTiL""gb>+'\>U,A0ANLl"Fjm!Z.u-Yc%)b),"<aRFZo=E6ERAD!NiFP>%UBhcmV9Q7-^OZ`(m6>WOr0YPRn/R(*NqOT4k9Rs69Q6TG*Q+CR'lEETG1*UZjHrJps1DOJ]^Q4]gfLHFD,MM<Za]rC\L1@5hdat;%@0/dug%,lWC]imNH_-1t%W[^s#a<;J6^?9qKIU=UKduPFmg_*krn:rG"5]S^^;9Kao-I`re76)hd_HppHO'&-Y/<K^@I>M]hZj#%%-WGr[UORtI@9P(Ub>9Jn,WEqanGRdkI9U$Ii3YI;WJg3?Gl,/D*cGtH&.ADh.J`Uah.YPk_8kA]=Yd)NF16FKPuq`:%qtR`UD=T-%^UBqPHEaR(P\=,84p-:@\17uC''gA&qUsp0PeSj/'o&u#*u<1$^AtHujaL1eQ@XP_8(7F^6m82S`bkk5_@J<DCBH3HWF:Ec@H*;"%;6MY^&0*%`ojtY*3_cd^@n"Mn?R??;PR",5J3nJ:L"P"3>VQTU*q1[R4lhJ5r<bo/)OH,l_GI29FRcOD.E(5>.^\Cs4YY?3ijWXg%McRe!2AKJB;i#2BFe8(J^<SuTh&@Na(*&.n,c&qIVDhhH*"=mcJm]NI`gAf7*[OOaG<gl:Lp,FI[1)aR#SmWA+,kcin)@$'0sH&<%VX@.e/7)`u.[_C@k:uLqJAmbUYV;t^U@#AL,38^C@sQ$Y*YY>A5IX&WF:eT(!sjpqfj?T!FEL#=qjC>Z0dA!&?P)W0"a8JO4_*S.%h3"t)]A)_F9m<gXlLMW#geBbtU4\i75ZrXaRBTR`s!VERNYZEQ.ZY`W&L%Emr;/QaGA2=[<Y[>s,pYiR=0)rF$<!Os?tu'NeCDC^%Wc1`)Yf*=haOkUP!76?7k[=UVAR]5%=80A53H%Q6>X.%/>.h:]d[NF9lULY/1sYjimhVuYH(,.>$+lZB-q&[r_dnloellqDO;FhW%g!H7C>>l\rYnd%)ZLgjG+ji5,.O%]T$0dOr%#pdLHCW$__'':UUKa1jj?E2me]X*bK5/H;gV76=@tClJ#hg1%NXa/.3R/+J7e(PA%[EKNl&\qA8:)WsoV(\<-1h\:e)M*D;biGOV%g7KW5l*RIaJ)R/'k;Z.@]oMXn@t0;ie[$"@=A0hP'_jBGZL;_L;<6mFh4<*W4FrK%qtf'!3]0L#5;mIqq;N%kn%UZW:Ym-hg@9@;=8u3[%fba:c1%:6G#F4sNZM.kLk<<*H!,eG5B*W07f`_])-aW!B=fgOO>UmS>ll#M%V2h2Dj`aD!gh.F&.+,@#mC[pPKN?`FgSU?U8]ZLj)OfSXP4BUC(&lK<PK4,.U5_STmG!A&NYD'NX8Mn_1=S^<+Jeo)p^QGl^PG@_%#h`K&R>.sGrgb8;Pp1SU2tJLCp/2lGo;s?>;3Bi&S$1>_Cj-?P-Gj9*9SfrQL*Whr`afRJ7F>tO[k)rr$:1ECq::HMZ:IBWU)"Nq%=lZJIbAduoGZaom%$D-DdLto(W8e*?mro!(g2oj;TLejKBt^K4KRles^K-ogD-7Lmd!<&#qqb=tY`P5=99RmA`%^\<fN4qH]:ao3%r.'l2_.[3s52YINP+OtoGBf(&EWj0<&?uoDM`.S=WR6s[k)p;5-7b8>dUNP%KRV+)hl(.n#pLIY@=N2@^_d4H#AVb;DfC=koG.Z0%kP>VT<>3#mk$/bA)1t=!S;,pP[1+u5g,V.`^lbI";1UCs]j\;oRg`oG[2qtihDJY1TlQd=!Z,;S[tL\.Ij`fKO>;4Tc%eX"M9@;`%gb?EYPt]Pi%o;'pQG@6kX%eg'ZQGpsl<6;*qU\#@\G0n?q9GgN-9HpZ:$cGkkIV%(!'J+A'H?"_?I\0JGXbdNW+(3g:B+uM*i0^g%53bIFX8^?Zqro=$pALN\D$u2ArQ`K/WO<7"0!L>:RF5j@q&TX5%^Qn96_q_N+&(^qmK'=j^I*dDH9_p=H?aaH^>Tm[es5L3(?))?%_C2U_:^W+N!i7kJB,]D0BG_4n<jq)PEH,.rQYQR-LRILGU\>[OQ]Ias&sjY1YQ&,p+?]TCe=2'eUOp&I_*/qA=@@NQY_?DA$9&=I%N7Up,ec3CJMAHG.6=bJ8+00q&CuEM[O++j_J,b:4rTlTr@kok82\P'J72lVqYO.C[mB`r8Q!-<5Ib>(L$\)g`-0>23VHfuiL4g*V%L`TqI>6hsuO;qAk_$?W`[52dVA0J@(LI\uQ@hIq:D9qgk?1bCQVQ6h;)j/:lE,`!VEub;"B4F.1@GupR"#g5/_8HgN^mTd#8-[DU%*TpR0E8#_>g]$+](+g0n9[(j`O._10c*r,5U9\WH%8b<mFd,Fh!FJOPR:PJJ*">bF^0Hl=pW(hrHXnA:CP69!fhmmUBOmAn%p]O=%AL`:<LMMQ[J+-W_s*o/sbAJT9&c;_/K.]2C^ito20<bWrBYZh,D@!O%2DCRW1^b9%HZqk'aXjiAgPtH8Z&2+.1RShH(LeKmdL/Ka%jQKr[$)oah:g,baLDUR\<oQ\>22"Y)6#Z6hH4I$,R.LG92<-r?.J-aQlgh7lm*jD\>SpH5Mq711E)qK@a<*pXrIX<^;(&+aE%c1+%WX@c?:rkS%+EaY%S#AD&lrQ>*Jsq`_Od?<6h#`Pqr!G[+cqQ.Y'k5m9chd_FpZDUcE>Ia]+\nB,6Fi)@kR`g%el13=<ecf8$@8[p%>[ZB-7A5M=c'op+nQ6M>nLJ?`VpuHK4=:=g(]>&'i=<NnN<-$/4=n&n1jV"!Tg)PqYKoRA$%^'3Nu53o1C"<EmWL']3a.DS%*KLF%cIatnJnI]n)'c3GO($%aI0YK"_j3)sA5q)$MCm?%rm-;Hmoj&?^i+noa(,8XF4RiTZoP4`#g?YZ'YWgM$ucomXDs46Y"u!*!9e-_%26LS8f''>LGt:=imcT7s-m^m4-18i/CjVkW`Sa@g]\.NQmA*!Rp&aXe't,(PAiS=\]!FM;+`qfo=5-hSq],SJb!Y\'fbtBNDa<ET%&OVml"L/376-L26O-uJI1glN.a#gT5L6k[ej>s%R&jLtK3GD?/Uaj=AT^.=VmT*?O^*'G9(6KZJ@F.lt7Z/*q3%,5\'G#d>iS=+b%?@eZ/Og\X[W#*_H$P%I@5``L=X#LI>p07D81jIJ3)^MeW6;u*n9[]EQ4%#-@TX$WAQ"MZ_;:eLrl'heHR1@+Xhb91D"Ife3Iq4Ba%"pd*C$TiqYPla.2p77\B7a_rj0unaXpQP(i122ib34<\<Gt=f]'d\C5eQNO6`+mOK)PoaSBk]jl%u$?s!A\#MLKgP^R7g]?'/l3T%eRLS9ioC%.FcrjM\DqH9F<-8)@FeaBT6LDj%j%0pE'oUTMdKq70*I[co^74$KfulM\eOk,L4Fhi/#9a`PHU)tBeModj::=3m&b58%DC\soA)"UP[0(P*QVsiCTl[rr0]FJbb4S(1C/FF=eX25dq>&*L.s.0&kki&)3St[!0eb?5:V<7&[<&XE853H"b<2JjN_6oH8@Gfd%A=cf_O@=hHqB;\0-2Ee5IaBB:ha@6A093$PKckqPjT$jU=T\95le---IV.T#AZGDb#fRif:ZS0Dj\r*1+6G2^7jGMak3K9RR[?Ob%X`Z^5+_sJ;S(P#&4K94:I^3dNXasCKr@;P"2Uj6epP1jFQ>i&20i3Q1(NESFDoNE@M@LOE-pe1PT,pMO#2_rph$>i<e2_,LLif=b%IruT02$KFd^Q&W5m=.Dd7(j^ZM&CS=rD5c?F$[&>'0f$uj3HTb<?UEHgJH5nP>uO;R31i/d,jh/P$*W8*j6aL'*]U)KZbEHY(N7'%XL.YS,qdcp@6b/=At"c-`_99C/+0eja<L-_0l(Fk+.&45ih2T9`lX!g1iPOKg*^]33V=LbEDt0NJ(a:g?r3XW2mYKug>ufaDJt9D%I@,IhM&t;rftuNN[]gKWi5^s=h*D6:*3Gc`N)#Mul@KFfA>lDC@Qq)eFbd(:VE0ac.2rBHfPaMm?;ua8+d$`BbNg`&lo$IsL56RA%\0lr]/11%^UJ-!<"kH-SlNX3R(5?FeCn!8C;P2&9b.]$e=-Q\DBIB.dYa.,lUPX="XAaRp:q]YMKA;ZQ3VoEX"E^I7>H!9fGatJP%fgl.;lk$h!RgYHC6E.8$h_P[d5[Ib,BOYS-d,b"^Y0$b3)sZWDTTimJFDebaJKB8_iUWORY>kAV^"^['S.MheZH.=<VbOjrZ(cE\%$c>VrWTmEe:du%>4H/$IWeeX+@;RWeo<&SRa?:ck#B!:QeKLL.MPGSq(s;m22A3cX_X+s3?lIFcjhgL5bc-RM`Q%^*!]3D2P4S[O%n62=UrpJVOrH3o[%dq([n51-[otCjG3XD%sEjcEc[^$f<Q>X;t`A,aNP'LH8Pa'j/3qOnWT#;7bjpit'Q^a1K8'l"-$o^4.a4qHi%W5X6"Y%!MNF`tF<d[UR+9]Y!q/'ait6t&X9VmL8E&l,HdYeADj9>ep=gjPi2qRfC.^MFU0,)o>5;6fpHOWOX[X)PYUibj+ZpTs@_%aqiTC>4N+=WN<F3(q*-%L0YhN=Hk\aQ!c$F%iS>QH!=CY2:Z*gYFm0U*Adkh;h,Pb()QgG]IAk5h7G8f@rm!]Hu"aL@FKFaVQ8&7%!/\/;.^T19AUr.j6472llXsls1"a,@Mu!B7XI.'=.McL(#5r9S4!2;R]jck4'EplG3UPT+T-B6$ccQ-eg\!U9G3ZY!r="<,Q_lU=%.%*;$pel]\L11UM77JYP!hq.bBLC`B<7*iqJ$6*s1,(ejYdn=FfML2ed$na/Zt!,cC$k(iW^f;h.eY_cc57@PM.)6Bi"`!ADYAP[%:%ViY_+em!!,pA)<dBO^;T%Fo#AhhISp&s+*Ob;EXWU5Q?X_+n6/"XOLAM?Y$MZ-3!)fLTiSk,$aaiQgiWpY=I.e:FCh1Qu)oMIX%p\!f+[^['5N=?enBjfm;`Ymt8=aBB(GsZPC2k"4JQ7X+^=EZPIqR-s7?B5g!Vs"6t=a\0\e,@#@GuLB0+54%N"H))-RE2u!2sffa%gKRJ+!O'LF(b!_hqD2<pTjX>&Nqg1OKPG@YdjXb%X^H1#&(q<tU%[dCfNN"9\iAuAR/+R/14f&Vr^'H@bRK.mS`;i^.%Mc5*j@iT%*'Q3+As<R=A3%LG6g82^.FH"o-poX7rH`KM]uH`"ZPh6p42P5n#jV4B0I4-jc=cj_qSq*d_,W"h(d*PIdDJE@M8EI_^E:kV##(YH%b!2]L=gK5+;T5b"SgUMc)>jq'p3>k_$K6\H4!#<l_BQSoMha1LckU>e]V-C(/235fN^9r50/'\OD$u$AW-ElJ.fj[h>1KmKCS)lV%VDokhfX>it]]6fA7rh)WQ%D$0g'L?H)O;FTNDPA2]NpFa(3jJjC"aS0m:?p.;Ftn@aC>3*Za)%MCIM^qhR5R*m5S$Ss#=KhQ[.!V%Xrs$496Sl+j9$c-$+/D"me_uBP_4#!D&d"<%IGdHXD=O`'eNG7b^M9n@JkZ\QpKf7"EC`T2r*jERsG7hE@Kb&hg<B:?emntrcTHQ%V;CpSGfJYP=a^H.4BGtm"QQ7(5#kYuN2!I/9rE^qG<`F2N&kta?2L,1VsY*abV;$QShPs:7rm/,1d:C_XI6ZuGdDP^4R&ZHl"u3M%!#K:]=G&>-pEo=cbst5=7qSS[23O-aTE;t7C:6tcBL*Xn+ITbP9J#8rJ:uQs76PNcjJ,_)UKIg1Jj'X*Wo=cgMPtRQ8B$Qh[I4t;%UXTJL[APFOUG3K5]W5KIcm_ORK"S:X>iX24'SqDf.hY5)"!S?qO5&Ci_+BnIgF'kO06b2(.54JZ*@R=---418d3@("GpH?s@Iu@7%2o;^]g'Phs=pUS6L1@A\@DV0U\GM"#5HH4UgHuG^UiA#K\#QGScW%BKXk`VTGSQW(4g^-=3<7'$`EtEa)c@3i:dn6`-ua;0?^e\n%#T:[f!Kjr1@.)?O8`EuWmX[T'MPVF,K.3bX]G)YXDEF61?*H^r@tu9O\TWb,LAr*jhO'or6pSdGnY1YJ!?D`1i"f3CZO;X+KO#Uq%C]#n]$LKW6?kFE80;t.&A4epngkO1h?lkW)_)56+)=7hfWa'828:gi^=uP0>Q0M]>"Cu)O-AQ#='%e9s6Oo:;1)qhk"NuU)=;efC%!ol<5CDOsi6-fhfd_Ln!#gU%Q4ZnLn_+k\W0WFUSmQhNpZ6Ur+LoFB1Q^4pW'?2<;A^":I:aXSaJ;5+'TU.u^&,.6#;Ft:bB+ao.%5]ocD@"][(-=Z>]Wk(+i.A8910"?]>'!!%a_%mdp15oX3&BQ/.?=C"m/5oe^!ChC:Z(JKkLLI[iI_UG[:'oq@H>Hs^c!sS)XcmX!%A,I>#?LWQD'+CGK4S!ZIER-SF^h%hXe4m8@OoG_V`"\a!$9CNm+(A'-9s:4a<4_0EZ0;GDW4nA]0-I`F'Gh)-,XGEP03::9&RA@A%6&QVloMFV^OmN<*Co;nE2QsR]l_QWq(h:@hK(jjOdct_YoJ"*-1A2qS-eMkNiE`YVF)6PoCI7`%R$0Eaq0Qk#^44K/]G4Nq1,"e+%0]VL9B1Aqtd+RJ-Qj_:X[\D:VXeM9W:6@dA;Nl:D>HFlVinCTjj63=k&s\Z=We&q8NT9Y/*O]8smV,PurWT`:.U0r95Af>j1o9"[%?dt0,#k=-S5dr-f^ard@MNsF/K[E+kb%P39Bs]U#AZXd\QQ:DQqatB0F'bC'7p4#L4g8.p*h/(/]tc;*\R7-4AbZFek#T;N[VZ`"%Zh.BFAl"EN+3gC5'>$pEcQ(s)r?cbZ<S7=orT3#&:VYGps8(atfB<1I^0`K':JZIgrq?2tpZI$SIslhAp@J)EYE.!oI\7Rulb@B<%o(_VNp#dF3^V;u3r9*PK"`jL_r:naiYCHB>_uB`srC_5~>%AI9_PrivateDataEnd